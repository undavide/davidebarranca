<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <description>Digital Caveman. Photoshop retoucher and script/panels developer. I am also an author, check the Courses page!</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 16 Apr 2019 22:04:31 +0200</pubDate>
    <lastBuildDate>Tue, 16 Apr 2019 22:04:31 +0200</lastBuildDate>
    <generator>Jekyll v3.8.5</generator>
    
      <item>
        <title>Printing on demand a Leanpub book with Lulu.com</title>
        <description>&lt;style type=&quot;text/css&quot;&gt;
table { padding: 0; border-collapse: collapse; margin: auto auto }
table tr {
  border-top: 1px solid #cccccc;
  background-color: white;
  margin: 0;
  padding: 0;
}
table tr:nth-child(2n) {
  background-color: #f8f8f8;
}
table tr th {
  font-weight: bold;
  border: 1px solid #cccccc;
  margin: 0;
  padding: 6px 13px;
}
table tr td {
  border: 1px solid #cccccc;
  margin: 0;
  padding: 6px 13px;
}
table tr th :first-child, table tr td :first-child {
  margin-top: 0;
}
table tr th :last-child, table tr td :last-child {
  margin-bottom: 0;
}
&lt;/style&gt;

&lt;figure&gt;
&lt;img src=&quot;/wp-content/uploads/2019/04/ProPSScriptingWithBloom.jpg&quot; srcset=&quot;/wp-content/uploads/2019/04/ProPSScriptingWithBloom.jpg 1x, /wp-content/uploads/2019/04/ProPSScriptingWithBloom@2x.jpg 2x&quot; alt=&quot;Leanpub&quot; /&gt;
&lt;figcaption&gt;&quot;And this shall be mine, human...&quot;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Authoring a book is awesome – especially when you’re done with it – but holding an actual object in your hands still gives a special kind of thrill. I’ve just run an ultra-small print batch of my &lt;a href=&quot;https://www.ps-scripting.com/&quot;&gt;Professional Photoshop Scripting&lt;/a&gt; book, that I have self-published with Leanpub and printed-on-demand with Lulu: in this post I’m going to describe the whole process, what I’ve learned from it, and what I’d do differently to make the result even better.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt;&lt;br /&gt;
There is some room for improvement but all considered I am pleased!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Disclaimer&lt;/strong&gt;&lt;br /&gt;
In my daytime job I also do some books designing for my client, when asked; I have a decent understanding of printing process’ technical aspects in general, and I am familiar with the related software. In a previous life of mine I’ve been a color-management consultant for press/pre-press too. Nonetheless, this whole “get the book printed!” business took me by surprise, and I wanted to go through it as swiftly as possible; as a consequence, I admit to have taken, sometimes, the quickest path (i.e., not the best one).&lt;/p&gt;

&lt;h2 id=&quot;why-have-i-got-a-printed-version-of-my-book-in-the-first-place&quot;&gt;Why have I got a printed version of my book in the first place?&lt;/h2&gt;

&lt;p&gt;I didn’t want to; I mean, it wasn’t planned when I was writing it. Jeffrey Tranberry (&lt;em&gt;Sr. Product Manager, Digital Imaging at Adobe Systems&lt;/em&gt;, and long time Scripting advocate) has very kindly accepted to write the book’s foreword: he’s gotten in touch with me a few weeks later asking if it was possible for him to receive a signed copy. Sure, I’d be glad to! Although it took me a moment to get accustomed to the idea that I, Davide, was the one supposed to sign a book for Jeff and not the other way around – in 2012 he wrote &lt;a href=&quot;https://www.amazon.com/Power-Speed-Automation-Adobe-Photoshop-ebook/dp/B0083JCBZ2/&quot;&gt;Power, Speed &amp;amp; Automation with Adobe Photoshop&lt;/a&gt; with Geoff Scott, the only other book on earth that touches PS Scripting.&lt;/p&gt;

&lt;p&gt;The main problem was that I had no actual printed book to send, just a PDF. I felt morally obliged to fulfill Jeff’s fair request as soon as possible, so I started my research for an online, print-on-demand service.&lt;/p&gt;

&lt;h2 id=&quot;creating-an-ebook-with-leanpub&quot;&gt;Creating an ebook with Leanpub&lt;/h2&gt;

&lt;p&gt;My starting point was an ebook that I self published with &lt;a href=&quot;https://leanpub.com/&quot;&gt;Leanpub&lt;/a&gt;. If you’re not familiar with them, you are allowed to:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;[…] write books in Markdown (our dialect is called Markua), Google Docs or our visual editor, and publish an ebook (in PDF, EPUB and MOBI) with one click. The Leanpub store helps you sell your book while it’s in-progress, getting reader feedback and earning 80% royalties. Or, upload a completed ebook to sell in our store.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure&gt;
&lt;img src=&quot;/wp-content/uploads/2019/04/Leanpub.png&quot; srcset=&quot;/wp-content/uploads/2019/04/Leanpub.png 1x, /wp-content/uploads/2019/04/Leanpub@2x.png 2x&quot; alt=&quot;Leanpub&quot; /&gt;
&lt;figcaption&gt;The Leanpub book's author backend page&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;I couldn’t recommend Leanpub more&lt;/strong&gt;, seriously: as a company, they offer extra services that I don’t really need (book landing page, e-commerce, in-progress publishing, etc), but their writing platform alone is superb. I’ve already used Leanpub for my previous book &lt;a href=&quot;https://www.htmlpanelsbook.com/&quot;&gt;Adobe Photoshop HTML Panels Development&lt;/a&gt;, hence I was no stranger to the whole process.&lt;/p&gt;

&lt;p&gt;I took some R&amp;amp;D time to evaluate alternative options within my reach: I could use InDesign, iBooks Author, write in MarkDown and convert to PDF with Softcover or Pandoc&lt;sup id=&quot;fnref:Pandoc&quot;&gt;&lt;a href=&quot;#fn:Pandoc&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;. After some pondering, I decided that they all required too much efforts on my side to customize the result compared to Leanpub design, which was excellent out-of-the-box; and so I went with it. The book in itself was already a tough enterprise to undertake, I’d be better off spending my time on content creation.&lt;/p&gt;

&lt;h3 id=&quot;writing-in-markdown&quot;&gt;Writing in MarkDown&lt;/h3&gt;

&lt;p&gt;To briefly describe the process, &lt;strong&gt;I’ve written the entire book in MarkDown&lt;/strong&gt; – a textual format with handy shortcuts, e.g., &lt;code class=&quot;highlighter-rouge&quot;&gt;_italic_&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;**bold**&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;[^footnotes]&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;![Images](graphic.png)&lt;/code&gt; and everything else a writer may need –, keeping the files in synch with Leanpub via Dropbox&lt;sup id=&quot;fnref:hook&quot;&gt;&lt;a href=&quot;#fn:hook&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;figure&gt;
&lt;img src=&quot;/wp-content/uploads/2019/04/Markdown.png&quot; srcset=&quot;/wp-content/uploads/2019/04/Markdown.png 1x, /wp-content/uploads/2019/04/Markdown@2x.png 2x&quot; alt=&quot;Markdown&quot; /&gt;
&lt;figcaption&gt;Using the MWeb app to write and preview MarkDown.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;I’ve used &lt;a href=&quot;https://atom.io/&quot;&gt;Atom&lt;/a&gt;, &lt;a href=&quot;https://macdown.uranusjr.com/&quot;&gt;MacDown&lt;/a&gt; and &lt;a href=&quot;https://www.mweb.im/&quot;&gt;MWeb&lt;/a&gt; to write MarkDown, yet there’s plenty of apps (free or paid) available, even if to the best of my knowledge none of them supports the Leanpub’s &lt;em&gt;flavour&lt;/em&gt;.  In the last years they have been working on the specs of &lt;a href=&quot;http://markua.com/&quot;&gt;Markua&lt;/a&gt;, a MarkDown superset that specifically targets eBooks creation; it is already available as an option to authors, but besides Leanpub’s Markua online editor I don’t think there are apps for it.&lt;/p&gt;

&lt;p&gt;You can trigger the book compilation on-demand, either the entire content or just an excerpt to make the task quicker; the compilation itself is performed &lt;em&gt;on their servers&lt;/em&gt; and the results (PDF, ePub and MOBI files) uploaded to a shared Dropbox folder automatically. This is the main Leanpub’s downside, in my opinion: depending on the amount of content you’ve written, &lt;strong&gt;the PDF generation process can take few minutes&lt;/strong&gt; to complete: besides the transformation from MarkDown to PDF&lt;sup id=&quot;fnref:md2pdf&quot;&gt;&lt;a href=&quot;#fn:md2pdf&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;, you have to wait for the files to get uploaded to Dropbox, and downloaded locally. Alas, we’re not used to waiting anymore.&lt;/p&gt;

&lt;p&gt;Speaking of the PDF, which is what you’d use for printing purposes, their book design has a &lt;strong&gt;classic and professional look&lt;/strong&gt;, very well suited to technical publishing like my project.&lt;/p&gt;

&lt;figure&gt;
&lt;img src=&quot;/wp-content/uploads/2019/04/BookDesign.jpg&quot; srcset=&quot;/wp-content/uploads/2019/04/BookDesign.jpg 1x, /wp-content/uploads/2019/04/BookDesign@2x.jpg 2x&quot; alt=&quot;Book Design&quot; /&gt;
&lt;figcaption&gt;The Leanpub book's design is professional and well balanced&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Keep in mind that using a markup language also means that your content follows well defined formatting rules; while you focus on the writing, the book “composes itself”, so to speak. On the other side you don’t have pixel-perfect elements positioning as with, say,  InDesign. Some trial and error is intrinsic to the process, but it inevitably extends the waiting time in-between PDF generations.&lt;/p&gt;

&lt;h3 id=&quot;exporting-for-print&quot;&gt;Exporting for print&lt;/h3&gt;

&lt;p&gt;Leanpub has a specific Export option called &lt;strong&gt;Print-Ready PDF&lt;/strong&gt;, that is the one you should pick when your goal is ink on paper. It slightly differs from the traditional screen output, quoting from their website:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;It has no cover image. Services like KDP and Lulu want you to upload a wraparound cover, so our ebook cover image would be redundant. Instead, it starts with the inside cover.&lt;/li&gt;
  &lt;li&gt;It has alternating page numbers, so that they end up on the outside corners. (The outside corners are the ones which are away from the book spine.)&lt;/li&gt;
  &lt;li&gt;It has alternating margins: the inside margins are often wider than the outside margins, so that you can actually see the text on the inside margins. (The inside margins are the ones which are next to the book spine.)&lt;/li&gt;
  &lt;li&gt;It has occasional blank pages to ensure that chapters start on the right side.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There is an alternative &lt;strong&gt;Export InDesign Files&lt;/strong&gt; option that outputs InCopy &lt;code class=&quot;highlighter-rouge&quot;&gt;.icml&lt;/code&gt; files, one per chapter: your job is to manually insert each chapter in a provided, dummy InDesign &lt;code class=&quot;highlighter-rouge&quot;&gt;.indd&lt;/code&gt; file, which you can then customize to your book designer taste. Since I was in hurry, and Leanpub had a (now fixed) bug in the InDesign Export, I postulated that the Print-Ready PDF was a good enough starting point for me.&lt;/p&gt;

&lt;h2 id=&quot;choosing-a-print-on-demand-service&quot;&gt;Choosing a print-on-demand service&lt;/h2&gt;

&lt;p&gt;My dear friend and Photoshop retoucher &lt;a href=&quot;https://www.colorduels.com/&quot;&gt;Daniele Di Stanio&lt;/a&gt; promptly pointed me to an article titled “&lt;a href=&quot;https://medium.com/@mwichary/my-experiences-printing-a-small-batch-of-books-c04141b63dfe&quot;&gt;My experiences printing a small batch of books&lt;/a&gt;”. The goal of the post’s author was to publish&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“a simple, old-school book with… letters in it”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I.e., a novel. My book, instead, is in the &lt;strong&gt;technical publishing&lt;/strong&gt; category (software development), with illustrations, screenshots, few photographs and a lot of syntax highlighted code. Our needs didn’t really match, but it was a well-thought comparison of &lt;a href=&quot;https://www.blurb.com/getting-started#&quot;&gt;Blurb&lt;/a&gt;, &lt;a href=&quot;https://www.bookbaby.com/print-on-demand&quot;&gt;BookBaby&lt;/a&gt;, &lt;a href=&quot;https://xpress.lulu.com/our-products&quot;&gt;Lulu&lt;/a&gt; and Nook Press (now &lt;a href=&quot;https://press.barnesandnoble.com/print-on-demand/&quot;&gt;Barnes and Noble Press&lt;/a&gt;) anyway. For a while, I’ve evaluated local, Italy-based services as well, yet the price-tag was way too high; I also tried to understand how &lt;a href=&quot;https://kdp.amazon.com/en_US/&quot;&gt;Kindle Direct Publishing&lt;/a&gt; works, but I couldn’t get whether the printed books must be sold via Amazon or could be directly shipped to the author, so I gave it up&lt;sup id=&quot;fnref:time&quot;&gt;&lt;a href=&quot;#fn:time&quot; class=&quot;footnote&quot;&gt;4&lt;/a&gt;&lt;/sup&gt;. If you have experience of KDP, please let me know in the comments.&lt;/p&gt;

&lt;p&gt;Each and every print-on-demand (POD) service provider offers some sort of “Make your book” page where you choose the book’s options, such as Size, Binding, Paper and Inks, etc. and gives you an estimate of the cost per copy. Depending on the print batch size, small discounts may apply as well. I suggest you to go through that process for all the PODs that you want to test, to understand which one better suits your needs and budget.&lt;/p&gt;

&lt;h2 id=&quot;printing-with-lulu&quot;&gt;Printing with Lulu&lt;/h2&gt;

&lt;p&gt;At the end of the day, I decided to go with &lt;a href=&quot;https://xpress.lulu.com/our-products&quot;&gt;Lulu&lt;/a&gt;; probably other PODs could have worked fine too – after all I don’t have ultra-specific needs –, but one can’t keep splitting hairs in two for too long.&lt;/p&gt;

&lt;h3 id=&quot;books-options&quot;&gt;Book’s options&lt;/h3&gt;

&lt;p&gt;In Lulu’s &lt;a href=&quot;https://xpress.lulu.com/pricing&quot;&gt;Book Pricing Calculator page&lt;/a&gt; I could test how the various options affected the price per copy; besides a large variety of book sizes, the main choices were:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Binding&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Hardcover Casewrap (traditional hardcover, stitched)&lt;/li&gt;
      &lt;li&gt;“Perfect Bound” (milled/glued)&lt;/li&gt;
      &lt;li&gt;Coil bound (with plastic coil)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Inks&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Standard B/W&lt;/li&gt;
      &lt;li&gt;Standard Color&lt;/li&gt;
      &lt;li&gt;Premium B/W&lt;/li&gt;
      &lt;li&gt;Premium Color&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Paper&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;60# Cream Uncoated&lt;/li&gt;
      &lt;li&gt;60# White Uncoated&lt;/li&gt;
      &lt;li&gt;80# White Coated&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Few remarks.&lt;br /&gt;
Lulu’s &lt;a href=&quot;https://xpress.lulu.com/our-products&quot;&gt;Producs descriptions&lt;/a&gt; fall a bit short of tech specs: each option is related to the final result instead.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/wp-content/uploads/2019/04/PrintOptions.jpg&quot; srcset=&quot;/wp-content/uploads/2019/04/PrintOptions.jpg 1x, /wp-content/uploads/2019/04/PrintOptions@2x.jpg 2x&quot; alt=&quot;Print Options&quot; /&gt;&lt;/p&gt;

&lt;p&gt;For instance, Standard Color is &lt;em&gt;“Ideal for text-heavy content with a few color images, graphs, or illustrations that have low to moderate ink coverage”&lt;/em&gt; whereas Premium Color’s &lt;em&gt;“Ideal for image-heavy content with heavy ink coverage on the pages”&lt;/em&gt;. I can understand this, but it tells nothing about the kind of inks used, print resolution, the Total Ink Coverage allowed, etc.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/wp-content/uploads/2019/04/PerfectBound.jpg&quot; srcset=&quot;/wp-content/uploads/2019/04/PerfectBound.jpg 1x, /wp-content/uploads/2019/04/PerfectBound@2x.jpg 2x&quot; alt=&quot;PerfectBound&quot; /&gt;&lt;/p&gt;

&lt;p&gt;While Binding options are illustrated with photographs of the final object, no such close-up pictures are given for Paper types or Inks. I suppose 60# and 80# refers to the paper weight, in grams per square meter.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/wp-content/uploads/2019/04/PaperTypes.jpg&quot; srcset=&quot;/wp-content/uploads/2019/04/PaperTypes.jpg 1x, /wp-content/uploads/2019/04/PaperTypes@2x.jpg 2x&quot; alt=&quot;Paper types&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Given that my original PDF was US Letter (8.5x11 inches) sized, 400-ish pages long, this is the cost per copy for a variety of different Ink, Paper, Binding combinations:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Ink&lt;/th&gt;
      &lt;th&gt;Paper&lt;/th&gt;
      &lt;th&gt;Binding&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;Price&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Color Standard&lt;/td&gt;
      &lt;td&gt;60# Uncoated White&lt;/td&gt;
      &lt;td&gt;Perfect Bound&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;$17.40&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Color Standard&lt;/td&gt;
      &lt;td&gt;80# Coated White&lt;/td&gt;
      &lt;td&gt;Perfect Bound&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;$19.40&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;B/W Standard&lt;/td&gt;
      &lt;td&gt;80# Coated White&lt;/td&gt;
      &lt;td&gt;Perfect Bound&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;$9.80&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;B/W Premium&lt;/td&gt;
      &lt;td&gt;80# Coated White&lt;/td&gt;
      &lt;td&gt;Perfect Bound&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;$15.40&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;B/W Premium&lt;/td&gt;
      &lt;td&gt;80# Coated White&lt;/td&gt;
      &lt;td&gt;Casewrap&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;$22.75&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Color Premium&lt;/td&gt;
      &lt;td&gt;80# Coated White&lt;/td&gt;
      &lt;td&gt;Perfect Bound&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;$65.40&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Color Premium&lt;/td&gt;
      &lt;td&gt;80# Coated White&lt;/td&gt;
      &lt;td&gt;Perfect Bound&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;$65.40&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Color Premium&lt;/td&gt;
      &lt;td&gt;80# Coated White&lt;/td&gt;
      &lt;td&gt;Casewrap&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;$72.50&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;My book is quite long, so keep that in mind when evaluating prices. Printing with Lulu goes from a nice $9.80 for a Black &amp;amp; White Standard Inks on the best paper with glued/milled binding, to a surprising $72.50 for the top quality options in all departments.&lt;/p&gt;

&lt;p&gt;You can see that the paper choice doesn’t really influence the price that much, $2.00 spread over four hundred pages is half of a Cent difference per page, so &lt;strong&gt;80# Coated White&lt;/strong&gt; was a no brainer.&lt;/p&gt;

&lt;p&gt;Inks make the greatest difference of all: +$5.60 to upgrade from B/W Standard to B/W Premium; +$4.00 from B/W Premium to Color Standard, and a whopping +$46 to get from Color Standard to Color Premium! I understand that the more expensive option is for Photo Books, which mine is not, out of question/budget. I was left deciding between B/W Premium and Color Standard: since I have several graphics in color, pictures and syntax highlighted code, I thought that it’d be cheap to print grayscale so I went with &lt;strong&gt;Color Standard Inks&lt;/strong&gt;. Finger crossed for the &lt;em&gt;“few color images, graphs, or illustrations that have low to moderate ink coverage”&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;I should have picked Casewrap (the hardcover, stitched binding option), but +$7.10 looked too much for the cheapskate I’ve become in my forties, so I got &lt;strong&gt;Perfect Bound&lt;/strong&gt; with a glossy finish.&lt;/p&gt;

&lt;p&gt;My final price was around $20 per copy; I ordered the titanic amount of 3 copies, which added $23 in Ground Courier Shipment, 4/5 days to wait. With my country’s VAT, all this print-on-demand test of mine was worth something more than $90, or about $30 per copy in total.&lt;/p&gt;

&lt;h3 id=&quot;preparing-the-pdf&quot;&gt;Preparing the PDF&lt;/h3&gt;

&lt;p&gt;This section is going to be a bit technical: if you happen to read this post because you want to Lulu-print your own book and it’s not text only (e.g., a novel or poetry), try asking a graphic designer for help. Being subscribed to the Adobe Creative Cloud, I have access to software such as Acrobat DC, InDesign and Photoshop, that I’ve used extensively here.&lt;/p&gt;

&lt;p&gt;Grab all Lulu’s relevant &lt;strong&gt;documentation PDFs&lt;/strong&gt; from &lt;a href=&quot;https://toolkit.lulu.com/&quot;&gt;this page&lt;/a&gt;, and give it a read.&lt;/p&gt;

&lt;p&gt;First, duplicate your Leanpub Print-Ready PDF. Open it in Acrobat and add the recommended &lt;strong&gt;bleed&lt;/strong&gt; – in my case 0.125”; make sure you have a single page (not spreads) PDF with an even number of pages.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/wp-content/uploads/2019/04/Bleed.png&quot; srcset=&quot;/wp-content/uploads/2019/04/Bleed.png 1x, /wp-content/uploads/2019/04/Bleed@2x.png 2x&quot; alt=&quot;Bleed&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Speaking of &lt;strong&gt;Transparency Flattener&lt;/strong&gt;, Lulu provides a &lt;code class=&quot;highlighter-rouge&quot;&gt;Lulu-High-Res-Outlines.flst&lt;/code&gt; preset file: you can’t use it in Acrobat, only when exporting to PDF from InDesign. But from InDesign you can edit it to find out what the settings are.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/wp-content/uploads/2019/04/Transparency.png&quot; srcset=&quot;/wp-content/uploads/2019/04/Transparency.png 1x, /wp-content/uploads/2019/04/Transparency@2x.png 2x&quot; alt=&quot;Transparency&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I am fine with everything but converting the text to outline, so I run the built-in Acrobat Transparency Flattener at high resolution:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/wp-content/uploads/2019/04/Flattener.png&quot; srcset=&quot;/wp-content/uploads/2019/04/Flattener.png 1x, /wp-content/uploads/2019/04/Flattener@2x.png 2x&quot; alt=&quot;Flattener&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I’ve then run a &lt;strong&gt;preflight&lt;/strong&gt; against PDF/X-1a, fixing the errors when possible. I’ve manually substituted images which were too low-res for the print version (but OK for screen/display visualization).&lt;/p&gt;

&lt;p&gt;When it comes to &lt;strong&gt;Color Management&lt;/strong&gt;, things are a bit fuzzy: Lulu provides two sets of JobOptions, &lt;a href=&quot;http://connect.lulu.com/en/discussion/32882/how-to-make-a-pdf-using-adobe-indesign&quot;&gt;here&lt;/a&gt; and &lt;a href=&quot;http://connect.lulu.com/en/discussion/33681/pdf-creation-settings-how-can-i-be-sure-my-pdf-will-print-correctly&quot;&gt;here&lt;/a&gt;, with of instruction contrasting with each other, or with information that Lulu provides in the Guides. For instance, I’ve read to convert everything to sRGB, and Leave Color Unchanged at the same time.&lt;/p&gt;

&lt;p&gt;I’ve &lt;a href=&quot;http://connect.lulu.com/en/discussion/353421/joboptions-and-colormanagement/&quot;&gt;asked in their forums&lt;/a&gt;, and they opened a support ticket for me. After a couple of very kind emails, I got this:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;They have ongoing partnerships with several print facilities in different places in the world (US, Canada, Europe, and Australia).&lt;/li&gt;
  &lt;li&gt;They have agreed with each contractor on a set of quality standards (based on ink/paper), although their print partners are largely autonomous.&lt;/li&gt;
  &lt;li&gt;They tend to suggest sRGB to standardize the color input (and avoid problems).&lt;/li&gt;
  &lt;li&gt;It is not possible to micro-manage (prepress-style) graphic elements in the PDF (custom CMYK separations, GCR, etc) for each print shop may do &lt;em&gt;CMYK repurposing&lt;/em&gt; on their own e.g., for color management or ink saving purposes.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This also explains why the product description is not very much detailed, but based on broad quality definitions. Reluctantly, I made sure that everything was &lt;strong&gt;converted to sRGB&lt;/strong&gt; and did upload the PDF to Lulu’s servers – hoping that the pre-press gods wouldn’t notice my sin.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/wp-content/uploads/2019/04/sRGB.png&quot; srcset=&quot;/wp-content/uploads/2019/04/sRGB.png 1x, /wp-content/uploads/2019/04/sRGB@2x.png 2x&quot; alt=&quot;sRGB&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In case you’re wondering, I didn’t go on asking which print facility my order would have been sent to (somewhere in south UK, it turned out), with the idea of getting in touch with their prepress department.&lt;/p&gt;

&lt;p&gt;For the &lt;strong&gt;cover&lt;/strong&gt;, Lulu provides an InDesign template and a Spine width calculator (based on the binding type and pages number) – creating the design from scratch wasn’t difficult.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/wp-content/uploads/2019/04/Cover.jpg&quot; srcset=&quot;/wp-content/uploads/2019/04/Cover.jpg 1x, /wp-content/uploads/2019/04/Cover@2x.jpg 2x&quot; alt=&quot;Cover&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The whole online order creation process is guided, and almost impossible to mess up when you have all the assets ready. I paid with PayPal, and the book got printed I think the next day, and arrived in my hands in a few days later as expected.&lt;/p&gt;

&lt;h2 id=&quot;the-printed-result&quot;&gt;The printed result&lt;/h2&gt;

&lt;p&gt;It’s hard to be judgmental the very moment you hold for the first time a printed copy of the work that took 1.5 years of your life to complete: it looked awesome, and at the same time I was so fed up with the entire project that I gave it a quick review, wrote an affectionate dedication to Jeffrey, prepared the package and sent it to Adobe’s offices in Minnesota, US.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/wp-content/uploads/2019/04/Spread.jpg&quot; srcset=&quot;/wp-content/uploads/2019/04/Spread.jpg 1x, /wp-content/uploads/2019/04/Spread@2x.jpg 2x&quot; alt=&quot;Spread&quot; /&gt;&lt;/p&gt;

&lt;p&gt;That said, you can read below a frank bullet-points list of what I liked, what I didn’t really like, what was my fault and what I’d do differently next time to get a better result.&lt;/p&gt;

&lt;video width=&quot;680&quot; height=&quot;382&quot; controls=&quot;controls&quot;&gt;
&lt;source src=&quot;/wp-content/uploads/2019/04/FlippingPages.mp4&quot; type=&quot;video/mp4&quot; /&gt;
&lt;/video&gt;

&lt;h3 id=&quot;the-good-parts&quot;&gt;The good parts&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;The &lt;strong&gt;paper&lt;/strong&gt; is nice: it looks very much like an 80g/mq, the coating is OK, it surely has some optical brighteners but it’s not obviously bluish/greenish.&lt;/li&gt;
  &lt;li&gt;The &lt;strong&gt;print quality&lt;/strong&gt; is OK too. I was a bit worried about some pages with higher ink coverage, but in general there are no ghosting problems, stains and such. The color rendition and gray balance are fine too. Usually, software development books are printed in B/W, but given the limited batch I’ve ordered, it made little sense to save few bucks on B/W inks. Would I need a larger number of copies, I’d surely go for it. In case, it would be nice to have an 80 grams uncoated paper, but Lulu offers 60 only without coating.&lt;/li&gt;
  &lt;li&gt;The &lt;strong&gt;binding&lt;/strong&gt; is robust, not the kind of book that looks like it will shred pages around the fifth time you open it.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure&gt;  
&lt;img src=&quot;/wp-content/uploads/2019/04/Binding.jpg&quot; srcset=&quot;/wp-content/uploads/2019/04/Binding.jpg 1x, /wp-content/uploads/2019/04/Binding@2x.jpg 2x&quot; alt=&quot;Binding&quot; /&gt;
&lt;figcaption&gt;PerfectBound looks sturdy indeed&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h3 id=&quot;the-bad-parts&quot;&gt;The bad parts&lt;/h3&gt;

&lt;p&gt;Or at least the ones I personally find not up my expectations.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The &lt;strong&gt;package&lt;/strong&gt; wasn’t particularly good: the usual cardboard box with little protection against corners damage.&lt;/li&gt;
  &lt;li&gt;The soft &lt;strong&gt;cover&lt;/strong&gt; is rather fragile, especially along edges, where the glossy coat may get slightly peeled off. I’d be curious to see whether a matte finish is less delicate.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure&gt;  
&lt;img src=&quot;/wp-content/uploads/2019/04/Peeled.jpg&quot; srcset=&quot;/wp-content/uploads/2019/04/Peeled.jpg 1x, /wp-content/uploads/2019/04/Peeled@2x.jpg 2x&quot; alt=&quot;Peeled glossy finish&quot; /&gt;
&lt;figcaption&gt;Glossy finish peeling off&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;Not being able to micro-manage the &lt;strong&gt;color separations&lt;/strong&gt; still bugs me a bit.&lt;/li&gt;
  &lt;li&gt;There is some &lt;strong&gt;banding&lt;/strong&gt; here and there, that somehow I expected on a digital printed book. Probably the pricey “Color Premium inks” option deals with it.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure&gt;  
&lt;img src=&quot;/wp-content/uploads/2019/04/Banding.jpg&quot; srcset=&quot;/wp-content/uploads/2019/04/Banding.jpg 1x, /wp-content/uploads/2019/04/Banding@2x.jpg 2x&quot; alt=&quot;Banding&quot; /&gt;
&lt;figcaption&gt;Dark and light Banding on the sky&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h3 id=&quot;my-mistakes&quot;&gt;My mistakes&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;The &lt;strong&gt;book size&lt;/strong&gt; I chose is too big to my taste. This is something I couldn’t change&lt;sup id=&quot;fnref:change&quot;&gt;&lt;a href=&quot;#fn:change&quot; class=&quot;footnote&quot;&gt;5&lt;/a&gt;&lt;/sup&gt;: it would have meant re-checking all the elements flow, and I had no time for that. When you start writing your eBook, even if you don’t plan to print it, think about the physical size of the page: PDF area is one thing, paper surface is another. I went with US Letter (8.5x11 inches, 21.6x27.9cm): other books in the software development category are smaller, like 18x23.5cm (O’Reilly) or 1cm wider (Packt), so around 7-7.5x9.2 inches. Mine looks unnecessarily large.&lt;/li&gt;
  &lt;li&gt;I didn’t check all the &lt;strong&gt;images resolution&lt;/strong&gt; properly, so you can spot some pixelation here and there.&lt;/li&gt;
  &lt;li&gt;Never, ever take &lt;strong&gt;dark interface programs’ screenshots&lt;/strong&gt;. Dark interfaces are cool to use, eye-relaxing to look at, moderately nice in PDFs, dreadful in print, for legibility is compromised. My code’s syntax highlighting was great on the printed page, for it uses a light theme: don’t even think about using a dark theme for it. Also, I’m not 100% sure to have converted to sRGB all the screenshots when taking them&lt;sup id=&quot;fnref:ICC&quot;&gt;&lt;a href=&quot;#fn:ICC&quot; class=&quot;footnote&quot;&gt;6&lt;/a&gt;&lt;/sup&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It’s not my mistake but it’s not clear either (I’ve to check with Leanpub on that) whether or not the Print-Ready PDF export option downsamples images. It may make sense for display PDFs, not so for Print where it is desirable to keep the max resolution available.&lt;/p&gt;

&lt;h2 id=&quot;conclusions&quot;&gt;Conclusions&lt;/h2&gt;

&lt;p&gt;All in all, I am really pleased with the result. It took me some time to figure out the workflow for I was a first timer and I got some things wrong, but I can do better next time (even if I do not plan to offer my book in a printed version anytime soon). The materials are OK, the price is fair for a micro print batch such as mine. I’m curious to hear your experiences with print-on-demand services, so please share it in the comments section.&lt;/p&gt;

&lt;p&gt;But I didn’t tell you the entire story…&lt;/p&gt;

&lt;p&gt;Jeff offered me the possibility to send him two copies of my book: one as a well deserved gift to him, the other… would be sent me back with signatures by the Photoshop teams from both the Minnesota and California offices! Accidentally, &lt;em&gt;“somebody”&lt;/em&gt; 🙏🏻 let also some tattoos, stickers, a pin and a shirt slip into the package, so I’ve now some Photoshop branded swag in the house, for my daughter to steal me&lt;sup id=&quot;fnref:wand&quot;&gt;&lt;a href=&quot;#fn:wand&quot; class=&quot;footnote&quot;&gt;7&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;figure&gt;
&lt;img src=&quot;/wp-content/uploads/2019/04/Signatures.jpg&quot; srcset=&quot;/wp-content/uploads/2019/04/Signatures.jpg 1x, /wp-content/uploads/2019/04/Signatures@2x.jpg 2x&quot; alt=&quot;Signatures&quot; /&gt;
&lt;figcaption&gt;Adobe Photoshop team signatures from Minnesota and California offices&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Isn’t that &lt;strong&gt;awesome&lt;/strong&gt;?! ❤️&lt;/p&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:Pandoc&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://pandoc.org/&quot;&gt;Pandoc&lt;/a&gt; is an open-source conversion tool that is also able to export to PDF from MarkDown, but the styling part is time consuming and you got to have quite some LaTeX knowledge. &lt;a href=&quot;https://www.softcover.io/&quot;&gt;Softcover&lt;/a&gt; is a free alternative to Leanpub for the MarkDown to PDF part, but it requires more customization efforts, a bit of LaTeX skills and the resulting book style isn’t as good as Leanpub’s. Both have the notable upside that the entire process is local, whereas Leanpub creates the PDF server-side. &lt;a href=&quot;#fnref:Pandoc&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:hook&quot;&gt;
      &lt;p&gt;The whole book was within a &lt;code class=&quot;highlighter-rouge&quot;&gt;git&lt;/code&gt; repository, with an optional hook so that each push triggered the book compilation. &lt;a href=&quot;#fnref:hook&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:md2pdf&quot;&gt;
      &lt;p&gt;Leanpub conversion uses an intermediate LaTeX step, so it’s actually MarkDown to LaTeX to PDF. It is very likely that, internally, thay make use of Pandoc heavily tweaked with custom LaTeX styling. Which is what allows Text Blocks with Icons, Syntax Highlighting and all the features that make Leanpub ebooks so nice. &lt;a href=&quot;#fnref:md2pdf&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:time&quot;&gt;
      &lt;p&gt;It all may sound a bit sloppy now, but back then I really felt like I was in hurry: with more time, I could have evaluated options more carefully. &lt;a href=&quot;#fnref:time&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:change&quot;&gt;
      &lt;p&gt;Leanpub lets you pick a different page size when you export the Print-Ready PDF, but as I’ve written I had no time to check +400 pages again to look for, and fix, misplaced elements. &lt;a href=&quot;#fnref:change&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:ICC&quot;&gt;
      &lt;p&gt;On Mac, when you take a screenshot it is assigned the Display’s ICC profile. If you save the PNG/JPG with the embedded ICC, it gets properly converted to sRGB in the PDF post-production stage; if, by mistake, you discard the ICC profile while saving, sRGB is assigned (and therefore not converted) in the PDF, and colors will shift. &lt;a href=&quot;#fnref:ICC&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:wand&quot;&gt;
      &lt;p&gt;She’s got a Magic Wand tattoo on her forearm that she wiggles around the house like Hermione Granger. &lt;a href=&quot;#fnref:wand&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
        <pubDate>Sat, 13 Apr 2019 00:00:00 +0200</pubDate>
        <link>http://localhost:4000/2019/04/printing-leanpub-books-on-lulu/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/04/printing-leanpub-books-on-lulu/</guid>
        
        <category>Leanpub</category>
        
        <category>Lulu</category>
        
        <category>Print-on-demand</category>
        
        
        <category>Personal</category>
        
      </item>
    
      <item>
        <title>Migrating from WordPress to Jekyll on Netlify</title>
        <description>&lt;p&gt;After years, I’ve been able to kiss WordPress bye-bye and migrate to a fully static site build with Jekyll and deployed to Netlify. In this post I’ll tell you why, and show you how.&lt;/p&gt;

&lt;h2 id=&quot;why-not-wordpress&quot;&gt;Why not WordPress?&lt;/h2&gt;

&lt;p&gt;I’ve nothing against WP in principle, it’s not the right tool for me. I blogpost on average once a month, it makes no sense for me to be bound to a Linux hosting with mySQL access, a BackupBuddy subscription plan and a dozen of other WP plugins to run this site. Have you seen my posts? A couple of images, few snippets of code, some text. Really, WP is plain overkill; plus, I don’t want to worry about WP updates, PhpMyAdmin, DB access errors, log-ins, plugin incompatibility and fancy dashboards anymore.&lt;/p&gt;

&lt;p&gt;Now I have a simpler, static site which I update writing text files on my disk, committing to a free git repository, which Jekyll files are automatically built, hosted and served over https for free by Netlify.&lt;/p&gt;

&lt;h2 id=&quot;static-vs-dynamic&quot;&gt;Static vs. Dynamic&lt;/h2&gt;

&lt;p&gt;As opposed to WP, where each PHP &lt;em&gt;template&lt;/em&gt;&lt;sup id=&quot;fnref:template&quot;&gt;&lt;a href=&quot;#fn:template&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; is filled on-demand – i.e. when a user requests a page, fetching the content from a database and returning the processed data as html – a Static site is &lt;em&gt;pre-compiled&lt;/em&gt; so to speak, and simply made available online all at once.&lt;/p&gt;

&lt;p&gt;As a consequence, a WP site needs a machine running some server-side scripting language such as PHP, a database like mySQL, and some processing resources; a static site is happy when it is hosted on a server that is (a) turned on, and (b) connected to the net.&lt;/p&gt;

&lt;h2 id=&quot;ssgs&quot;&gt;SSGs&lt;/h2&gt;

&lt;p&gt;If you’re not familiar with the concept of Static Site Generators, they’re command-line tools that get a bunch of HTML/JS/CSS with template code and markdown files as input, and output a full static website. Your job is then to move the files on the server.&lt;/p&gt;

&lt;p&gt;There are several SSGs available: to the best of my knowledge, the most popular ones are &lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt; (written in Ruby), &lt;a href=&quot;https://gohugo.io&quot;&gt;Hugo&lt;/a&gt; (written in Go) and &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt; (Javascript). Each one of them has its peculiar templating system and folders structure.&lt;/p&gt;

&lt;figure&gt;
&lt;a href=&quot;https://www.staticgen.com/&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/wp-content/uploads/2019/03/staticGen.jpg&quot; /&gt;&lt;/a&gt;
&lt;figcaption&gt;If you feel inclined, a way too big list of SSGs is found &lt;a href=&quot;https://www.staticgen.com/&quot;&gt;here&lt;/a&gt;.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;All of them share the sublime idea that you compose your writing (both pages and blog-posts) in MarkDown: a text file with a basic set of formatting rules, such as **&lt;strong&gt;bold&lt;/strong&gt;**, _&lt;em&gt;italic&lt;/em&gt;_ etc. Hence, all your website content is not hidden into some resources-hungry DataBase, but exposed to you as plain text files with a &lt;code class=&quot;highlighter-rouge&quot;&gt;.md&lt;/code&gt; extension.&lt;/p&gt;

&lt;h3 id=&quot;which-ssg-to-pick&quot;&gt;Which SSG to pick&lt;/h3&gt;

&lt;p&gt;If you start fresh (i.e., you don’t run a SSG already) or you don’t have plenty of time on your hands, I suggest you to look at the available templates for Jekyll (&lt;a href=&quot;https://jekyllthemes.io&quot;&gt;free&lt;/a&gt; or &lt;a href=&quot;https://jekyllthemes.io/premium&quot;&gt;paid&lt;/a&gt;), for &lt;a href=&quot;https://themes.gohugo.io/&quot;&gt;Hugo&lt;/a&gt; and for &lt;a href=&quot;https://hexo.io/themes/&quot;&gt;Hexo&lt;/a&gt;. Beware high expectations: they’re all quite &lt;em&gt;bare&lt;/em&gt;. Pick the one you like the most, and then learn that templating language to customize it.&lt;/p&gt;

&lt;p&gt;On a superficial level, that’s all you need. To me – and I’m not really into SSGs enough to get all the nuances – besides the templating language, the only other difference is compilation speed. Being written in Go, &lt;strong&gt;Hugo goes like a rocket&lt;/strong&gt;. My website is compiled by Hugo in 1.5 seconds, whereas Jekyll takes ~14 seconds, and Hexo is not that much better.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/wp-content/uploads/2019/03/hugo.png&quot; alt=&quot;Hugo vs. Jekyll&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Keep in mind that each time you modify a thing and save, the process re-generates (if you want, incrementally) the whole website, so 14 seconds to see whether a CSS rule or a template tweak really do what you originally meant them to do, may be a long time to wait – the fifth time in a row that you hit save.&lt;/p&gt;

&lt;p&gt;I am on Jekyll, using a mildly customized version of the &lt;a href=&quot;https://themeforest.net/item/steve-a-minimal-blog-theme-for-jekyll/15601096&quot;&gt;Steve theme&lt;/a&gt;, which costed me like $15. I already run &lt;a href=&quot;https://cc-extensions.com/&quot;&gt;CC-Extensions&lt;/a&gt; on Jekyll, I’m mildly familiar with it, so I’ll keep being patient if it takes seconds to compile.&lt;/p&gt;

&lt;h2 id=&quot;wordpress-migration&quot;&gt;WordPress migration&lt;/h2&gt;

&lt;p&gt;I’ve followed this very checklist myself. Perhaps things can be made simpler, but this has worked fine for me – feel free to google stuff if you need more detailed information.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Migrate all your comments to &lt;a href=&quot;https://disqus.com&quot;&gt;Disqus&lt;/a&gt;: sign up and follow the instruction to install Disqus on WordPress (you’ll need to get &lt;a href=&quot;https://wordpress.org/plugins/disqus-comment-system/&quot;&gt;this WP Plugin&lt;/a&gt;).&lt;/li&gt;
  &lt;li&gt;Do a full backup: I’ve always used &lt;a href=&quot;https://ithemes.com/purchase/backupbuddy/&quot;&gt;BackupBuddy&lt;/a&gt;, which isn’t cheap but works like a charm – perhaps also the built-in WP Export is OK. You need to backup both the WP assets and the DB.&lt;/li&gt;
  &lt;li&gt;Install &lt;a href=&quot;https://www.mamp.info/&quot;&gt;MAMP&lt;/a&gt; or a similar software and restore your WordPress installation on a local server (e.g. on your laptop). This will make the following step faster.&lt;/li&gt;
  &lt;li&gt;On your local WP, install both &lt;a href=&quot;https://github.com/SchumacherFM/wordpress-to-hugo-exporter&quot;&gt;WP to Hugo&lt;/a&gt; and &lt;a href=&quot;https://wordpress.org/plugins/jekyll-exporter/&quot;&gt;Jekyll Exporter&lt;/a&gt; migration tools, and perform both Exports. You’ll get two &lt;code class=&quot;highlighter-rouge&quot;&gt;.zip&lt;/code&gt; files with a bunch of MarkDown in them. I’ve found that the Hugo version of the posts returns a better MarkDown conversion – but the files aren’t named as they should (i.e., prefixed with the date, like &lt;code class=&quot;highlighter-rouge&quot;&gt;2018-11-29-something.md&lt;/code&gt;).&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;jekyll-import&quot;&gt;Jekyll import&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;I have then manually reviewed the markdown files of the majority of my posts (~150) coming from the export, deleting items in the YAML FrontMatter&lt;sup id=&quot;fnref:frontmatter&quot;&gt;&lt;a href=&quot;#fn:frontmatter&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt; that aren’t meaningful, and fixing the markdown.&lt;/li&gt;
  &lt;li&gt;Make sure you keep the original &lt;code class=&quot;highlighter-rouge&quot;&gt;permalink&lt;/code&gt; (the post URL): this way each post will have the same URL of your old WP site. This way people who get to you from other sites’ links don’t get 404’ed, and you keep analytics intact.&lt;/li&gt;
  &lt;li&gt;Remove in the MarkDown all the links to &lt;code class=&quot;highlighter-rouge&quot;&gt;http://localhost:8888/&lt;/code&gt;. For instance, my Hugo export (the one with nicer markup) has all the posts’ assets with urls like &lt;code class=&quot;highlighter-rouge&quot;&gt;http://localhost:8888/wp-content/uploads/2018/03/logo.png&lt;/code&gt;. Do a batch search and replace and turn them to &lt;code class=&quot;highlighter-rouge&quot;&gt;/wp-content/uploads/2018/03/logo.png&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Move the markdown posts in Jekyll’s &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; folder, and also move in the website root the exported &lt;code class=&quot;highlighter-rouge&quot;&gt;/wp-content&lt;/code&gt; folder, which contains all the images coming from WP&lt;sup id=&quot;fnref:redundant&quot;&gt;&lt;a href=&quot;#fn:redundant&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;An example of the YAML FrontMatter for this very post:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Migrating from WordPress to Jekyll on Netlify&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;2019-03-05T11&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;author&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Davide Barranca&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;excerpt&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Bye-bye Wordpress.&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;post&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;permalink&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/2019/03/migrating-from-wordpress-to-jekyll-on-netlify/&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;How to migrate from WordPress to Jekyll on Netlify&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/wp-content/uploads/2019/03/jekyll.png&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;draft&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;category&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Personal&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Jekyll&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Netlify&lt;/span&gt;
&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;github&quot;&gt;GitHub&lt;/h2&gt;

&lt;p&gt;The whole idea around this SSG thing is that both the site build and the site updates must be easy. I’ve created a git repository on &lt;a href=&quot;https://www.github.com&quot;&gt;GitHub&lt;/a&gt; and pushed my Jekyll website there. Be aware that GitHub itself provides you for free with &lt;a href=&quot;https://pages.github.com/&quot;&gt;GitHub Pages&lt;/a&gt;, a service based on Jekyll that automatically builds your site each time you push a commit to a &lt;code class=&quot;highlighter-rouge&quot;&gt;gh-pages&lt;/code&gt; branch, and hosts the result on https for free.&lt;/p&gt;

&lt;p&gt;There are some limitations in terms of Jekyll plugins (see the &lt;a href=&quot;https://help.github.com/en/articles/configuring-jekyll-plugins#default-plugins&quot;&gt;whitelist here&lt;/a&gt;), so I’ve decided to try a different approach.&lt;/p&gt;

&lt;h2 id=&quot;netlify&quot;&gt;Netlify&lt;/h2&gt;

&lt;p&gt;Go create a free account on &lt;a href=&quot;https://www.netlify.com/&quot;&gt;Netlify&lt;/a&gt;, which provides an amazing service similar to GitHub pages. Then link your GitHub/Bitbucket repository, define a build command (mine is simply &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll build&lt;/code&gt;), and they will serve the Jekyll output on a dedicated, public subdomain – that you can use to check the site or point collaborators/clients to.&lt;/p&gt;

&lt;p&gt;At this point, you can link your existing domain (the process is quite easy): Netlify will give you few domain name servers to set e.g. on GoDaddy, or wherever your domain is hosted. You’ll be asked also to add to Netlify all the existing CNAME and MX records from your host (copy them from GoDaddy – they are for email, FTP and such).&lt;/p&gt;

&lt;p&gt;Then you’ll have to wait some hours for the DNS propagation, during which your website won’be served through https – the free &lt;a href=&quot;https://letsencrypt.org/&quot;&gt;Let’s Encrypt&lt;/a&gt; certificate will be issued shortly, and your static site will finally be on SSL.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/wp-content/uploads/2019/03/netlify.png&quot; alt=&quot;Hugo vs. Jekyll&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;conclusions&quot;&gt;Conclusions&lt;/h2&gt;

&lt;p&gt;I am genuinely happy to have streamlined my blogging workflow. There’s lot of room for improvement – e.g. on the theme, SEO, social cards etc. – but given the little time it took:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;I have gotten rid of WordPress and related expenses (pricey hosting and plugins).&lt;/li&gt;
  &lt;li&gt;Posts are easier to access, create and edit.&lt;/li&gt;
  &lt;li&gt;I generally feel more in control, and less subject to random, time consuming issues.&lt;/li&gt;
  &lt;li&gt;I haven’t lost anything relevant in terms of functionality.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If I had more time I’d explore Jekyll and Netlify features more in depth, or even consider adapting my theme to Hugo to save some building time in the future. Luckily, I haven’t got any spare time left 😅 So I’ll just call quit and feel good.&lt;br /&gt;
Thanks for reading!&lt;/p&gt;
&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:template&quot;&gt;
      &lt;p&gt;For a lack of better word. &lt;a href=&quot;#fnref:template&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:frontmatter&quot;&gt;
      &lt;p&gt;It’s the &lt;em&gt;header&lt;/em&gt; content of each &lt;code class=&quot;highlighter-rouge&quot;&gt;.md&lt;/code&gt; file, which is wrapped with three dashes &lt;code class=&quot;highlighter-rouge&quot;&gt;---&lt;/code&gt;. It contains the post’s metadata (e.g. the title, the excerpt), that is used by Jekyll to display it. &lt;a href=&quot;#fnref:frontmatter&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:redundant&quot;&gt;
      &lt;p&gt;There is a lot of redundant stuff in there, for WP creates several versions of all images you’ve imported at different resolutions. &lt;a href=&quot;#fnref:redundant&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
        <pubDate>Tue, 05 Mar 2019 00:00:00 +0100</pubDate>
        <link>http://localhost:4000/2019/03/migrating-from-wordpress-to-jekyll-on-netlify/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/03/migrating-from-wordpress-to-jekyll-on-netlify/</guid>
        
        <category>Jekyll</category>
        
        <category>Netlify</category>
        
        
        <category>Personal</category>
        
      </item>
    
      <item>
        <title>Adobe Extension Manager Error Codes</title>
        <description>&lt;p&gt;Here is a list of Adobe Extension Manager &lt;code class=&quot;highlighter-rouge&quot;&gt;ExManCmd&lt;/code&gt; error codes.&lt;/p&gt;

&lt;p&gt;I don’t use &lt;code class=&quot;highlighter-rouge&quot;&gt;zxp&lt;/code&gt; files to install my products, but some people do (e.g. with &lt;a href=&quot;https://install.anastasiy.com/&quot;&gt;Anastasiy’s Extension Manager&lt;/a&gt;, that under the hood calls &lt;code class=&quot;highlighter-rouge&quot;&gt;ExManCmd&lt;/code&gt;) and error numbers are always hard to decode. The list has been kindly provided by Adobe’s Erin Finnegan.&lt;/p&gt;

&lt;h2 id=&quot;exmancmd-errors&quot;&gt;ExManCmd Errors&lt;/h2&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;EXMAN_FAILED_INSUFFICIENT_PRIVILEDGE = -151
EXMAN_FAILED_OPEN_FILES = -152
EXMAN_FAILED_READ_FILES = -154
EXMAN_FAILED_WRITE_FILES = -155
EXMAN_FAILED_COPY_FILES = -156
EXMAN_FAILED_DELETE_FILES = -157
EXMAN_FAILED_CREATE_FILES = -158
EXMAN_FAILED_FILE_TYPE_NOT_MATCH = -159
EXMAN_FAILED_FILE_NOT_FOUND = -160
EXMAN_FAILED_ITERATE_DIRECTORY = -161
EXMAN_FAILED_FILE_EXISTS_ALREADY = -162
EXMAN_FAILED_CHANGE_PERMISSION = -163
EXMAN_FAILED_CREATE_DIRECTORY = -164
EXMAN_FAILED_DIRECTORY_EXISTS_ALREADY = -165
EXMAN_FAILED_IS_NOT_DIRECTORY = -166
EXMAN_FAILED_IS_NOT_FILE = -167
EXMAN_FAILED_PATH_INVALID = -168
EXMAN_FAILED_PATH_NOT_FOUND = -169
EXMAN_FAILED_ACCESS_DENIED = -170
EXMAN_FAILED_FILE_LOCKED = -171
EXMAN_FAILED_SHARING_VIOLATION = -172
EXMAN_FAILED_JUDGE_FILE_EXIST = -173
EXMAN_FAILED_FILESCHEMA_ILLEGAL = -174
EXMAN_FAILED_ELEVATE_START = -175
EXMAN_FAILED_ELEVATE_FILEDEL = -176
EXMAN_FAILED_ELEVATE_FILECOPY = -178
EXMAN_FAILED_ELEVATE_MAKEDIR = -179
EXMAN_FAILED_UNHANDLED_EXCEPTION = -180
EXMAN_FAILED_NO_INSTALLED_FILES = -181
EXMAN_FAILED_ELEVATE_EXIST = -182
EXMAN_FAILED_IS_NOT_LINK = -183
EXMAN_FAILED_ELEVATE_ADDPERMISSION = -184
EXMAN_FAILED_EXTRACT_ZXP = -201
EXMAN_FAILED_DECRYPT = -202
EXMAN_FAILED_ENCRYPT = -203
EXMAN_FAILED_PARSE_XMANCONFIG = -251
EXMAN_FAILED_PARSE_MXI = -252
EXMAN_FAILED_DESTINATION_MISSING_TOKEN = -253
EXMAN_FAILED_PARENT_FOLDER_IN_PATH = -254
EXMAN_FAILED_SOURCE_FORMAT_ERROR = -255
EXMAN_FAILED_UNKNOWN_TOKEN = -256
EXMAN_FAILED_MANIFEST_NODE_NOT_FOUND = -257
EXMAN_FAILED_XML_NOT_FOUND = -259
EXMAN_FAILED_ELEMENT_NOT_FOUND = -260
EXMAN_FAILED_INVALID_VALUE_IN_MXI = -261
EXMAN_FAILED_OPEN_XMANCONFIG_URI = -262
EXMAN_FAILED_DOWNLOAD_XMANCONFIG = -263
EXMAN_FAILED_PARSE_TODOFILE = -264
EXMAN_FAILED_PARSE_XML = -265
EXMAN_FAILED_GENERATE_XMANCONFIG = -266
EXMAN_FAILED_INVALID_MANIFEST = -267
EXMAN_FAILED_INVALID_MANIFEST_VERSION = -268
EXMAN_FAILED_INVALID_MANIFEST_BUNDLE_ID = -269
EXMAN_FAILED_INVALID_MANIFEST_BUNDLE_VERSION = -270
EXMAN_FAILED_MANIFEST_EXCEPTION = -271
EXMAN_FAILED_RESOURCE_EXCEPTION = -272
EXMAN_FAILED_BLOCK_LIST_EXCEPTION = -273
EXMAN_FAILED_INVALID_BLOCK_LIST = -274
EXMAN_FAILED_CLOSE_HEADLIGHTS_SESSION = -302
EXMAN_FAILED_INIT_HEADLIGHTS = -303
EXMAN_FAILED_NULL_POINTER = -351
EXMAN_FAILED_BUFFER_NOT_ENOUGH = -352
EXMAN_FAILED_REJECT_LICENSE_AGREEMENT = -401
EXMAN_FAILED_SIGNATURE_VALIDATION = -402
EXMAN_FAILED_NO_PRODUCT_SUPPORT_THIS_CEP = -403
EXMAN_FAILED_CEP_NOT_SIGNED = -404
EXMAN_FAILED_REJECT_SIGNATURE_VALIDATION = -405
EXMAN_FAILED_EXTENSION_NOT_FOUND = -406
EXMAN_FAILED_REQUIRED_EXTENSION_NOT_INSTALLED = -407
EXMAN_FAILED_REQUIRED_EXTENSION_NOT_ENABLED = -408
EXMAN_FAILED_EXTENSION_BLOCKED = -409
EXMAN_FAILED_INVALID_ZXP_FILE = -410
EXMAN_FAILED_NO_SUPPORTED_PRODUCT = -411
EXMAN_FAILED_CONFLICT_EXTENSION_FOUND = -412
EXMAN_FAILED_INVALID_EMBEDDED_EXTENSION = -413
EXMAN_FAILED_EMBEDDED_EXTENSION_NOT_SIGNED = -414
EXMAN_FAILED_RESOURCE_FOLDER_NOT_FOUND = -415
EXMAN_FAILED_CREATE_EXTENSION = -416
EXMAN_FAILED_WRONGDEPENDENCY = -417
EXMAN_FAILED_NEWER_EXTENSION_INSTALLED = -418
EXMAN_FAILED_DEPENDENCY_CHANGED_WHEN_UPDATE = -419
EXMAN_FAILED_MXP_NO_SUPPORTED = -420
EXMAN_FAILED_DOWNLOAD_EXTENSION = -421
EXMAN_FAILED_REJECT_OVERWRITE_CONFLICT_EXTENSION = -422
EXMAN_FAILED_USER_CANCEL_DOWNLOAD = -423
EXMAN_FAILED_CAN_NOT_INSTALL_FOR_ALL = -424
EXMAN_FAILED_PRODUCT_NOT_FOUND = -451
EXMAN_FAILED_TOKEN_NOT_FOUND = -453
EXMAN_FAILED_PRODUCT_NOT_SUPPORTED = -454
EXMAN_FAILED_PARSER_PRODUCT_TOKEN = -455
EXMAN_FAILED_POINT_PRODUCT_NEED_QUIT = -456
EXMAN_FAILED_SPECIFIER_NOT_FOUND = -457
EXMAN_FAILED_REQUIRED_PRODUCT_NOT_INSTALLED = -458
EXMAN_FAILED_REQUIRED_VERSION_NOT_INSTALLED = -459
EXMAN_FAILED_DBWRAPPER_COMMON = -500
EXMAN_FAILED_DBWRAPPER_CONNECTFAILED = -501
EXMAN_FAILED_DBWRAPPER_DISCONNECTFAILED = -502
EXMAN_FAILED_DBWRAPPER_QUERYFAILED = -503
EXMAN_FAILED_DBWRAPPER_NOTSTARTUP = -504
EXMAN_FAILED_DBWRAPPER_NOTSHUTDOWN = -505
EXMAN_FAILED_DBWRAPPER_DATANOTFOUND = -506
EXMAN_FAILED_DBWRAPPER_CREATTABLFAILED = -507
EXMAN_FAILED_DBWRAPPER_NAME_EXIST = -508
EXMAN_FAILED_UPDATE_DATABASE = -509
EXMAN_FAILED_INIT_BT_FAILED = -552
EXMAN_FAILED_VALIDATE_LICENSE = -601
EXMAN_FAILED_GET_USER_ACOUNTDAT = -602
EXMAN_FAILED_INVALID_USERACOUNT = -603
EXMAN_FAILED_GET_LICENSE_CHECK_RESPONSE = -604
EXMAN_FAILED_COMMON_EXCEPTION = -651
EXMAN_FAILED_SSL_CONTEXT_EXCEPTION = -652
EXMAN_FAILED_SSL_EXCEPTION = -653
EXMAN_FAILED_COMMON_SET_MGMT = -851
EXMAN_FAILED_STRING_CONVERT = -901
EXMAN_FAILED_USER_NOT_FOUND = -902
EXMAN_FAILED_FETCH_USER_INFO = -903
EXMAN_FAILED_GET_USER_HOME_FOLDER = -904&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</description>
        <pubDate>Thu, 21 Feb 2019 11:04:05 +0100</pubDate>
        <link>http://localhost:4000/2019/02/adobe-extension-manager-error-codes/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/02/adobe-extension-manager-error-codes/</guid>
        
        <category>Adobe Extension Manager</category>
        
        
        <category>CEP</category>
        
      </item>
    
      <item>
        <title>Professional Photoshop Scripting is published!</title>
        <description>&lt;p&gt;After 10 months since the launch of the Early Access Program, I am incredibly happy to announce that my book is now complete! Read the full report below.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://ps-scripting.com/&quot;&gt;&lt;img src=&quot;/wp-content/uploads/2019/02/cover.jpg&quot; alt=&quot;Professional Photoshop Scripting book cover&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;the-final-version-10&quot;&gt;The Final Version 1.0!&lt;/h3&gt;

&lt;p&gt;The book is now &lt;strong&gt;12 Chapters/409 pages&lt;/strong&gt;, fully CC 2019 compliant: compared to the last EAP version 0.2, I’ve added one Chapter, an Appendix, a proper Acknowledgement section, some extra-content on ActionManager, and given it a final round of proofreading and fixes.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.ps-scripting.com/&quot;&gt;&lt;img src=&quot;/wp-content/uploads/2019/02/open-book-5@2x.jpg&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I’ve also finally credited my dear friend and colleague &lt;a href=&quot;http://zettagraphics.com/&quot;&gt;Sandra Voelker&lt;/a&gt; for her work as the &lt;strong&gt;Technical Editor&lt;/strong&gt; – she’s been providing suggestions and corrections of remarkably high value.&lt;/p&gt;

&lt;p&gt;I am also especially honored to tell you that the book contains an awesome &lt;strong&gt;Foreword by Jeffrey Tranberry&lt;/strong&gt;, Sr. Product Manager, Digital Imaging at Adobe Systems, and author with Geoff Scott of the book “&lt;a href=&quot;https://www.amazon.com/Power-Speed-Automation-Adobe-Photoshop-ebook/dp/B0083JCBZ2/&quot;&gt;Power, Speed &amp;amp; Automation with Adobe Photoshop&lt;/a&gt;” (2012).&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.ps-scripting.com/&quot;&gt;&lt;img src=&quot;/wp-content/uploads/2019/02/open-book-2@2x.jpg&quot; alt=&quot;Professional Photoshop Scripting book sample content&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;All in all, I am quite happy about how it has turned out: it took me &lt;em&gt;just&lt;/em&gt; two years and a half! Dare I to say, you won’t find anywhere else such a comprehensive learning path that goes from the basics of the ExtendScript language, up to advanced topics such as ActionManager (~70 pages) and Adobe Generator (~60 pages).&lt;/p&gt;

&lt;p&gt;The book V1.0. is for sale right now at &lt;a href=&quot;https://www.ps-scripting.com/&quot;&gt;PS-Scripting.com&lt;/a&gt;, where you can also &lt;a href=&quot;https://www.ps-scripting.com/#get-sample&quot;&gt;Get Sample Content!&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I really hope you’ll enjoy it! As I wrote in an earlier post, my intention is to match the &lt;a href=&quot;https://www.htmlpanelsbook.com/&quot;&gt;Adobe Photoshop HTML Panels Development&lt;/a&gt; course and add a series of video tutorials: I tested the equipment but stopped for the final rush needed to publish the book.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.ps-scripting.com/&quot;&gt;&lt;img src=&quot;/wp-content/uploads/2018/11/DB-2018-11-18-at-11.23.40.jpg&quot; alt=&quot;Professional Photoshop Scripting course video recording&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Many thanks to all who have contributed, helped, and supported the project buying the EAP 🙏🏻 Your support has been truly appreciated.
Thank you all!&lt;/p&gt;

&lt;p&gt;👉 &lt;a href=&quot;https://www.ps-scripting.com/&quot;&gt;Book Website&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 13 Feb 2019 01:43:32 +0100</pubDate>
        <link>http://localhost:4000/2019/02/professional-photoshop-scripting-v1/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/02/professional-photoshop-scripting-v1/</guid>
        
        <category>Professional Photoshop Scripting</category>
        
        
        <category>Scripting</category>
        
      </item>
    
      <item>
        <title>Spectrum CSS VueJS Component: DropDown</title>
        <description>&lt;p&gt;In a &lt;a href=&quot;/2018/11/adobe-spectrum-css-open-sourced/&quot;&gt;previous post&lt;/a&gt; I’ve introduced the recently open-sourced Spectrum CSS. Here, I’ll be demonstrating how to use them to build a simple Vue.js component: a DropDown menu.&lt;/p&gt;

&lt;p&gt;Spectrum CSS are really appealing, but as I’ve mentioned &lt;a href=&quot;/2018/11/adobe-spectrum-css-open-sourced/&quot;&gt;earlier&lt;/a&gt;, they’re not bundled with any JavaScript – besides what you may borrow from the &lt;a href=&quot;http://opensource.adobe.com/spectrum-css&quot;&gt;online documentation&lt;/a&gt; page. While elements such as Sliders are &lt;em&gt;plug &amp;amp; play&lt;/em&gt;, for they actually do use a &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;input type=&quot;range&quot;&amp;gt;&lt;/code&gt; wrapped in a lot of finely styled &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;div&amp;gt;&lt;/code&gt; tags, others such as the DropDown are not.&lt;/p&gt;

&lt;figure&gt;
	&lt;img width=&quot;300&quot; src=&quot;/wp-content/uploads/2018/12/dropdown.gif&quot; /&gt;
	&lt;figcaption&gt;Screenshot from the Spectrum CSS documentation&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;I.e. if you click on a Closed dropdown, it won’t open (the above is just a screenshot so it’s pointless to try, but the result would be the same). The reason being that a Spectrum DropDown is not really a &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;select&amp;gt;&lt;/code&gt; element, as you can see in the snippet below:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/wp-content/uploads/2018/12/code.png&quot; alt=&quot;The Spectrum code that renders a DropDown&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As far as I get, re-creating an element from scratch is a standard practice to avoid rendering differences between browsers (the &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;select&amp;gt;&lt;/code&gt; is a good example here).&lt;/p&gt;

&lt;p&gt;Anyways: no &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;select&amp;gt;&lt;/code&gt; means no default behavior on click, change, etc. In other words, you are the one in charge of populating the &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;div&amp;gt;&lt;/code&gt; elements above and adding relevant event handlers so that the DropDown stops being a nice but still and useless object.&lt;/p&gt;

&lt;p&gt;This is a perfect test case for encapsulating everything in a &lt;strong&gt;Vue.js Component&lt;/strong&gt;! The only drawback is that I don’t feel particularly comfortable with the idea of creating Components from scratch. All my CEP Panels use Vue.js now, that’s true, but frankly in a very simple and not over-engineered fashion: I’ve always used one shared &lt;code class=&quot;highlighter-rouge&quot;&gt;data&lt;/code&gt;, the farther I’ve ventured into fanciness was setting up an Event Hub.&lt;/p&gt;

&lt;p&gt;Thanks god I’ve a PhD in &lt;em&gt;Copy&amp;amp;Paste&lt;/em&gt;, so I’ve been able to adapt &lt;a href=&quot;https://vuejsexamples.com/a-prettier-way-to-display-select-boxes/&quot;&gt;this one&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/wp-content/uploads/2018/12/display-select-boxes.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;… into a proper Vue Component that wraps the Spectrum DropDown original markup. The &lt;code class=&quot;highlighter-rouge&quot;&gt;.vue&lt;/code&gt; file I came up with is as follows:&lt;/p&gt;

&lt;noscript&gt;&lt;pre&gt;400: Invalid request
&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/ec5c7ef0d83b5d14252a963e761896f7.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;I won’t go too much into the details here. If you look at the &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;template&amp;gt;&lt;/code&gt; tag and compare it with the original Spectrum html, you can spot the differences: I’ve added a couple of classes that depend on the selected item or the &lt;code class=&quot;highlighter-rouge&quot;&gt;showMenu&lt;/code&gt;boolean, and used a &lt;code class=&quot;highlighter-rouge&quot;&gt;v-for&lt;/code&gt; loop to populate the options.&lt;/p&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag is where the actual logic belongs: I’ve added two methods, one to show the opened dropdown and one to emit an event to the parent when something is selected. From the &lt;code class=&quot;highlighter-rouge&quot;&gt;props&lt;/code&gt; you’re able to tell how to consume such element, e.g.:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;drop-down&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;:options=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;arrayOfObjects&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;v-on:updateOption=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;methodToRunOnSelect&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;placeholder=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Select a thing...&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The result is this one:&lt;/p&gt;

&lt;figure&gt;
	&lt;img width=&quot;300&quot; src=&quot;/wp-content/uploads/2018/12/WorkingDropDown.gif&quot; /&gt;
	&lt;figcaption&gt;The working DropDown Vue.js Component! (Wife was unimpressed)&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;It is quite bare, I may want to add transitions and such… but it works!&lt;/p&gt;

&lt;p&gt;To tell you the truth, I thought I couldn’t be able to make it: I had a look at proper Vue.js UI Kits (like &lt;a href=&quot;https://vuikit.js.org/&quot;&gt;this one&lt;/a&gt;) and they exceed, by far, my understanding. Luckily I’ve been able to borrow code and adapt it, so I may be doing it again in the future for other elements that I would need.&lt;/p&gt;

&lt;p&gt;If you’re up for the same thing, or you know how to make my code better, please let me know in the comments. Bye!&lt;/p&gt;
</description>
        <pubDate>Sun, 16 Dec 2018 11:19:58 +0100</pubDate>
        <link>http://localhost:4000/2018/12/spectrum-css-vue-js-component-dropdown/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/12/spectrum-css-vue-js-component-dropdown/</guid>
        
        <category>CEP</category>
        
        <category>Vue.js</category>
        
        
        <category>CEP</category>
        
      </item>
    
      <item>
        <title>ESTK to be replaced by a Visual Studio Code plug-in</title>
        <description>&lt;p&gt;Please do yourself a favour and read &lt;a href=&quot;https://medium.com/adobetech/the-future-of-extendscript-development-a-vscode-plugin-2d8d0172a357&quot;&gt;this Medium post&lt;/a&gt; by &lt;em&gt;Lead Technical Evangelist&lt;/em&gt; Ash Ryan Arnwine about the future of the ExtendScript ToolKit.&lt;/p&gt;

&lt;p&gt;I’ll keep it short because I urge you to read the &lt;a href=&quot;https://medium.com/adobetech/the-future-of-extendscript-development-a-vscode-plugin-2d8d0172a357&quot;&gt;original news&lt;/a&gt;. No ETA yet, but ESTK is gonna die soon won’t be re-written to comply with Apple’s 32bit applications ban (macOS-next). Nobody in their right mind would have thought it anyway, but we’ve got an official confirmation.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;[confetti fall from the sky]&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Go download &lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;Visual Studio Code&lt;/a&gt; and familiarize with it, while waiting for the new Adobe Scripting plugin (Mac/Win compatible) to be released.&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/Wq7zF9yyd0I&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
</description>
        <pubDate>Wed, 12 Dec 2018 23:28:31 +0100</pubDate>
        <link>http://localhost:4000/2018/12/estk-to-be-replaced-by-a-visual-studio-code-plug-in/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/12/estk-to-be-replaced-by-a-visual-studio-code-plug-in/</guid>
        
        <category>VSCode</category>
        
        
        <category>Scripting</category>
        
      </item>
    
      <item>
        <title>Adobe Spectrum CSS open-sourced!</title>
        <description>&lt;p&gt;In case you’ve missed the news, Adobe has open-sourced the Spectrum CSS – the stylesheets they’re using for Photoshop’s own CEP Panels 🍾 The GitHub repository is &lt;a href=&quot;https://github.com/adobe/spectrum-css&quot;&gt;found here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/wp-content/uploads/2018/11/Spectrum.jpg&quot;&gt;&lt;img src=&quot;/wp-content/uploads/2018/11/Spectrum.jpg&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The CSS is demoed &lt;a href=&quot;http://opensource.adobe.com/spectrum-css/2.6.0/docs&quot;&gt;in this page&lt;/a&gt;, where you can pick four themes (&lt;em&gt;Lighter, Light, Dark, Darkest&lt;/em&gt;) in four scales (&lt;em&gt;Medium, Large, Medium diff, Large diff&lt;/em&gt;). The component list, compared to &lt;a href=&quot;http://topcoat.io/topcoat/&quot;&gt;Topcoat&lt;/a&gt; which I’ve been using extensively in my projects, is quite larger – and frankly perhaps a tad overkill for CEP Panels, e.g. I doubt I would ever use a Calendar. But I’ve never complained of abundance: nice and very welcomed features are all kind of sliders, including ranges, and split-buttons, steppers, etc.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/wp-content/uploads/2018/11/slider.jpg&quot;&gt;&lt;img src=&quot;/wp-content/uploads/2018/11/slider.jpg&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can read in the &lt;a href=&quot;https://github.com/adobe/spectrum-css#where-is-the-javascript&quot;&gt;documentation page&lt;/a&gt; that:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;We have found that JavaScript is where a framework or library quickly becomes opinionated and stops being easy to use with or across other frameworks. To avoid this problem, Spectrum CSS avoids implementation details that require JavaScript. Where an element might require multiple states, the documentation here will simply show all the states in a flat, static example. We leave it to the frameworks implementing Spectrum CSS to create JavaScript that suits their needs.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Which means that we’re left on our own, but that’s not a big issue I suppose – hopefully there will be a Vue.js Spectrum components implementation in the near future :-)&lt;/p&gt;

&lt;h2 id=&quot;the-state-of-the-blog&quot;&gt;The state of the Blog&lt;/h2&gt;

&lt;p&gt;That was it for Spectrum CSS, I take the chance here now to inform you about blog updates, etc. As a matter of fact, I’ve slowed down things quite a bit as you’ve noticed: I took fewer Panel jobs and tried to focus on books and courses. I’ve had greatly unwelcome issues with my house’s restoration works (started a couple of years ago – both the works and the issues…) that proved to be a time/concentration/money sink. As a result, progress on development-related tasks have been erratic, to say the least. Recently, I try to record a couple of test videos to be bundled with the &lt;a href=&quot;https://www.ps-scripting.com/&quot;&gt;Professional Photoshop Scripting course&lt;/a&gt;, which will look more or less like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/wp-content/uploads/2018/11/DB-2018-11-18-at-11.23.40.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;There is no ETA yet – I will be able to tell you more as soon as I get the estimate for the roofing works, which will be followed by the insulation works, then the stairs, etc. Hopefully, before my hair gets completely gray 😉 Thanks for reading and for your support!&lt;/p&gt;
</description>
        <pubDate>Sun, 18 Nov 2018 11:37:18 +0100</pubDate>
        <link>http://localhost:4000/2018/11/adobe-spectrum-css-open-sourced/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/11/adobe-spectrum-css-open-sourced/</guid>
        
        <category>CSS</category>
        
        
        <category>CEP</category>
        
        <category>Scripting</category>
        
      </item>
    
      <item>
        <title>Professional Photoshop Scripting EAP Update</title>
        <description>&lt;p&gt;I’ve added 60 pages to accommodate an amazing new chapter on Adobe Generator!&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;https://www.ps-scripting.com/&quot;&gt;book&lt;/a&gt; is now 388 pages strong and packed with exclusive content found &lt;em&gt;nowhere else™&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/wp-content/uploads/2018/06/open-book-5.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Adobe Generator is an amazing and very little known technology available in Photoshop since version CC. It features a Node.js instance running in the background that you can use in a variety of interesting ways.&lt;/p&gt;

&lt;figure class=&quot;alignright&quot;&gt;
	&lt;img width=&quot;150&quot; src=&quot;/wp-content/uploads/2018/06/RkFdg4PI.png&quot; /&gt;
&lt;/figure&gt;

&lt;!-- [![](/wp-content/uploads/2018/06/RkFdg4PI_400x400-150x150.png)](/wp-content/uploads/2018/06/RkFdg4PI_400x400.png) --&gt;

&lt;p&gt;I’ve built several Generator Plug-ins expressly for this book: Pixmap extraction, Artificial Intelligence via an external service, Photoshop remote control from the Browser, bi-directional Socket communication, just to name a few. I’m sure you’ll enjoy them! Did you know that Adobe Generator has got its own icon? 🙂 This marks Professional Photoshop Scripting &lt;strong&gt;EAP version 0.2&lt;/strong&gt; – I would say that the main content is already in place. I plan to gather minor topics in one or two chapters, then proceed with the publication. &lt;del&gt;You can still &lt;a href=&quot;https://www.ps-scripting.com/&quot;&gt;buy it at a highly discounted price now&lt;/a&gt;!&lt;/del&gt;&lt;/p&gt;

&lt;h3 id=&quot;the-final-product&quot;&gt;The Final Product:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Final Book + Code, &lt;strong&gt;$149&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Final Book + Videos + Code, &lt;strong&gt;$249&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Final Book + Videos + Code (Team/Enterprise License), &lt;strong&gt;$499&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;early-access-program&quot;&gt;Early Access Program&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;del&gt;Early Access Book + Code, &lt;strong&gt;$99&lt;/strong&gt;&lt;/del&gt;&lt;/li&gt;
  &lt;li&gt;&lt;del&gt;Early Access Book + Code (Team/Enterprise License), &lt;strong&gt;$199&lt;/strong&gt;&lt;/del&gt;&lt;/li&gt;
  &lt;li&gt;&lt;del&gt;Discount Coupon for the Videos when they will be recorded&lt;/del&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Visit &lt;a href=&quot;https://www.ps-scripting.com/&quot;&gt;ps-scripting.com&lt;/a&gt; for details. Cheers!&lt;/p&gt;
</description>
        <pubDate>Mon, 11 Jun 2018 17:21:58 +0200</pubDate>
        <link>http://localhost:4000/2018/06/professional-photoshop-scripting-eap-update/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/06/professional-photoshop-scripting-eap-update/</guid>
        
        <category>EAP</category>
        
        <category>Professional Photoshop Scripting</category>
        
        
        <category>Scripting</category>
        
      </item>
    
      <item>
        <title>Automated check for corrupted image files with Python and ImageMagick</title>
        <description>&lt;p&gt;How do you check if an image file (tiff, psd, psb) is corrupted, other than looking at its thumbnail with Bridge, or opening it on Photoshop? With a small Python script and ImageMagick!&lt;/p&gt;

&lt;h2 id=&quot;background&quot;&gt;Background&lt;/h2&gt;

&lt;p&gt;The client of mine I work as a retoucher for had some problems with the so-called &lt;em&gt;Data Migration&lt;/em&gt; (the dull, time consuming, and error prone process of transferring a lifetime backup from old, once very expensive external drives to a set of new, somehow still equally expensive external drives). As a result, he got some corrupted files here and there in the destination drives – that’s the reason why you &lt;em&gt;migrate&lt;/em&gt; data: the source has insufficient capacity, it has become unstable, obsolete, or both combined. Problem is that we’re talking about several TB of data, mostly as .psb files (ranging from about 1 up to 20GB each), and it goes without saying that opening them all in Photoshop is not an option; nor you can trust Adobe Bridge thumbnails – provided that you’ve set the preferences to render previews for big files too – because it’s a manual process anyway. Even if I’m paid by the hour, staring at thumbs is not my preferred way to get blind. After some research, I’ve found no way (other than the one I’m about to describe) to check for psd/psb files corruption in an automated fashion. Which seems to me quite odd – if you have better, i.e. faster and/or simpler, solutions, please do suggest them to me in the comments below.&lt;/p&gt;

&lt;h2 id=&quot;what-you-need&quot;&gt;What you need&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.python.org/download/releases/3.0/&quot;&gt;Python 3&lt;/a&gt;, and &lt;a href=&quot;https://www.imagemagick.org/&quot;&gt;ImageMagick&lt;/a&gt;. Both will work either on Mac or Windows: I’ve no experience of them on the latter platform, so I will just assume that you will be successful in following the installation instruction provided in the official home pages. PC owners: read at least the part relative to ImageMagick. Mac users: read it all.&lt;/p&gt;

&lt;h3 id=&quot;python-3&quot;&gt;Python 3&lt;/h3&gt;

&lt;p&gt;If you’re on a Mac like me, you already have Python installed. Chances are that it is version 2.7, or another one but 3. Open the Terminal and type:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;python &lt;span class=&quot;nt&quot;&gt;--version&lt;/span&gt;
Python 2.7.10&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This is what I still get after having installed Python 3.6 myself, via &lt;a href=&quot;https://brew.sh/index_it&quot;&gt;Homebrew&lt;/a&gt;. I’m no Python expert, so it took me some Google time to understand that on a Mac you can still have the &lt;code class=&quot;highlighter-rouge&quot;&gt;python&lt;/code&gt; command pointing to the System’s old 2.7 version, even if you’ve freshly installed the new one. Solutions involve manually changing symlinks (power users advise against it), or using one of the available packages to create isolate Python environments (e.g. &lt;a href=&quot;https://virtualenv.pypa.io/en/stable/&quot;&gt;virtualenv&lt;/a&gt;, &lt;a href=&quot;https://github.com/pyenv/pyenv&quot;&gt;pyenv&lt;/a&gt;, etc. A list of them is found &lt;a href=&quot;https://stackoverflow.com/questions/41573587/what-is-the-difference-between-venv-pyvenv-pyenv-virtualenv-virtualenvwrappe&quot;&gt;here&lt;/a&gt;). I couldn’t make neither of them to work in a reasonable amount of time, so I’ve resorted to simply use the &lt;code class=&quot;highlighter-rouge&quot;&gt;python3&lt;/code&gt; command, e.g.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;python3 &lt;span class=&quot;nt&quot;&gt;--version&lt;/span&gt;
Python 3.6.2&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;imagemagick&quot;&gt;ImageMagick&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://www.imagemagick.org/&quot;&gt;ImageMagick&lt;/a&gt; is a multiplatform, open source commandline utility that performs a huge amount of tasks on all kinds of image files. I’ve installed via Homebrew, but it turns out that, at least on the Mac, it doesn’t come by default with the proper Delegates (aka Libraries) to deal with .psb files, which is what I needed the most. Finding the proper way to do so proved almost impossible to me: while reading the source code documentation (the last thing I wanted to do was to compile it from the source), I’ve discovered that via Homebrew you can list all the possible installation options for a package:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew options imagemagick

&lt;span class=&quot;nt&quot;&gt;--with-fftw&lt;/span&gt;
  Compile with FFTW support
&lt;span class=&quot;nt&quot;&gt;--with-fontconfig&lt;/span&gt;
  Build with fontconfig support
&lt;span class=&quot;nt&quot;&gt;--with-ghostscript&lt;/span&gt;
  Build with ghostscript support
&lt;span class=&quot;nt&quot;&gt;--with-hdri&lt;/span&gt;
  Compile with HDRI support
&lt;span class=&quot;nt&quot;&gt;--with-liblqr&lt;/span&gt;
  Build with liblqr support
&lt;span class=&quot;nt&quot;&gt;--with-librsvg&lt;/span&gt;
  Build with librsvg support
&lt;span class=&quot;nt&quot;&gt;--with-libwmf&lt;/span&gt;
  Build with libwmf support
&lt;span class=&quot;nt&quot;&gt;--with-little-cms&lt;/span&gt;
  Build with little-cms support
&lt;span class=&quot;nt&quot;&gt;--with-little-cms2&lt;/span&gt;
  Build with little-cms2 support
&lt;span class=&quot;nt&quot;&gt;--with-opencl&lt;/span&gt;
  Compile with OpenCL support
&lt;span class=&quot;nt&quot;&gt;--with-openexr&lt;/span&gt;
  Build with openexr support
&lt;span class=&quot;nt&quot;&gt;--with-openjpeg&lt;/span&gt;
  Build with openjpeg support
&lt;span class=&quot;nt&quot;&gt;--with-openmp&lt;/span&gt;
  Compile with OpenMP support
&lt;span class=&quot;nt&quot;&gt;--with-pango&lt;/span&gt;
  Build with pango support
&lt;span class=&quot;nt&quot;&gt;--with-perl&lt;/span&gt;
  Compile with PerlMagick
&lt;span class=&quot;nt&quot;&gt;--with-webp&lt;/span&gt;
  Build with webp support
&lt;span class=&quot;nt&quot;&gt;--with-x11&lt;/span&gt;
  Build with x11 support
&lt;span class=&quot;nt&quot;&gt;--with-zero-configuration&lt;/span&gt;
  Disables depending on XML configuration files
&lt;span class=&quot;nt&quot;&gt;--without-freetype&lt;/span&gt;
  Build without freetype support
&lt;span class=&quot;nt&quot;&gt;--without-jpeg&lt;/span&gt;
  Build without jpeg support
&lt;span class=&quot;nt&quot;&gt;--without-libpng&lt;/span&gt;
  Build without libpng support
&lt;span class=&quot;nt&quot;&gt;--without-libtiff&lt;/span&gt;
  Build without libtiff support
&lt;span class=&quot;nt&quot;&gt;--without-magick-plus-plus&lt;/span&gt;
  disable build/install of Magick++
&lt;span class=&quot;nt&quot;&gt;--without-modules&lt;/span&gt;
  Disable support &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;dynamically loadable modules
&lt;span class=&quot;nt&quot;&gt;--without-threads&lt;/span&gt;
  Disable threads support
&lt;span class=&quot;nt&quot;&gt;--HEAD&lt;/span&gt;
  Install HEAD version&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;So, after a first installation (without psb support), with no clear hint about the proper option(s) to use in my case, and even less spare time to test, I’ve chained them all – at least the seemingly appropriate ones, with little worries about being redundant. At all events, no one was watching me, nor would have ever known :-) The embarrassing line I’ve used is:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew reinstall imagemagick  &lt;span class=&quot;nt&quot;&gt;--with-fftw&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--with-fontconfig&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--with-ghostscript&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--with-hdri&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--with-libde265&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--with-liblqr&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--with-librsvg&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--with-libwmf&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--with-little-cms&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--with-little-cms2&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--with-opencl&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--with-openexr&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--with-openjpeg&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--with-openmp&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--with-pango&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--with-perl&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--with-webp&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--with-x11&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;It worked, so I was a happy camper.&lt;/p&gt;

&lt;h2 id=&quot;the-python-script&quot;&gt;The Python Script&lt;/h2&gt;

&lt;p&gt;Which is far from perfect, but it does the job – I’m sure that a proper Python developer can make it much better: it comes from surgical copy&amp;amp;paste from various Google Search result, plus a very light editing on my side.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;os&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;subprocess&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Popen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PIPE&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;folderToCheck&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'/Volumes/16TB/whatever/path'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fileExtension&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'.psb'&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;checkImage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;proc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Popen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;\&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'identify'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'-verbose'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fn&lt;/span&gt;\&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stdout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PIPE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stderr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PIPE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;proc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;communicate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;exitcode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;proc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;returncode&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exitcode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;err&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;directory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;subdirectories&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;walk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;folderToCheck&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endswith&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fileExtension&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;filePath&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;directory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;checkImage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filePath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0&quot;&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;utf-8&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ERROR &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;filePath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;OK &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;filePath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;-------------- DONE --------------&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;how-it-works&quot;&gt;How it works&lt;/h3&gt;

&lt;p&gt;The basic is the &lt;code class=&quot;highlighter-rouge&quot;&gt;identify&lt;/code&gt; call (that comes from ImageMagick), which is set to &lt;code class=&quot;highlighter-rouge&quot;&gt;-verbose&lt;/code&gt;. This is what performs the check: the rest is just looping through the filesystem, looking for the appropriate file extension, and logging a message.&lt;/p&gt;

&lt;h3 id=&quot;how-to-use-it&quot;&gt;How to use it&lt;/h3&gt;

&lt;p&gt;Save this on a file with a &lt;code class=&quot;highlighter-rouge&quot;&gt;.py&lt;/code&gt; extension, and then run it with the &lt;code class=&quot;highlighter-rouge&quot;&gt;python3&lt;/code&gt; command on a terminal, e.g.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;python3 check.py&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Before doing so, do change the content of the &lt;code class=&quot;highlighter-rouge&quot;&gt;folderToCheck&lt;/code&gt; variable with an actual folder on your disk (with absolute path), and the &lt;code class=&quot;highlighter-rouge&quot;&gt;fileExtension&lt;/code&gt; too: I’ve used &lt;code class=&quot;highlighter-rouge&quot;&gt;.psb&lt;/code&gt;, but you can change it to &lt;code class=&quot;highlighter-rouge&quot;&gt;.psd&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;.tif&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;.jpg&lt;/code&gt;, etc. As a result you’ll get a log in the Terminal; I’ve used a nifty, cheap application called &lt;a href=&quot;https://coderunnerapp.com/&quot;&gt;Code Runner&lt;/a&gt; for such tests, and this is the result:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/wp-content/uploads/2018/05/coderunner-700x426.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As you see, I’m just logging OK/ERROR with the path, very basic. What to do with this newly acquired piece of knowledge is up to you. Please note that:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The script processes nested folders too.&lt;/li&gt;
  &lt;li&gt;It is &lt;em&gt;awfully slow&lt;/em&gt; and hungry: it eats CPU cycles and RAM. But it’s automatic, so heck!&lt;/li&gt;
  &lt;li&gt;The file extension is case sensitive, so &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;.JPG&quot;&lt;/code&gt; is different from &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;.jpg&quot;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;how-to-make-it-better&quot;&gt;How to make it better&lt;/h3&gt;

&lt;p&gt;Few suggestions for the skilled Python developer (which I’m not, alas)&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Write on a log file instead of the console&lt;/li&gt;
  &lt;li&gt;Keep track of the processing status and resume from there&lt;/li&gt;
  &lt;li&gt;Display the advancement status (say, “image 34 of 320”)&lt;/li&gt;
  &lt;li&gt;Make the file extension case insensitive.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you know how to do any of this, please share your knowledge in the comments! Thank you!&lt;/p&gt;
</description>
        <pubDate>Tue, 08 May 2018 02:20:19 +0200</pubDate>
        <link>http://localhost:4000/2018/05/automated-check-for-corrupted-image-files-with-python-and-imagemagick/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/05/automated-check-for-corrupted-image-files-with-python-and-imagemagick/</guid>
        
        <category>Python</category>
        
        <category>imagemagick</category>
        
        
        <category>Coding</category>
        
      </item>
    
      <item>
        <title>Professional Photoshop Scripting Course &amp;#8211; Early Access Program</title>
        <description>&lt;p&gt;I’m glad to announce that I have opened the &lt;em&gt;Early Access Program&lt;/em&gt; to my new and very much awaited &lt;strong&gt;Professional Photoshop Scripting&lt;/strong&gt; course! Read along. The course that I have &lt;a href=&quot;/2017/08/photoshop-scripting-course-update-august-2017/&quot;&gt;announced&lt;/a&gt; in the past is now near completion: I would say 3/4 of the topics that I plan to cover have been written and edited – I’m at page 339 and counting! It took me way more than expected, though.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.ps-scripting.com&quot;&gt;&lt;img src=&quot;/wp-content/uploads/2018/04/PSScriptingCover-light.jpg&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;early-access-program&quot;&gt;Early Access Program&lt;/h2&gt;

&lt;p&gt;In a fashion that is nowadays quite common among technical writers, I have opened what is referred to as an &lt;em&gt;“Early Access Program”&lt;/em&gt;. If you’re not familiar with it, the idea is that you are able to read the book as I finish writing it. The advantages:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;You don’t have to wait for the final book to get started.&lt;/li&gt;
  &lt;li&gt;You’ll be sent a notification and download link as soon as further updates are ready (new Chapters, fixes, etc).&lt;/li&gt;
  &lt;li&gt;You can get the course at a ludicrously discounted price now, compared to book’s street price when it’ll be published.&lt;/li&gt;
  &lt;li&gt;You can contribute to the writing process with suggestions and feedback.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Sounds good?&lt;/p&gt;

&lt;h2 id=&quot;full-course-and-pricing&quot;&gt;Full Course and Pricing&lt;/h2&gt;

&lt;p&gt;This one will follow exactly the same price/bundle scheme of my previous &lt;a href=&quot;http://htmlpanelsbook.com/&quot;&gt;Adobe Photoshop HTML Panels Development&lt;/a&gt; course.&lt;/p&gt;

&lt;h3 id=&quot;the-final-product&quot;&gt;The Final Product:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Final Book + Code, &lt;strong&gt;$149&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Final Book + Videos + Code, &lt;strong&gt;$249&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Final Book + Videos + Code (Team/Enterprise License), &lt;strong&gt;$499&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;early-access-program-1&quot;&gt;Early Access Program&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;del&gt;Early Access Book + Code, &lt;strong&gt;$99&lt;/strong&gt;&lt;/del&gt;&lt;/li&gt;
  &lt;li&gt;&lt;del&gt;Early Access Book + Code (Team/Enterprise License), &lt;strong&gt;$199&lt;/strong&gt;&lt;/del&gt;&lt;/li&gt;
  &lt;li&gt;&lt;del&gt;Discount Coupon for the Videos when they will be recorded&lt;/del&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To be clear, the Early Access Program entitles you to all the work-in-progress updates, and the Final Release version too. Since I will record the videos when the book is completed, you’ll have access the video content as an optional upgrade.&lt;/p&gt;

&lt;h2 id=&quot;launching-ps-scriptingcom&quot;&gt;Launching ps-scripting.com&lt;/h2&gt;

&lt;p&gt;The course is for sale since April 23rd 2018, please head to the dedicated website &lt;a href=&quot;https://www.ps-scripting.com/&quot;&gt;www.ps-scripting.com&lt;/a&gt;! And help me to spread the world. 🙏🏻&lt;/p&gt;
</description>
        <pubDate>Fri, 20 Apr 2018 16:05:04 +0200</pubDate>
        <link>http://localhost:4000/2018/04/professional-photoshop-scripting-course-early-access-program/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/04/professional-photoshop-scripting-course-early-access-program/</guid>
        
        <category>Professional Photoshop Scripting</category>
        
        <category>EAP</category>
        
        
        <category>Scripting</category>
        
      </item>
    
  </channel>
</rss>
