<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <description>Digital Caveman. Photoshop retoucher and script/panels developer. I am also an author, check the Courses page!</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 18 Nov 2020 21:14:49 +0100</pubDate>
    <lastBuildDate>Wed, 18 Nov 2020 21:14:49 +0100</lastBuildDate>
    <generator>Jekyll v4.1.1</generator>
    
      <item>
        <title>Adobe UXP: Things you need to know! #4 Commands, Panels and the manifest.json</title>
        <description>&lt;p&gt;In this episode I‚Äôm discussing Panels vs. Commands in Vanilla JS UXP plugins and the way they are expressed in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;manifest.json&lt;/code&gt;&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/dWL-csGECW8&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;If you find this content useful, &lt;em&gt;please consider supporting me&lt;/em&gt; ‚Äì 2020 is a hell of a year. I don‚Äôt have a Patreon page, but I‚Äôve got two fairly cheap plugins on the Photoshop Marketplace, &lt;a href=&quot;https://adobe.com/go/cc_plugins_discover_plugin?pluginId=28db2e07&amp;amp;workflow=share&quot;&gt;ALCE&lt;/a&gt; (Advanced Local Contrast Enhancer) and &lt;a href=&quot;https://adobe.com/go/cc_plugins_discover_plugin?pluginId=78c3cdaf&amp;amp;workflow=share&quot;&gt;Double USM&lt;/a&gt; (on sharpening). If you happen to buy them, please leave a positive rating/review, it would greatly help. Or, you can&lt;/p&gt;

&lt;form action=&quot;https://www.paypal.com/donate&quot; method=&quot;post&quot; target=&quot;_top&quot;&gt;
&lt;input type=&quot;hidden&quot; name=&quot;hosted_button_id&quot; value=&quot;37N4GHTNJK8YE&quot; /&gt;
&lt;input type=&quot;image&quot; src=&quot;https://www.paypalobjects.com/en_US/i/btn/btn_donate_LG.gif&quot; border=&quot;0&quot; name=&quot;submit&quot; title=&quot;PayPal - The safer, easier way to pay online!&quot; alt=&quot;Donate with PayPal button&quot; /&gt;
&lt;img alt=&quot;&quot; border=&quot;0&quot; src=&quot;https://www.paypal.com/en_IT/i/scr/pixel.gif&quot; width=&quot;1&quot; height=&quot;1&quot; /&gt;
&lt;/form&gt;

&lt;p&gt;If you cannot, or don‚Äôt want to, that‚Äôs OK anyway.&lt;br /&gt;
Stay safe and thanks! üôèüèª&lt;/p&gt;

&lt;h2 id=&quot;the-whole-series-so-far&quot;&gt;The whole series so far&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/development/Adobe-UXP-things-you-need-to-know.html&quot;&gt;#01 ‚Äì Rundown on the UXP announcement @ the Adobe MAX 2020&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/development/Adobe-UXP-things-you-need-to-know-2-documentation.html&quot;&gt;#02 - Documentation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/development/Adobe-UXP-things-you-need-to-know-3-UXP-developer-tool.html&quot;&gt;#03 - UXP Developer Tool&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/development/Adobe-UXP-things-you-need-to-know-4-commands-panels-manifest.html&quot;&gt;#04 - Commands vs. Panels and the manifest.json&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;transcription&quot;&gt;Transcription&lt;/h2&gt;

&lt;p&gt;The transcripted video looks weird, but I‚Äôm told it helps to have it anyway because it‚Äôs easier to translate to other languages. Apologies for the lack of punctuation and the sloppy syntax.&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;em&gt;transcription in progress, please wait&lt;/em&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 18 Nov 2020 00:00:00 +0100</pubDate>
        <link>http://localhost:4000/development/Adobe-UXP-things-you-need-to-know-4-commands-panels-manifest.html</link>
        <guid isPermaLink="true">http://localhost:4000/development/Adobe-UXP-things-you-need-to-know-4-commands-panels-manifest.html</guid>
        
        <category>UXP</category>
        
        
        <category>Development</category>
        
      </item>
    
      <item>
        <title>Adobe UXP: Things you need to know! #3 UXP Developer Tool</title>
        <description>&lt;p&gt;In this episode I‚Äôll talk about the new UXP Developer Tool, that you‚Äôre going to use to load, reload, watch, debug and scaffold new UXP plugins from templates!&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/jj9ZzT1iwRU&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;If you find this content useful, &lt;em&gt;please consider supporting me&lt;/em&gt; ‚Äì 2020 is a hell of a year. I don‚Äôt have a Patreon page, but I‚Äôve got two fairly cheap plugins on the Photoshop Marketplace, &lt;a href=&quot;https://adobe.com/go/cc_plugins_discover_plugin?pluginId=28db2e07&amp;amp;workflow=share&quot;&gt;ALCE&lt;/a&gt; (Advanced Local Contrast Enhancer) and &lt;a href=&quot;https://adobe.com/go/cc_plugins_discover_plugin?pluginId=78c3cdaf&amp;amp;workflow=share&quot;&gt;Double USM&lt;/a&gt; (on sharpening). If you happen to buy them, please leave a positive rating/review, it would greatly help. Or, you can&lt;/p&gt;

&lt;form action=&quot;https://www.paypal.com/donate&quot; method=&quot;post&quot; target=&quot;_top&quot;&gt;
&lt;input type=&quot;hidden&quot; name=&quot;hosted_button_id&quot; value=&quot;37N4GHTNJK8YE&quot; /&gt;
&lt;input type=&quot;image&quot; src=&quot;https://www.paypalobjects.com/en_US/i/btn/btn_donate_LG.gif&quot; border=&quot;0&quot; name=&quot;submit&quot; title=&quot;PayPal - The safer, easier way to pay online!&quot; alt=&quot;Donate with PayPal button&quot; /&gt;
&lt;img alt=&quot;&quot; border=&quot;0&quot; src=&quot;https://www.paypal.com/en_IT/i/scr/pixel.gif&quot; width=&quot;1&quot; height=&quot;1&quot; /&gt;
&lt;/form&gt;

&lt;p&gt;If you cannot, or don‚Äôt want to, that‚Äôs OK anyway.&lt;br /&gt;
Stay safe and thanks! üôèüèª&lt;/p&gt;

&lt;h2 id=&quot;the-whole-series-so-far&quot;&gt;The whole series so far&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/development/Adobe-UXP-things-you-need-to-know.html&quot;&gt;#01 ‚Äì Rundown on the UXP announcement @ the Adobe MAX 2020&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/development/Adobe-UXP-things-you-need-to-know-2-documentation.html&quot;&gt;#02 - Documentation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/development/Adobe-UXP-things-you-need-to-know-3-UXP-developer-tool.html&quot;&gt;#03 - UXP Developer Tool&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/development/Adobe-UXP-things-you-need-to-know-4-commands-panels-manifest.html&quot;&gt;#04 - Commands vs. Panels and the manifest.json&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;transcription&quot;&gt;Transcription&lt;/h2&gt;

&lt;p&gt;The transcripted video looks weird, but I‚Äôm told it helps to have it anyway because it‚Äôs easier to translate to other languages. Apologies for the lack of punctuation and the sloppy syntax.&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;Hey I‚Äôm Davide and this is Adobe UXP things you need to know! Today I‚Äôm talking about the UXP Developer Tool. Which is what you use to load, reload, watch, debug and eventually package into a .ccx file your UXP plugin. So one thing to know among the things you need to know is that as opposed to CEP where you could just move or sim-link the folder of your extension into the directory whatever slash CEP slash extensions, with UXP this is not enough. Why? Because it‚Äôs the CCD app, the Creative Cloud Desktop app, that manages what plugin is loaded into what application. It has its own internal database to check against, so eventually it will move the plugin folder into whatever slash UXP slash whatever else, but you cannot do this manually, so it‚Äôs not enough. You need to use the UXP Developer Tool. So let‚Äôs install that: first head to the documentation website, which you know because you‚Äôve watched my previous video, and there is this Developer Tool tab here that you will click and you can find the macOS installer and the Windows installer. When you install it and launch it the first time it will ask you to enable the ‚Äúdeveloper mode‚Äù and you need to be an administrator to do so. If your user isn‚Äôt you can always create a JSON file called settings.json and with this content: developer true, and put it into one of those two folders: one for Mac and for Windows. There is also in Photoshop and you should check this as well in the plugins tab this ‚ÄúEnable Developer Mode‚Äù checkbox, so with this you should be ready to go. And here is the UXP Developer Tool so let‚Äôs add an existing plugin. Which one? Well you know that in the documentation, in the community tab, there is this UXP for Photoshop sample repo code on GitHub, and then you can download the entire zip and you have all those beautiful plugins for you to test. I‚Äôve already done that so I can go back to the UXP DevTool, click ‚ÄúAdd existing plugin‚Äù and I can point to the manifest.json of the ui-kitchen-sync. You have to use the manifest.json to load the plugin not into Photoshop, but first into the UI, right? You must see on the left column the host application: Adobe Photoshop 22, which is Photoshop 2021, otherwise this won‚Äôt work, of course. So this version of Photoshop is currently running. Now that you have it here, you can explicitly load it and this should bring it up in Photoshop: here it is, the kitchen-sink; I think I showed you this in the first video maybe. This is the spectrum typography, then you have the widgets all the things you can add, the native elements, HTML events, and whatnot so this is not really about the kitchen-sink but the UXP DevTool. One thing that you can do is, after we have loaded a plugin, to reload it in case you have changed its source code. I should have it here in Atom so this is the heading, this thing that you‚Äôre seeing here, let me add some exclamation marks. And I‚Äôm going to save and those changes are not caught by default in the plugin you have to reload this so let‚Äôs click this three dot button again and click reload and sure enough you see that the changes have been applied, right? But it‚Äôs kind of boring to have to manually reload it each time you may want to watch it for changes, so with this each time that you change something in the source folder is going to be reloaded the plugin is going to be reloaded automatically for you so let me remove those exclamation marks, save again and back to Photoshop: sure enough they‚Äôve been removed, right? Fine. So let me close this and another thing that you can do besides loading reloading watching and unwatching, so let me unwatch this, is to create a plug-in, scaffolding a plug-in. So let me do that: Create plug-in, you have to add name, let‚Äôs call this Test UXP plugin, and then you have to add an ID and this ID is given you by the Adobe Dev Console which is where you upload your plugin to for admission into the Adobe marketplace. You can change this later on so let me add zero-zero-zero-zero-zero here, right? Plugin version must be three numbers so 1.0.0 is fine the host application Photoshop okay and the version at least 22.0.0. Then you can select between two different templates: the ps-starter is the vanilla javascript one and then you have a React-based one, I‚Äôm going to show you the vanilla one. So select folder you have to enclose that in a new folder otherwise it would just throw the files in here so let me call this UXP Test Folder, and create that, right? Plugin‚Äôs been created successfully you have the toast, green toast here. Here it says that you will need to run additional commands from your terminal in order to install various dependencies, and this is true only if you are scaffolding a React plugin not a vanilla one: vanilla one is ready to go, right? So here we have it and so let‚Äôs load it in Photoshop. Plugin has been loaded successfully, and this is it. You can click populate layers and nothing happens, which is fine because this works when you have an open document. So, let me open this in Atom, it was UXP Test Folder, this here, and you see the code is very basic: and index.html and then there‚Äôs the JS and the manifest and this is the ID that you can always change later on as well as all the other data here, right? Okay, now that we have this plugin open we might want to debug it so let‚Äôs click Debug and this pops up this Chrome DevTool-like window. I say that it‚Äôs like a Chrome DevTool because it‚Äôs not fully-fledged, you see that there are a lot of things missing here: you cannot install other things for instance the React DevTool ‚Äì yet might be possible in the future ‚Äì but it works exactly as the Chrome DevTool: you have the Console with an error, and I‚Äôm going to show you why in a minute. And one thing that you can do which is quite helpful is to use the Console to experiment with the Photoshop API. Let me try to make this‚Ä¶ Oh no, I cannot make the font size bigger, and this is one of the limitation of the Console as it is right now: some of the keyboard shortcuts don‚Äôt work. For instance you can clear the console with ctrl+L but you cannot use Command + for instance to change the font size. So what you can do is to use this as I said Console to experiment: so let‚Äôs say const photoshop equal require Photoshop I‚Äôm typing this a lot so I already have it here. And then you have the Photoshop object, for what? Well to play: photoshop, and then dot, and then you can see everything that you have the app, the core‚Ä¶ So let me pick app and then you click dot and you just see what‚Äôs in there right? If you knew the documentation like the back of your hand you would know what everything here is. I don‚Äôt so I‚Äôm just, you know, picking things: the actionTree, so what is this Photoshop.app.actionTree? No idea, let‚Äôs check this out. So it turns out that it‚Äôs an array of actionSets and each actionSet is an object that contains properties, such as the action array, and the action array in turn has actions with an index, with the name, and an id. Okay, so I‚Äôve learned a new thing, right? What can I do with an action? I don‚Äôt know, let‚Äôs try this again. So Photoshop.app.actionTree, so the actionTree is an array so let me pick the first element in the array, so the one with index of 0, so this is an object that has an actions property; the actions is an array so let me pick the first one, again. If I click dot I see all the things that I can do: and I can get the index, I can get the name, I can play it so this looks promising. Let‚Äôs try this: play seems an action so probably it‚Äôs going to be a function so let‚Äôs add a couple of parentheses here and click this, and it says‚Ä¶ First of all something happened, which is cool, the command make is not currently available so let me stop, and what is this? Probably the action which is this one, so the first actionSet, the first action wants to make a snapshot but I don‚Äôt have any document open so this breaks which is fine. The point of all that is that you can use the Console and the auto-completion in the Console to just experiment things you can always then go back to the actual documentation and which is here Photoshop API, the modules, and Photoshop and here you see the actionTree then you have a confirmation that it outputs an actionSets array and so on so forth‚Ä¶ You can educate yourself in the documentation; I would say that it‚Äôs better to use the documentation and then test things in the Console or you can also use the other way around it‚Äôs probably a little bit more fun. Okay, so back to our original panel here: when we click this populate layers we saw that we have an error. Cannot read property layers of null, so let‚Äôs debug the error. In the code, which is here, we see that we have this sp-button and mind you the plugin uses Spectrum Components so sp-something. You have an sp-body with id of layers and body is not really a body is like a paragraph, right? So it‚Äôs styled, it changes the color depending on the theme so it‚Äôs light when the theme is dark and vice versa. It says no layers, does it? Yes, and when you click this button with id of btn-populate what happens is that you have a listener for the click event for this button populate that runs the showLayerNames function which is up here. he showLayerNames uh first stores into the app constant the Photoshop app objectm and then checks for the layers of the active document and then maps all the layers so this is an array, allLayers is an array, and it creates a new array running this function here function that takes the layer as an argument and outputs or returns the layer name and stick that array of layer names into this allLayerNames array and then sorts it with the sort method and when you have this sortedNames array, so this is an array it, changes the innerHTML of this layers element which is this sp.body here so sp-body is not going to be ‚Äúno layers‚Äù anymore but it‚Äôs going to be what? A string created using these backticks with an unordered list, and then you use ‚Äì this is all modern JavaScript, so you have the backtick string and then you can interpolate with the dollar and open and closed curly braces. You have the sortedNames array then you map the sortedNames array so you run this function for each one of the sorted names: you take the name as a parameter, and then you output for each one of those a string with a list item, with the name in it, and then eventually you have this array of list item strings, and then you join it. So eventually it is just one long string of list items, and then you close the unordered list. By the way if you remember in the last video I told ‚Äì last video? Yeah the last video ‚Äì I told you that there is no such a thing as an unordered list in UXP, reason why in this plugin they are adding specific styles to the list items because otherwise it won‚Äôt have it by default, right? So let‚Äôs check this out in Photoshop, I want to create a dummy document and let me duplicate the layers some times and click Populate Layers. And you see that you have the background, layer one, copy, copy two, copy three, right? So this is okay but I want to fix this error here ,so let‚Äôs debug that. One thing that you can do is in the Sources to add a breaking point right? So you click here, it‚Äôs the same with Chrome DevTool, I‚Äôm showing this to you just in case you‚Äôre not really familiar with it. So you see that we have this Uncaught Type Error: cannot read property layers of null. So let me close the document so that we have no document, so we are able to recreate the error. I‚Äôve added this breaking point; am I watching the source code? I‚Äôm not, so let me watch this, so that each time that I change the source code it‚Äôs automatically reloaded right? Okay and this time you should be able to click Populate Layers and have an error output, and when I click the button you see that the app is paused on that breakpoint: and I can use the step-over, step-in, step-out buttons as usual, so let me step-in. Let me try to make this a little bit bigger, I have the app object and it breaks here and the error is: ‚Äúcannot read property layers of null‚Äù right? So we have seen how to create a breaking point we‚Äôve got the error so now let‚Äôs fix this. Of course it can‚Äôt read the property layer because we don‚Äôt have any active document. So let‚Äôs get back to Atom, index.js, I want to stick that outside of the function because this might be useful to have for all the functions as well. So I need to check whether this app activeDocument exists or not so if not if we have no app activeDocument then just return, right? Well actually let‚Äôs say let‚Äôs console log something: console.log no docs and then return. All right, so let‚Äôs save this, Populate Layers: no docs, right? So this works. So one thing that I want to mention in this template: you have the index, you have the html, you have JavaScript, the manifest, but also this watch dot shell that uses this UXP plug-in load command. So if you try this if you try running this it‚Äôs not going to work because this was made when, in a pre-release, we had this UXP command-line utility. So the UXP DevTool initially existed as a command-line utility then evolved with the UI which is more easy to use and with more features. I am told that the command-line utility which I like very much because it‚Äôs easier if you will to plug into npm scripts, especially when you‚Äôre building a larger project, I‚Äôm told that this is going to be released as well so it‚Äôs going to be updated and matched feature-wise with the UXP DevTool with the GUI. So eventually in the future, probably, you‚Äôre going to have the choice to use either the command-line utility or this UXP DevTool as we use it now. So what else? We have loaded, reloaded, watched, debugged, logs, well logs just opens the the Console and there‚Äôs the possibility to package that plugin into a .ccx file. If you don‚Äôt remember where the folder is you can Open Folder and then it shows you in Finder and what? You have these options with breaking point and start, and all right: this Advanced with the plugin build folder here it says path should be relative to the selected manifest.json file. So this is useful when you use React plugins and should be documented in the DevTool working with React here watching your plugin. So basically the idea is that you tell the UXP DevTool to load the plugin based on the source manifest file, but when you use React you very likely have Webpack running and Webpack is going to output the final product into a /dist folder with its own manifest so you can tell the UXP DevTool where to find that distribution manifest so you say something like /dist, like that and this is better so that the UXP can manage with the hot-reloading thing. I think. What else? Here you can find the UXP DevTool preferences with the service port this is the port through which the UXP DevTool connects with Photoshop, and then you can change the theme from light to dark and vice versa of course this is built with spectrum components so it‚Äôs quite nice. All right I think this wraps it up I hope you enjoyed this one and if you did please consider supporting me, I‚Äôve even added a donation button in my website. Or you can purchase ALCE and Double USM in the Photoshop marketplace and if you happen to buy them please leave a positive rating or review which will always help very much. Okay, thanks for watching and see you in the next one. Bye!&lt;/p&gt;
</description>
        <pubDate>Fri, 13 Nov 2020 00:00:00 +0100</pubDate>
        <link>http://localhost:4000/development/Adobe-UXP-things-you-need-to-know-3-UXP-developer-tool.html</link>
        <guid isPermaLink="true">http://localhost:4000/development/Adobe-UXP-things-you-need-to-know-3-UXP-developer-tool.html</guid>
        
        <category>UXP</category>
        
        
        <category>Development</category>
        
      </item>
    
      <item>
        <title>Adobe UXP: Things you need to know! #2 Documentation</title>
        <description>&lt;p&gt;In this episode I‚Äôm covering &lt;a href=&quot;https://www.adobe.io/&quot;&gt;adobe.io&lt;/a&gt;, the new developer portal that hosts the Photoshop UXP documentation among other things. And for once I‚Äôm glad they‚Äôre stealing my job ‚Äì the material they‚Äôve put together does stand out!&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/5SOUAWg-ghs&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;If you find this content useful, &lt;em&gt;please consider supporting me&lt;/em&gt; ‚Äì 2020 is a hell of a year. I don‚Äôt have a Patreon page, but I‚Äôve got two fairly cheap plugins on the Photoshop Marketplace, &lt;a href=&quot;https://adobe.com/go/cc_plugins_discover_plugin?pluginId=28db2e07&amp;amp;workflow=share&quot;&gt;ALCE&lt;/a&gt; (Advanced Local Contrast Enhancer) and &lt;a href=&quot;https://adobe.com/go/cc_plugins_discover_plugin?pluginId=78c3cdaf&amp;amp;workflow=share&quot;&gt;Double USM&lt;/a&gt; (on sharpening). If you happen to buy them, please leave a positive rating/review, it would greatly help. Or, you can&lt;/p&gt;

&lt;form action=&quot;https://www.paypal.com/donate&quot; method=&quot;post&quot; target=&quot;_top&quot;&gt;
&lt;input type=&quot;hidden&quot; name=&quot;hosted_button_id&quot; value=&quot;37N4GHTNJK8YE&quot; /&gt;
&lt;input type=&quot;image&quot; src=&quot;https://www.paypalobjects.com/en_US/i/btn/btn_donate_LG.gif&quot; border=&quot;0&quot; name=&quot;submit&quot; title=&quot;PayPal - The safer, easier way to pay online!&quot; alt=&quot;Donate with PayPal button&quot; /&gt;
&lt;img alt=&quot;&quot; border=&quot;0&quot; src=&quot;https://www.paypal.com/en_IT/i/scr/pixel.gif&quot; width=&quot;1&quot; height=&quot;1&quot; /&gt;
&lt;/form&gt;

&lt;p&gt;If you cannot, or don‚Äôt want to, that‚Äôs OK anyway.&lt;br /&gt;
Stay safe and thanks! üôèüèª&lt;/p&gt;

&lt;h2 id=&quot;the-whole-series-so-far&quot;&gt;The whole series so far&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/development/Adobe-UXP-things-you-need-to-know.html&quot;&gt;#01 ‚Äì Rundown on the UXP announcement @ the Adobe MAX 2020&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/development/Adobe-UXP-things-you-need-to-know-2-documentation.html&quot;&gt;#02 - Documentation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/development/Adobe-UXP-things-you-need-to-know-3-UXP-developer-tool.html&quot;&gt;#03 - UXP Developer Tool&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/development/Adobe-UXP-things-you-need-to-know-4-commands-panels-manifest.html&quot;&gt;#04 - Commands vs. Panels and the manifest.json&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;transcription&quot;&gt;Transcription&lt;/h2&gt;

&lt;p&gt;The transcripted video looks weird, but I‚Äôm told it helps to have it anyway because it‚Äôs easier to translate to other languages. Apologies for the lack of punctuation and the sloppy syntax.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Hey I‚Äôm Davide and this is Adobe UXP: Things you need to know! Today I‚Äôm talking about documentation. And I know this doesn‚Äôt really sound exciting, and a lot of you have already asked me to cover more advanced topics such as BatchPlay or the Alchemist plugin but this series tries to reach a larger audience, even people who have less experience in Adobe development. Hence learning how to navigate the new documentation portal is paramount; and by the way Adobe has put a lot of effort in the creation of such documentation so it‚Äôs fair for us at least to acknowledge their efforts and try to understand what‚Äôs in there. And by the way the UXP section of the Adobe portal for developers is a work-in-progress so let‚Äôs be forgiving if we find a link that is missing, or information that is a bit rough. So let me show you what we‚Äôre talking about. So this is the place to go Adobe.io and you might be tempted to just scroll down until you find the Adobe Photoshop API and click learn more. This is not really what you would expect if you‚Äôre looking for UXP content because the Photoshop API is something related to Photoshop as a Service, which is not the Photoshop-server thing but closer to it than it is to UXP. Quite interesting one, but not what we are after. You have to click this discover tab here and then you can find Photoshop, and here, right about here the UXP plugin API mini-site. so let‚Äôs click ‚ÄúView the docs‚Äù and here it is. This is the landing page with information on what to expect in this mini-site and let me pick the Guides and first thing that pops to the eye is that we have three levels of Navbars. So the top navbar here is the first level, and we have selected the Guides, and the second level is on the sidebar at the left, and the sidebar on the right just keeps track of where we are in the page as we scroll down or up. Other thing to notice is this ‚ÄúEdit in GitHub‚Äù link here and ‚ÄúLog an issue‚Äù because all this website, which by the way is based on something called the Gatsby Theme Parliament, Adobe Gatsby Theme Parliament or something like that, this is a template that uses Gatsby hence React.js that Adobe has made open source and you can look for it if you want. So everything here belongs to this AdobeDocs user, and this UXP-Photoshop repository also you can log an issue here if you find, I don‚Äôt know what, misleading information, or wrong statements or missing links, or whatnot. Again this is a working progress so it is to be expected to find missing pages and wrong links; that‚Äôs going to be okay. So I‚Äôm going to quickly browse through the documentation ‚Äì not reading it, but just pointing out interesting elements so that you know where to find them when you will need it in the future. So the ‚ÄúGetting Started‚Äù is just a very quick overview of the UXP technology and ‚ÄúUXP for you‚Äù points you to different pages depending on your background so if you are a UXP developer in XD but not in Photoshop you start here, if you have CEP experience but not UXP then you go there and, so on and so forth. ‚ÄúUXP toolchain‚Äù is describing you what you need in case you want to use, you want to create UXP plugins vanilla javascript UXP plugin so the UXP developer tool and then Visual Studio Code, a code editor or a more advanced toolchain in case you want to create React based UXP plug-ins so Node.js, npm and so on and so forth, how to install them and and other other things. So for instance this Kitchen-Sink example here is a sample plug-in that shows all the elements that you can use in the interface. Quite useful. ‚ÄúUXP for Photoshop basics‚Äù well this is the DOM, or the scripting side of UXP in Photoshop, so they tell you synchronous versus asynchronous scripting, how to use the various objects that are provided in this required Photoshop object. So in the app you have documents layer and so on and so forth, so this is just scripting. The ‚ÄúUXP Developer Tool‚Äù is a brief section or introduction to it, more information in the ‚ÄúDeveloper Tool walkthrough‚Äù where they tell you how to watch, load, reload, create a new plugin from a template and so on and so forth. And in ‚ÄúOther topics‚Äù you can find info about the UXP manifest, how to localize your plugin, the flyout menu access, file system, networking and Spectrum CSS. So what else? ‚ÄúHow do I‚Ä¶‚Äù this is a section that tells you how to perform basic tasks, so for instance: exporting and importing modules in your UXP plugin, how to use promises, async awaits. Specific snippets, these are things that you might find yourself using over and over again, especially for debugging purposes. FileIO, or other useful snippets, this shows you how to display a simple alert and mind you there is no equivalent in UXP to the prompt or the confirm functions, at least so far. Theme awareness: this goes into a theming for the plugin, and CSS vars so you can use ‚ÄìUXP-host-background-color so on and so forth. You also have examples on how to use them. Debugging your plugins shows you how to look for manifest problems, installation problems, javascript, CSS and what else, especially Gremlins. We have a lot of Gremlins in UXP. Photoshop API this is a section where you dig deeper into the scripting side of UXP, so you have all these modules for all the various objects that you have in the Photoshop: apps, action, action set, document, layer, and so on so forth. So let me just bring up the layer where you have all the various props and functions that you can run. So for instance how to duplicate a layer, right, and this is the place where to find all information. Mind you the DOM is still largely incomplete, so it is okay if you don‚Äôt find here what you were looking for, because you can always use BatchPlay which is here and this is the section where they tell you about the various BatchPlay options and how to run it. It‚Äôs quite bare as a section but I‚Äôm sure they‚Äôre going to add more information as time goes by. API extensions this is something I doubt I have already covered in my previous video and it‚Äôs interesting. I want to mention it here. We are now allowed to extend the prototype of a native object so you can add this custom prepend low-dash for instance function in the document prototype so that you can call it, for instance app.activedocument then you can run this prepend low dash that is going to rename all the layers prepending a low dash in their name so you can extend the prototype of the Photoshop document, layer, action set, and action. Then there‚Äôs this section about the communication between a UXP plugin and C++ plugins and how to listen to events. Also here they mentioned that app event notifier is not something that you want to use in commercial plugins because this is quite resource intensive and by the way it requires for the user to have the developer mode switched on in the Photoshop preferences, which users usually don‚Äôt have. So this is okay when developing a UXP plugins, this is not okay when these plugins are shipped to the marketplace. UXP API this is a section about instead the specific things of UXP, so not the host application, not Photoshop, not the scripting, but the panels and stuff. The javascript reference, global members, and modules these are all the things that you have access to in UXP so the clipboard websocket fetch and what else: data storage, you have local storage and a session based storage and all the various html events, html dom, and html elements, and the modules. These are specific to UXP so you have the ‚Äúos‚Äù not to be confused to node.js ‚Äúos‚Äù this is a different thing, you have three different methods for the platform: darwin is Mac, or windows-whatever is Windows. The release number, and then the architecture: 32-bit 64 and so on so forth. Mind you the release doesn‚Äôt correspond to the actual macOS version if you are on darwin. Let me show that to you: darwin versions, so for instance let me scroll down here if you have a darwin version of I don‚Äôt know 18.2 this is macOS 10.14, so you have to match them in order to know what operative system your users are using. Then the shell has just one method which is used to open a url in the default browser and then the ux well this is big I‚Äôm not going to cover this here because it‚Äôs going to have its own video but these are UXP specific things. For instance the entry points is an object that takes care of what happens during the UXP life cycle for instance the functions that you want to run when the panel shows or is created. And then you have storage, various information about it and key/value storage, version, host information and so on and so forth. The secure storage don‚Äôt be misled by the name: secure storage is encrypted but the user can decrypt it so you won‚Äôt store here information that you want to hide from the user, so for instance licensing information ‚Äì this is not the right place. Just mentioning this. And then what we have CSS reference here, so what‚Äôs available in UXP in terms of CSS as I mentioned in a previous video not everything is available so you have all the general variables, units, you can also use a ‚Äúcalc‚Äù function, which is cool and then what: selectors, media queries, pseudo elements, pseudo classes, and styles. So all these things are available with some caveats: so for instance the opacity here sets the opacity of an element, that‚Äôs okay. You have the MDN link but then quirks and exceptions: red flag Photoshop does not support this property although UXP will parse it do not use this style to control visibility! So read all of that if you‚Äôre going to use these styles here. And then what else_ we have similarly an html reference with the general supported and unsupported elements. Let‚Äôs check the unsupported elements first: in the typography quite surprisingly you don‚Äôt have a italic, you don‚Äôt have a strong, you don‚Äôt have a blockquote, pre, or code, you don‚Äôt even have an ordered list nor ordered list. You can add them, they won‚Äôt display as you expect them to do so you have to add your own styling for that. You don‚Äôt have the title. And these are the unsupported attributes, and then you have all the things that are instead supported: the body, the head, the html, link, so on so forth. Hierarchy, let me pick this h4 here, they tell you that the h4 is equivalent to the Spectrum heading of size extra-small, okay thank you. And then you have this Spectrum UXP reference because you know you can use Spectrum web components, they are already available without the need for you to import anything, as sp-something: sp-button and so on and so forth. So let‚Äôs see what‚Äôs in there about Spectrum UXP, so what‚Äôs Spectrum UXP, and using it with React. React has some quirks in terms not of Spectrum web components but web components in general. For instance, you have to use a closing tag, not self-closing tags. With Spectrum web components you have to use class instead of classname, so if you have a div in React well then you have to use classname, if you have e.g. a Spectrum icon you have to use class. And then more and then this is really important boolean attributes, this which you would normally use with React is not going to work with Spectrum web component: instead you have to use the ternary operator, and check for the property and set explicitly to true or null or undefined. And then event handling. What else: typography here, these are the available Spectrum typography web components and by the way if you look at the Spectrum web components website, this here, you don‚Äôt have for instance the sp-body that instead you have available in UXP. So there is an overlap between Spectrum web components in UXP and Spectrum web components tout-court but it‚Äôs a funny kind of overlap. And then you have sp-detail, a heading, label and so on and so forth. If you want to see how they look uh well then you have to go to the Spectrum web components website and then you have here for instance the switch which by the way is not one of the available web components in UXP so you have it here you can see how it looks but in this case it‚Äôs not found among the UXP components but it will be introduced later on. So if you want to see for instance sp-detail let‚Äôs check, detail should be in the typography, probably‚Ä¶ no no it turns out that not even sp-detail is found here but it should be found in the Spectrum CSS, so Spectrum CSS we should have the sp-detail I think in the typography here, please, yeah typography detail so you see it‚Äôs it‚Äôs kind of funny: some things are found in the Spectrum web components, other things are found in the Spectrum CSS, and some of them are in the UXP. Anyways, user interface these are all the available elements such as buttons, checkboxes, and whatnot. Again let me check for instance this here, yeah you have a graphic display of how they look like, not as interactive as the one in the Spectrum web component, so for instance let me check this slider here. These should be functional, yes, these are just images, yes, and then you have uh the code samples down below. Known issues, this is something really important that you should know like the back of your hand because many things won‚Äôt work as you would expect them to do, and so here you find all the known issues for UXP right? Sample code you find here javascript samples, React samples, and batch play samples. Then the design section is about designing a plug-in experience, so basically the Adobe guidelines in terms of the UI of the plug-in UX patterns. I don‚Äôt think these links work, yes they don‚Äôt but they will. So the user experience patterns, the user interface suggestions and so on and so forth. And then a section on the developer tool installation, plugin management, and working with React. And the UXP dev tool. The share tab is quite important as well because here is where Adobe tells you how to package your plugin, that is to say how to create the .ccx file, the options that you have for distribution, so for instance you can email they say your .ccx file, or upload it to the marketplace. The various guidelines for submission and review to the marketplace, and again: this is quite a strict process so you have to follow the Adobe guidelines otherwise your plugin is going to be rejected. And how to market your plugins t‚Äì his is not yet there but they‚Äôre going to add this kind of information as well. And finally the community: so we have now a Creative Cloud developer forums based on Discourse I think. Actually Adobe XD already had it I think, because this message is from August 2018, if I am correct. I should be. and the Photoshop section has been added quite recently so this is the place where you can meet other developers and discuss topics, and ask questions. Then you have the GitHub repo for the entire UXP doc minisite and the sample code repo where you can find all the available samples. So these are plugins that you can just, you know ,grab the code from and and learn from. WebSocket example, web service call example, and so on and so forth. And I think that with this I can wrap this video up. If you have enjoyed it please consider supporting me I don‚Äôt have any Patreon pages as I told you last time but I have Adobe development content and especially if you want to help: a purchase of my two extensions that are in the UXP marketplace would be a great thing, they‚Äôre still for sale at 16 bucks each, and if you happen to buy them just please leave a positive rating or review which will help immensely. If you cannot or don‚Äôt want to that‚Äôs okay right thank you for watching and see you in the next one. Stay safe! Bye.&lt;/p&gt;
</description>
        <pubDate>Thu, 05 Nov 2020 00:00:00 +0100</pubDate>
        <link>http://localhost:4000/development/Adobe-UXP-things-you-need-to-know-2-documentation.html</link>
        <guid isPermaLink="true">http://localhost:4000/development/Adobe-UXP-things-you-need-to-know-2-documentation.html</guid>
        
        <category>UXP</category>
        
        <category>Adobe MAX</category>
        
        
        <category>Development</category>
        
      </item>
    
      <item>
        <title>Adobe UXP: Things you need to know!</title>
        <description>&lt;p&gt;I am starting a new series on development, called ‚ÄúAdobe UXP: Things you need to know‚Äù (I‚Äôm getting fancy with titles üòä) In my intentions it‚Äôll be very much along the lines of the old ‚ÄúHTML Panels Tips‚Äù series but in a different media. This first installment, a quick rundown on the news from the Adobe MAX 2020 announcement, is a 27 minutes video.&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/zAOUBpDjc1Q&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;Let me know what you think: feedbacks on the series idea, about UXP, life during the pandemic.
Speaking of which: if you find this content useful, &lt;em&gt;please consider supporting me&lt;/em&gt; ‚Äì 2020 is a hell of a year. I don‚Äôt have a Patreon page, but I‚Äôve got two fairly cheap plugins on the Photoshop Marketplace, &lt;a href=&quot;https://adobe.com/go/cc_plugins_discover_plugin?pluginId=28db2e07&amp;amp;workflow=share&quot;&gt;ALCE&lt;/a&gt; (Advanced Local Contrast Enhancer) and &lt;a href=&quot;https://adobe.com/go/cc_plugins_discover_plugin?pluginId=78c3cdaf&amp;amp;workflow=share&quot;&gt;Double USM&lt;/a&gt; (on sharpening). If you happen to buy them, please leave a positive rating/review, it would greatly help. Or, you can&lt;/p&gt;

&lt;form action=&quot;https://www.paypal.com/donate&quot; method=&quot;post&quot; target=&quot;_top&quot;&gt;
&lt;input type=&quot;hidden&quot; name=&quot;hosted_button_id&quot; value=&quot;37N4GHTNJK8YE&quot; /&gt;
&lt;input type=&quot;image&quot; src=&quot;https://www.paypalobjects.com/en_US/i/btn/btn_donate_LG.gif&quot; border=&quot;0&quot; name=&quot;submit&quot; title=&quot;PayPal - The safer, easier way to pay online!&quot; alt=&quot;Donate with PayPal button&quot; /&gt;
&lt;img alt=&quot;&quot; border=&quot;0&quot; src=&quot;https://www.paypal.com/en_IT/i/scr/pixel.gif&quot; width=&quot;1&quot; height=&quot;1&quot; /&gt;
&lt;/form&gt;

&lt;p&gt;If you cannot, or don‚Äôt want to, that‚Äôs OK anyway.&lt;/p&gt;

&lt;p&gt;Stay safe and thanks! üôèüèª&lt;/p&gt;

&lt;h2 id=&quot;the-whole-series-so-far&quot;&gt;The whole series so far&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/development/Adobe-UXP-things-you-need-to-know.html&quot;&gt;#01 ‚Äì Rundown on the UXP announcement @ the Adobe MAX 2020&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/development/Adobe-UXP-things-you-need-to-know-2-documentation.html&quot;&gt;#02 - Documentation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/development/Adobe-UXP-things-you-need-to-know-3-UXP-developer-tool.html&quot;&gt;#03 - UXP Developer Tool&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/development/Adobe-UXP-things-you-need-to-know-4-commands-panels-manifest.html&quot;&gt;#04 - Commands vs. Panels and the manifest.json&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;transcription&quot;&gt;Transcription&lt;/h2&gt;

&lt;p&gt;Since I‚Äôve been asked about it here‚Äôs the speech transcription (automatically generated by YouTube and then edited to match the actual audio content). Hope this helps!&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Hey this is Davide, and the time has finally¬†
come to talk about UXP. So housekeeping first,¬†¬†
this is not a new podcast. The world doesn‚Äôt¬†
need a new one, but the topic - UXP the Unified¬†¬†
Extensibility Platform - is so important that I¬†
decided to set aside the dry blog posts that I¬†¬†
usually write and try with a medium that allows¬†
me a more extended, and probably even more¬†¬†
nuanced, kind of conversation. So here I would¬†
like to match in UXP terms the HTML Panels¬†¬†
Tips series that I had posted on my blog¬†
years ago, which was quite helpful I‚Äôm told.¬†¬†
So my intention is to cover all the basics about¬†
UXP for third-party developers and in this first¬†¬†
installment I would just want to introduce you to¬†
the big news that Adobe has dropped at MAX 2020,¬†¬†
and basically answer the following questions.¬†
What the heck is UXP? Should I care? How to¬†¬†
prepare? Can you help? Those kind of things. And¬†
then in the next videos, which might be videos¬†¬†
or written posts I don‚Äôt know yet, just leave me¬†
your feedback so that I know what is best for you,¬†¬†
I will try to dig deeper on those subjects. But¬†
for the time being let‚Äôs just review the big news.¬†¬†
It‚Äôs not really that UXP has been announced at¬†
MAX because it was already there in Adobe XD.¬†¬†
The news is that UXP is available to third-party¬†
developers like me, and probably like you,¬†¬†
in one of the major Creative Cloud applications:¬†
Photoshop 2021. I haven‚Äôt even touched what UXP¬†¬†
is, but you have to know that this is¬†
the future of extensibility for all the¬†¬†
major Creative Cloud apps so after effects¬†
indesign illustrator and so on and so forth¬†¬†
actually it is already there and this¬†
is being revealed by Adobe themselves¬†¬†
so UXP powers internal feature development¬†
in addition to third-party extensibility.¬†¬†
I.e Adobe is using UXP now as they were using¬†
CEP, the Common Extensibility Platform in the past¬†¬†
to implement first-party features: for instance¬†
in Photoshop there‚Äôs the I think it‚Äôs called¬†¬†
the New File dialog that was a CEP dialog and¬†
it has been converted now to a UXP dialog, so¬†¬†
those kind of features are right now implemented¬†
in Photoshop, Illustrator, InDesign, Premiere Pro¬†¬†
and so on and so forth. But they are not available¬†
to third-party developers except for Photoshop and¬†¬†
of course XD. So UXP API in Photoshop 2021, and¬†
in the end this is going to get almost everywhere.¬†¬†
And the really important bit: UXP, the Unified¬†
Extensibility Platform, is going to replace CEP,¬†¬†
the Common Extensibility Platform in the long run.¬†
So the Unified will beat the Common. But relax,¬†¬†
this is not going to happen overnight. We will¬†
have plenty of time to learn the new thing and¬†¬†
port legacy code to UXP. This is what we have¬†
been told over and over again. quote &amp;amp; quote:¬†¬†
plenty of time. But we haven‚Äôt been given¬†
any actual expiration date so right now CEP¬†¬†
and UXP are co-existing in the same Photoshop.¬†
If you ask me what this ‚Äúplenty of time‚Äù means¬†¬†
well when you have plenty of something you have¬†
more than one unit of that something. And speaking¬†¬†
of time the unit here is likely one cycle i.e one¬†
major version. So I would say that it is fair to¬†¬†
expect that we‚Äôll have at the very least a couple¬†
of cycles, two years of CEP and UXP overlap. Maybe¬†¬†
more. In my optimistic days I would say at least¬†
twice that, so four years. But let‚Äôs just say¬†¬†
at the very least two. And actually nobody¬†
really knows, this is my best guesstimate.¬†¬†
So in my opinion there is no need for¬†
you to quit everything in your CEP¬†¬†
or ExtendScript development tomorrow to start¬†
trying to port your production code in UXP.¬†¬†
That would be in my opinion a very bad idea;¬†
just get your feet wet with this technology¬†¬†
and keep maintaining your old code bases.¬†
But UXP is definitely going to be the future¬†¬†
of the entire Creative Cloud extensibility. That¬†
said the first question that is fair to ask is:¬†¬†
why, why the need of UXP? And this is a question¬†
that I also had. CEP was kind of stagnating in¬†¬†
the last couple of years, and that was good!¬†
Because nothing was changing, you could just¬†¬†
go on with your business, write code sell stuff.¬†
But it turns out that Adobe was experiencing and¬†¬†
trying to react to some of the drawbacks of¬†
CEP, so let me try to describe them to you.¬†¬†
First one is likely very well known to every¬†
developer: CEP is running on one engine,¬†¬†
which is the JavaScript V8 engine that engine¬†
dialogues with the host application engine,¬†¬†
which is an old and grumpy ExtendScript engine.¬†
So just for us to be on the same page: CEP, the¬†¬†
old technology, is just an NW.js instance running¬†
in the host application. And NW.js is a way to¬†¬†
combine the Chromium Embedded Framework or CEF¬†
with Node.js so basically you have a browser and¬†¬†
Node.js combined. And then you write some sort of¬†
supercharged web application that runs within that¬†¬†
context and those two. Chromium and Node are¬†
embedded in the host application, in my case¬†¬†
Photoshop. And by the way I have a course on NW.js¬†
which is called JavaScript Native Applications for¬†¬†
Photoshop, which is basically a way to transplant¬†
CEP panels outside of Photoshop as independent¬†¬†
application. This is just a shameless plug,¬†
because it‚Äôs 2020 for everybody guys‚Ä¶ Where¬†¬†
was I? With CEP you have this two different heads¬†
communicating and sending messages back and forth;¬†¬†
so the JavaScript V8 engine of the panel sends¬†
scripting messages as Strings to the Photoshop¬†¬†
/ host application engine which is ExtendScript¬†
based, then collects the return value. All this¬†¬†
back and forth is not really ideal. We would like¬†
to have just one engine to rule them all. Second,¬†¬†
every time that Chrome or Chromium or something¬†
like that is involved you might have experience of¬†¬†
the fact that Chrome is quite resource intensive,¬†
it‚Äôs heavy, it consumes RAM and CPU cycles.¬†¬†
So you start having more than one panel open¬†
and running that might have a substantial¬†¬†
impact on your machine and performances. And¬†
by the way it‚Äôs not only third-party panels:¬†¬†
as I said host applications are using the same¬†
technology to support their own native features,¬†¬†
so you might have a very large number of panels¬†
loaded in your system and this might degrade the¬†¬†
performances quite substantially. And these are¬†
the two main drawbacks that UXP tries to solve.¬†¬†
Let me bring up this diagram here, which is quite¬†
scary at first, but I will try just to sum up the¬†¬†
most salient parts. We have a couple of problems¬†
first problem the two engines and this is solved¬†¬†
brilliantly killing one engine. So in UXP we¬†
have just one engine that deals with the UI,¬†¬†
so with the panel. By the way we‚Äôre not talking¬†
about panels anymore, this is against the¬†¬†
Adobe guidelines and they are patrolling that¬†
quite strictly. We are talking about plugins,¬†¬†
so you will be writing and developing¬†
UXP plugins, and a plugin can contain:¬†¬†
zero or more panels; zero or more dialogues,¬†
which are just modal windows, modal dialogues;¬†¬†
and zero or more commands, which are headless¬†
scripts. So if your thing doesn‚Äôt really need¬†¬†
a UI you‚Äôre going to call that a Command now.¬†
So a plugin is a container of all those things¬†¬†
together or just one of them. UXP plugins have¬†
one JavaScript V8 engine alone, and that deals¬†¬†
with the scripting side as well now, so we finally¬†
got rid of the ExtendScript language. This is a¬†¬†
huge change that has some you know pretty wild¬†
consequences that we will get to in a moment.¬†¬†
Second problem, performances; in both CEP and¬†
UXP the UI that you design is built using HTML,¬†¬†
CSS and JavaScript. Actually UXP allows a¬†
subset of HTML, CSS and JavaScript, but more¬†¬†
on that in a minute. This UI is not just shown¬†
as rendered HTML elements in the user interface,¬†¬†
instead it is parsed and then converted¬†
into native controls. So your, say,¬†¬†
HTML button is not just displayed as CEP¬†
would do, but it is converted into a native¬†¬†
bit of Photoshop UI, made of the same matter¬†
of all the rest of the native Photoshop UI.¬†¬†
And this speeds up the whole interface quite a¬†
bit, so you are solving both CEP‚Äôs main problems¬†¬†
at once: the two engines and the reactivity of the¬†
interface / the footprint it has in your system.¬†¬†
Actually there is more in this UXP umbrella¬†
term: besides the scripting engine with all¬†¬†
the bells and whistles of modern JavaScript, the¬†
fat arrow syntax, object destructuring, and so on¬†¬†
and so forth, we get also a common set of APIs for¬†
Networking, FileIO, and in the future, these are¬†¬†
not yet available, Imaging and Machine Learning as¬†
well. Let me talk about the DOM, so the scripting¬†¬†
layer. There is this massive switch to a new¬†
JavaScript engine and this is not a bloodless¬†¬†
transition. For instance all the elements that¬†
were peculiar to the ExtendScript language¬†¬†
are gone, like gone forever. XML literal support,¬†
or the ScriptUI library ‚Äì those beloved ScriptUI¬†¬†
windows, they cannot exist anymore. The Adobe¬†
team has been up to this huge task of rewiring¬†¬†
all the DOM and the system is new, so let me try¬†
to find the right bits, you see that you require¬†¬†
‚Äòphotoshop‚Äô, this new object is made available¬†
by UXP and then you go on with the dot notation,¬†¬†
the app, properties and methods. But we are far¬†
from having a complete DOM: this is the target¬†¬†
of the Photoshop team, this is what we have been¬†
told, but we are not there yet. Lots of things are¬†¬†
missing. Fortunately Photoshop has this peculiar¬†
thing called ActionManager, and ActionManager lets¬†¬†
you get where the DOM can‚Äôt go. So you can get¬†
and set properties and you can perform actions.¬†¬†
ActionManager is still there in UXP, it‚Äôs even¬†
more powerful, but now it is called BatchPlay,¬†¬†
and it has a new syntax which is kind of simpler,¬†
JSON based. You can group different actions¬†¬†
in an array and run them at once, it‚Äôs quite fast.¬†
But the underlying structure of the actual events¬†¬†
and descriptors is the same. One question that¬†
I‚Äôve been asked quite a lot is the following:¬†¬†
is there a ScriptingListener plugin for¬†
UXP? In ActionManager that was crucial,¬†¬†
so is there a BatchPlay equivalent? The good¬†
news is that there is, actually it‚Äôs much¬†¬†
better, and that‚Äôs made by my friend the¬†
incredibly talented developer Jaroslav Bereza.¬†¬†
Sounds Spanish but he‚Äôs from the Czech Republic.¬†
The thing is called Alchemist for Photoshop¬†¬†
and it‚Äôs kind of an inspector and a listener¬†
combined, so it‚Äôs much much more powerful.¬†¬†
It can be found at this GitHub repo and¬†
recently in the UXP Marketplace as well.¬†¬†
Let me rewind a bit, when I told you that you have¬†
just a subset of HTML, CSS and the JavaScript to¬†¬†
work with: this is very very important, the most¬†
important takeaway here is that, I know it sounds¬†¬†
silly but‚Ä¶ UXP is not CEP. So with CEP you¬†
were used to this idea that you were targeting¬†¬†
something like a browser, so you could access all¬†
the standards in the world, plus you had Node.js.¬†¬†
Not the case here. And I‚Äôm not saying this to¬†
scare you, but just bring you to realize that UXP¬†¬†
is very different. Speaking of missing elements,¬†
in the HTML for instance, to date, so far, there¬†¬†
is no canvas element. So if you need the canvas¬†
to draw your fancy interfaces in the 2d context¬†¬†
ah you‚Äôre out of luck. Might be that the canvas¬†
will be introduced because of missing elements and¬†¬†
API are still added so probably in a month, four¬†
months from now, it will be available. I cannot¬†¬†
say. But to date the canvas is not yet there. And¬†
just to name another one, in CSS we don‚Äôt have the¬†¬†
float, which would sound quite you know, standard,¬†
but we don‚Äôt have it. We have the FlexBox instead¬†¬†
so we use FlexBox to architect the UI, and¬†
we will have the CSS Grid, we‚Äôve been told,¬†¬†
in the future probably somewhere in 2021. So you¬†
see that there are missing parts and some of them¬†¬†
probably are going to be added in the future,¬†
some others won‚Äôt, and only time will tell.¬†¬†
Speaking of JavaScript and API there is no, or¬†
at least the last time that I‚Äôve checked there¬†¬†
was no, document.createevent(). And you might¬†
say: well, who cares, I mean that‚Äôs the first¬†¬†
time that I‚Äôve heard about it. Turns out that¬†
document.createevent() is something that Vue.js,¬†¬†
the latest version of Vue.js heavily relies¬†
upon, and if you don‚Äôt have a createevent Vue.js¬†¬†
will not work, I have been told that createevent¬†
might be shimmed, I‚Äôve not been able to do that,¬†¬†
but I‚Äôm told that it can be done, so probably¬†
Vue.js, if properly massaged, will work¬†¬†
but these are the kind of things that you have to¬†
deal with. So forget about CEP as this beautiful¬†¬†
large body of standards, we are dealing with¬†
a much smaller playground here. And this is¬†¬†
also the reason why if you‚Äôre serious about¬†
UXP plugin creation you should learn React,¬†¬†
because React.js is the JavaScript framework that¬†
Adobe itself uses to build their own plugins, and¬†¬†
it works because somehow UXP is shaped to¬†
make it work. So if there‚Äôs something in UXP¬†¬†
that is missing to make React work properly,¬†
engineers will implement it so you can be¬†¬†
sure that React is going to work. If you want to¬†
plug in something else you might be lucky, you¬†¬†
might not. What else comes from MAX 2020, there¬†
is this new way to deploy and look for plugins,¬†¬†
let me talk about the deployment first. We are¬†
happily abandoning the ZXP format hallelujah¬†¬†
and we are embracing something called CCX. And¬†
this is very simple, it‚Äôs just a matter of zipping¬†¬†
the plugin folder, no signature, no timestamp, and¬†
then you rename the ZIP to CCX, upload it to the¬†¬†
developer console and submit it to the Marketplace¬†
or distribute it to your channels. The CCX¬†¬†
when the user double clicks it is going to be¬†
opened by the Creative Cloud desktop application¬†¬†
that performs the installation. In the Creative¬†
Cloud desktop app there‚Äôs this Marketplace tab,¬†¬†
here I‚Äôve selected all plugins and filtered¬†
for Photoshop plugins. All these entries are¬†¬†
new UXP plugins these have been made in the¬†
last months this is mine this is mine too¬†¬†
all the rest below this available from Adobe¬†
exchange is basically the old CEP Marketplace.¬†¬†
Now let me get to Photoshop where there‚Äôs this¬†
new Plugins menu item, and you have a few things¬†¬†
in here: first you can browse for plugins, and¬†
this brings up the Creative Cloud application,¬†¬†
or you can launch your plugins panels. This is¬†
where your licensed plugins belong. These are my¬†¬†
four ones and this is just a development thing.¬†
Then you click herem and then you have all those¬†¬†
commands that are the same that belong to this¬†
menu here, so this is the panel, and then you¬†¬†
see you have other entries like About, and About¬†
is a modal dialog, right, and you have the panel,¬†¬†
the modal dialog, and as I said there are other¬†
things that could be there for instance Commands:¬†¬†
scripts that you can run. Also please know that¬†
CEP panels now are in this Extensions Legacy,¬†¬†
a name that some developers haven‚Äôt liked too¬†
much. But anyways‚Ä¶ Plugins are the new UXP thing¬†¬†
and then Extension Legacy is the place where all¬†
CEP panels belong. So what else, okay, tooling oh¬†¬†
well this is good, this is cool! We now have this¬†
thing called the Adobe UXP Developer Tool which is¬†¬†
really helpful. You can add existing plugins,¬†
for instance like this one, you just load the¬†¬†
manifest.json and well the plugin already exists¬†
so we can dismiss this. And you can load, reload,¬†¬†
watch the folder, so that the UXP Developers Tool¬†
reloads each time that you change the source code¬†¬†
and also debug. And this opens this kind of Chrome¬†
Developers Tool window which is not really a match¬†¬†
features-wise with the real Chrome Developers Tool¬†
but you know it‚Äôs useful. You have the console,¬†¬†
you can look for elements and so on and so forth.¬†
And you can look at the logs and you can also¬†¬†
package directly from the UXP Developers Tool, so¬†
create the CCX file here, and then you have other¬†¬†
things. So this is really handy and completely¬†
new and it helps a lot in creating UXP plugins.¬†¬†
And you can also create a new plugin from the UXP¬†
Developers Tool, so this pops up a dialogue where¬†¬†
you can enter the name, the id, version, so on¬†
so forth and also select template. And you have¬†¬†
a couple of them, one is called ps-starter,¬†
and then we have this ps-react-starter¬†¬†
so you can think about those UXP plugin as¬†
you know a simple one and the complex one.¬†¬†
I have them both so let me close this and get¬†
back to that. There‚Äôs this one called Theme¬†¬†
Switcher which is, let me show that to you because¬†
it‚Äôs fun, the simplest thing ever. It‚Äôs just four¬†¬†
buttons and an icon and then you can change¬†
the UI brightness of the Photoshop interface.¬†¬†
And by the way you see that you you have this¬†
possibility to keep the panel appearance in sync,¬†¬†
and this is done not via JavaScript as in CE√© but¬†
with Media Queries. This is quite simple you see¬†¬†
there is an index.html, css and JavaScript and the¬†
manifest. Manifest is really important, this is¬†¬†
where all the properties of the products are set¬†
so the id, the name, the width, height, preferred¬†¬†
width and height, max width and height, icons¬†
and stuff. And then you have the plugins that use¬†¬†
Eeact such as ALCE, which is here let me show that¬†
to you as well. This one is quite more complex you¬†¬†
see you have tooltips, sliders, buttons, and¬†
whatnot. And in case of a more complex UI,¬†¬†
and this is not complex at all in absolute terms¬†
but it‚Äôs more complex that this four button guy¬†¬†
here, you should really use React and in fact¬†
you see all the usual React Garbage and in fact¬†¬†
you see all the usual React stuff. I have a bunch¬†
of components, css, controller, JavaScript files,¬†¬†
and the ubiquitous manifest.json which is¬†
here. As a code editor you can use whatever¬†¬†
editor you want, I use Visual Studio Code, it‚Äôs¬†
just handier for me because I also need it for¬†¬†
ExtendScript code, because remember you can still¬†
use ExtendScript: those things are coexisting.¬†¬†
Now, in my case I‚Äôm running macOS Catalina so¬†
I don‚Äôt have access to the ExtendScript ToolKit¬†¬†
anymore, and I have to use the plugin for Visual¬†
Studio Code. One last thing that I want to mention¬†¬†
in this introduction is, let me bring back Chrome,¬†
here is the Spectrum Web Components. So when you¬†¬†
build a UI for Photoshop UXP panels or dialogues¬†
you have access to Spectrum Web Components, those¬†¬†
sp- things you have sp-button, sp-dropdown and¬†
so on so forth, and in this website you have a¬†¬†
bunch of them. Mind you, not all of them have been¬†
implemented in UXP, we have just a limited set by¬†¬†
now, but the support is growing with time. So for¬†
instance we don‚Äôt still have the Switch I think,¬†¬†
which is here, I would have needed that but¬†
I‚Äôm told that this is going to be available¬†¬†
in the future. So you can use this website as a¬†
reference. Please note that if you Google Adobe¬†¬†
Spectrum, Spectrum is a design system that Adobe¬†
has been working on for quite some time, you can¬†¬†
find several different things. On the one side¬†
you find the Spectrum specs, so this is just you¬†¬†
know the theoretical design system, and then you¬†
have the Spectrum CSS which is of course the CSS¬†¬†
implementation of that design system, but I don‚Äôt¬†
think they are really functional so for instance¬†¬†
in the Spectrum CSS I don‚Äôt think, I might be¬†
wrong but I don‚Äôt think you can open a drop down¬†¬†
menu you just have the design of that element.¬†
And then you have the Spectrum Web Components that¬†¬†
we have seen in UXP but you also have something¬†
called Coral Spectrum which is by Adobe as well¬†¬†
and these two are a web components implementation¬†
of the Spectrum design system but it‚Äôs a different¬†¬†
implementation of the first Spectrum¬†
Web Components, that‚Äôs kind of strange.¬†¬†
And then eventually you have React Spectrum¬†
which is the React components implementation¬†¬†
of that so, be aware that in the context of UXP¬†
plugins Spectrum Web Components are the ones made¬†¬†
available by default by UXP, so you can add for¬†
instance an sp-button. Let me show that to you¬†¬†
where‚Äôs the button here you can add an sp-button¬†
and that is going to appear in your UXP plugin no¬†¬†
need to import anything. You could also use native¬†
components, let me bring up this plugin here¬†¬†
you can use native elements they‚Äôre not very fancy¬†
looking, so for instance this is the range, the¬†¬†
slider, native range, whereas we have the Spectrum¬†
slider here which is kind of nicer. So you should¬†¬†
use Spectrum components where possible because¬†
this will keep the look consistent and they are¬†¬†
keeping refining those components over and over¬†
as opposed to these dull native elements you know.¬†¬†
I think that‚Äôs it for this not so brief overview¬†
of the main highlights of the UXP announcement¬†¬†
so let me try to sum up what I‚Äôve covered here.¬†
So UXP is going to be the future of all Adobe¬†¬†
Creative Cloud extensibility. CEP is going¬†
to be faded out, it will take a lot of time,¬†¬†
nobody knows how long. UXP has one engine compared¬†
to the two engines of the CEP system, the one¬†¬†
engine deals with both the UI and the scripting¬†
side so we have an entirely new scripting engine¬†¬†
that has a new DOM. You can use subset HTML,¬†
CSS and JavaScript and the result of what you¬†¬†
write is then converted into native controls¬†
which are faster and have a lighter footprint.¬†¬†
We have common APIs for Networking, FileIO and¬†
in the future Imaging and Machine Learning,¬†¬†
so this is really exciting. We also have a¬†
new set of tools, UXP Developer Tool and the¬†¬†
possibility to create either simple vanilla¬†
plugins or more complex ones based on React.¬†¬†
we‚Äôve got a new Marketplace and a simpler¬†
installation via CCS that is more reliable¬†¬†
than ZXP, if it was less reliable that would have¬†
come really as a surprise, and the entire UXP¬†¬†
experience is driven by the Creative Cloud¬†
desktop app. In the end, if you ask me, I am¬†¬†
quite pleased by the change. I had my problems¬†
with it because I i hate change in general¬†¬†
but in the end I think that this is going to¬†
bring more positive sides than negative. It is,¬†¬†
compared to CEP but I don‚Äôt want to sound rude in¬†
that, but UXP sounds more like a super-polished¬†¬†
modern version of ScriptUI rather than a big¬†
step into the standards direction, and this¬†¬†
is more of a closed system but we have to play¬†
into this smaller frame that Adobe is drawing.¬†¬†
That said you can find in this blog post of mine¬†
all the links to the available documentation that¬†¬†
Adobe is currently working on, and they‚Äôre¬†
doing a pretty good job, and by the way let¬†¬†
me thank all the people in the Adobe teams that¬†
have been supporting us third-party developers¬†¬†
for the MAX 2020 launch. I do plan to cover all¬†
the topics that I‚Äôve just briefly touched here¬†¬†
in future videos, blog posts, audio I don‚Äôt know¬†
just let me know what you think and what would be¬†¬†
best for you, and feel free to ask questions and¬†
suggest topics: I‚Äôll be happy to give you answers,¬†¬†
if I have them. If you have enjoyed this please¬†
consider supporting me: 2020 is a hell of a year,¬†¬†
I don‚Äôt have any Patreon page but¬†
besides my Adobe development content,¬†¬†
you can find in the UXP Marketplace there are¬†
two plugins of mine: ALCE, the advanced local¬†¬†
contrast enhancer or DoubleUSM about sharpening.¬†
They‚Äôre for sale half of the regular price,¬†¬†
they‚Äôre 16 bucks now and if you happen to buy¬†
them please leave a positive rating or review,¬†¬†
that would greatly help. If you cannot¬†
or don‚Äôt want to, that‚Äôs okay anyway.¬†¬†
All right thank you for watching and¬†
see you in the next one. Stay safe! Bye.&lt;/p&gt;
</description>
        <pubDate>Tue, 27 Oct 2020 00:00:00 +0100</pubDate>
        <link>http://localhost:4000/development/Adobe-UXP-things-you-need-to-know.html</link>
        <guid isPermaLink="true">http://localhost:4000/development/Adobe-UXP-things-you-need-to-know.html</guid>
        
        <category>UXP</category>
        
        <category>Adobe MAX</category>
        
        
        <category>Development</category>
        
      </item>
    
      <item>
        <title>UXP launch at Adobe MAX 2020</title>
        <description>&lt;p&gt;The &lt;a href=&quot;https://www.adobe.com/max.html&quot;&gt;Adobe MAX 2020&lt;/a&gt; conference is unfolding right now, free and online, carrying a number of major updates in the Creative Cloud apps lineup ‚Äì Photoshop 2021 included. These are three of the major keynote‚Äôs highlights IMHO.&lt;/p&gt;

&lt;h4 id=&quot;conan-obrien-mentioning-cep-10-on-stage&quot;&gt;Conan O‚ÄôBrien mentioning CEP 10 on stage&lt;/h4&gt;

&lt;p&gt;Read that again to sink it in.&lt;/p&gt;

&lt;figure&gt;
&lt;img src=&quot;/wp-content/uploads/2020/10/Conan.jpg&quot; srcset=&quot;/wp-content/uploads/2020/10/Conan.jpg 1x, /wp-content/uploads/2020/10/Conan@2x.jpg 2x&quot; alt=&quot;Conan O'Brien on-stage at MAX 2020&quot; /&gt;
&lt;figcaption&gt;Conan O'Brien on stage co-hosting MAX 2020. He really said &quot;CEP 10&quot;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h4 id=&quot;adobe-photoshop-2021-supporting-the-new-uxp-plugins-architecture-for-3rd-party-developers&quot;&gt;Adobe Photoshop 2021 supporting the new UXP plugins architecture for 3rd-party developers.&lt;/h4&gt;

&lt;p&gt;UXP stands for &lt;em&gt;Unified Extensibility Platform&lt;/em&gt;, a technology that was Guinea-pigged on Adobe XD and &lt;a href=&quot;https://medium.com/adobetech/announcing-uxp-in-photoshop-288496ab5e3e&quot;&gt;‚Äúenables JavaScript-based plugin development with near-native performance‚Äù&lt;/a&gt;, quoting Ari Fuchs (Product Lead for in-app extensibility at Adobe).&lt;/p&gt;

&lt;figure&gt;
&lt;img src=&quot;/wp-content/uploads/2020/10/UXP.png&quot; srcset=&quot;/wp-content/uploads/2020/10/UXP.png 1x, /wp-content/uploads/2020/10/UXP@2x.png 2x&quot; alt=&quot;The UXP architecture&quot; /&gt;
&lt;figcaption&gt;The UXP Architecture (don't worry it'll be fine)&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;My fellow developer, if this doesn‚Äôt get you excited feel worried then: &lt;strong&gt;in the long run UXP is going to replace CEP&lt;/strong&gt;, so you must care sooner or later. Let me stress that &lt;em&gt;it will not happen overnight&lt;/em&gt;, we‚Äôre just in the early stages and they‚Äôre going to overlap for a significant amount of time. Yet, be aware that UXP is clearly the future of plugins development in Adobe-land for all major CC apps. Which apps?&lt;/p&gt;

&lt;figure&gt;
&lt;img src=&quot;/wp-content/uploads/2020/10/UXP-apps.png&quot; srcset=&quot;/wp-content/uploads/2020/10/UXP-apps.png 1x, /wp-content/uploads/2020/10/UXP-apps@2x.png 2x&quot; alt=&quot;The UXP architecture&quot; /&gt;
&lt;figcaption&gt;Ari Fuchs on current UXP support for internal features; 3rd party support will follow sometimes in the future.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h4 id=&quot;the-creative-cloud-marketplace-featuring-uxp-plugins-photoshop&quot;&gt;The Creative Cloud Marketplace featuring UXP plugins Photoshop&lt;/h4&gt;

&lt;p&gt;We‚Äôve been working behind the scenes for months now (‚Äúwe‚Äù being yours truly and other amazing developers, with the invaluable support of Adobe employees) to build and launch our UXP plugins in time for MAX 2020. I‚Äôve released new versions of ALCE, Double USM (that for a limited time are 50% off the original price), and the free utilities Theme Switcher and Floating Adjustments.&lt;/p&gt;

&lt;figure&gt;
&lt;img src=&quot;/wp-content/uploads/2020/10/UXP-Marketplace.jpg&quot; srcset=&quot;/wp-content/uploads/2020/10/UXP-Marketplace.jpg 1x, /wp-content/uploads/2020/10/UXP-Marketplace@2x.jpg 2x&quot; alt=&quot;The UXP architecture&quot; /&gt;
&lt;figcaption&gt;The new Plugins panel and the CCD Marketplace &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;The hub for plugins discovery and installation is now the CCD ‚Äì Creative Cloud Desktop app ‚Äì read more on &lt;a href=&quot;https://blog.adobe.com/en/2020/10/20/creative-cloud-ecosystem-update-max-2020.html&quot;&gt;this post&lt;/a&gt; by Vijay Vachani, (Sr. Director Product Management &amp;amp; Platform Partnerships at Adobe). Photoshop 2021 also sports a new Plugins menu and panel.&lt;/p&gt;

&lt;h2 id=&quot;uxp-and-you--how-this-blog-can-help-&quot;&gt;UXP and you ‚Äì how this blog can help üöÄ&lt;/h2&gt;

&lt;p&gt;In the past, I‚Äôve extensively blogged about CEP in the apparently quite popular ‚ÄúHTML Panels Tip‚Äù series. I plan to do the very same here with UXP ‚Äì with the difference that &lt;strong&gt;I‚Äôm also going to record videos&lt;/strong&gt;: the first being an extensive introduction/first-aid to the UXP platform that I‚Äôll release here before the end of the month. So stay tuned! And let me know what you think in the comment below.&lt;/p&gt;

&lt;p&gt;This is a collection of the available UXP resources at the moment:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/adobetech/announcing-uxp-in-photoshop-288496ab5e3e&quot;&gt;Announcing UXP in Photoshop&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.adobe.com/en/2020/10/20/creative-cloud-ecosystem-update-max-2020.html#gs.j8yw75&quot;&gt;Adobe expands Creative Cloud Platform capabilities and new marketplace for plugins and integrations&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/adobetech/the-next-iteration-of-adobe-plugin-distribution-47ba732dc20a&quot;&gt;The Next Iteration of Creative Cloud Plugin Distribution&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.adobe.io/photoshop/uxp/&quot;&gt;UXP for Adobe Photoshop Documentation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://forums.creativeclouddeveloper.com/&quot;&gt;Public Forums for UXP developers&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://helpx.adobe.com/creative-cloud/kb/troubleshoot-common-addon-installation-issues.html&quot;&gt;Fix common installation issues with Creative Cloud app extensions or plugins&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In the meantime, there are a number of freely available &lt;a href=&quot;https://www.adobe.com/max.html&quot;&gt;Adobe MAX sessions&lt;/a&gt; to watch and learn from ‚Äì check them out. Stay safe and cheers from Italy! üñê&lt;/p&gt;

&lt;p&gt;Davide&lt;/p&gt;
</description>
        <pubDate>Tue, 20 Oct 2020 00:00:00 +0200</pubDate>
        <link>http://localhost:4000/development/UXP-at-Adobe-MAX-2020.html</link>
        <guid isPermaLink="true">http://localhost:4000/development/UXP-at-Adobe-MAX-2020.html</guid>
        
        <category>UXP</category>
        
        <category>Adobe MAX</category>
        
        
        <category>Development</category>
        
      </item>
    
      <item>
        <title>JavaScript Native Applications for Photoshop</title>
        <description>&lt;p&gt;I‚Äôm incredibly happy to announce that my new video-course has been published (confetti falls from the sky). Watch below a 3 minutes short presentation.&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/8A4UEx8Gb1A&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;h2 id=&quot;want-to-know-more&quot;&gt;Want to know more?&lt;/h2&gt;

&lt;p&gt;I‚Äôve revamped my &lt;a href=&quot;https://www.ps-scripting.com&quot;&gt;PS-Scripting&lt;/a&gt; website, which is going to be the central hub for all my books and courses, including this new &lt;strong&gt;JavaScript Native Applications for Photoshop&lt;/strong&gt; video-series.&lt;/p&gt;

&lt;div style=&quot;text-align:center; width:100%&quot;&gt;&lt;a href=&quot;https://www.ps-scripting.com/js-native-apps-for-photoshop.html&quot; target=&quot;_blank&quot; style=&quot;box-sizing: border-box; margin: 0; font-family: inherit; overflow: visible; text-transform: none; -webkit-appearance: button; display: inline-block; font-weight: 400; text-align: center; vertical-align: middle; user-select: none; border: 1px solid transparent; transition: color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out; color: #fff; background-color: #673ab7; border-color: #673ab7; padding: .5rem 1rem; font-size: 1.25rem; line-height: 1.5; border-radius: .3rem; margin-top: .25rem; margin-bottom: .25rem; cursor: pointer;&quot;&gt;Visit the course website&lt;/a&gt;&lt;/div&gt;

&lt;p&gt;To those of you who did express their interest via the contact form: you should have received a special coupon code ‚Äì check your email. Everyone else: I‚Äôve set an automatic &lt;em&gt;launch price&lt;/em&gt; discount code that is going to expire in the early days of July. Sample content available.&lt;/p&gt;

&lt;h2 id=&quot;thanks&quot;&gt;Thanks!&lt;/h2&gt;

&lt;p&gt;Thank you all for your support, and for checking this blog from time to time ‚Äì my friends, 2020 is a tough year! I hope you‚Äôre all safe and‚Ä¶ reasonably fine? I can‚Äôt push that any further giving the crazy times we‚Äôre living through. üñê&lt;/p&gt;

&lt;p&gt;Davide&lt;/p&gt;
</description>
        <pubDate>Wed, 17 Jun 2020 00:00:00 +0200</pubDate>
        <link>http://localhost:4000/development/JavaScript-native-applications-for-photoshop.html</link>
        <guid isPermaLink="true">http://localhost:4000/development/JavaScript-native-applications-for-photoshop.html</guid>
        
        <category>Native App</category>
        
        <category>JavaScript</category>
        
        <category>Machine Learning</category>
        
        
        <category>Development</category>
        
      </item>
    
      <item>
        <title>Photoshop JS Native Applications Course UPDATE</title>
        <description>&lt;p&gt;As &lt;a href=&quot;/development/Photoshop-native-applications-wip.html&quot;&gt;you have heard&lt;/a&gt;, I‚Äôve spent the last few months working on my next video-course titled &lt;strong&gt;JavaScript Native Applications for Photoshop&lt;/strong&gt;. The good news is that I am finally done with the recordings! They‚Äôve already been edited, I just need to double-check them one last time and the content will be ready.&lt;/p&gt;

&lt;figure&gt;
&lt;img src=&quot;/wp-content/uploads/2020/05/JSPSApp.jpg&quot; srcset=&quot;/wp-content/uploads/2020/05/JSPSApp.jpg 1x, /wp-content/uploads/2020/05/JSPSApp@2x.jpg 2x&quot; alt=&quot;Video Editing&quot; /&gt;
&lt;figcaption&gt;Bloom (the cat) is not included&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;It‚Äôll take some extra time, because we‚Äôre talking about &lt;strong&gt;28 videos&lt;/strong&gt; for a whopping total of &lt;strong&gt;9 hours&lt;/strong&gt; of Full-HD content, where I am building the app from the ground up, i.e. starting with an empty folder.&lt;/p&gt;

&lt;p&gt;I also need to create thumbnails, marketing assets and the like (the part I admittedly enjoy the less). Keep an eye to this blog for the official release announcement!&lt;/p&gt;

&lt;figure&gt;
&lt;img src=&quot;/wp-content/uploads/2020/05/list.png&quot; srcset=&quot;/wp-content/uploads/2020/05/list.png 1x, /wp-content/uploads/2020/05/list@2x.png 2x&quot; alt=&quot;Video thumbnails&quot; /&gt;
&lt;figcaption&gt;Video list (wip)&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2 id=&quot;pricing-and-availability&quot;&gt;Pricing and Availability&lt;/h2&gt;

&lt;p&gt;The full price is going to be:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;$149&lt;/strong&gt; for individuals, with lifetime updates and HD videos for streaming.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;$249&lt;/strong&gt; for enterprise licenses up to 10 seats, with lifetime updates and HD videos for download.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Fill the form below if you‚Äôre interested in receiving an early bird discounted offer before the course goes public.&lt;/p&gt;

&lt;iframe width=&quot;540&quot; height=&quot;650&quot; src=&quot;https://3dc77a80.sibforms.com/serve/MUIEAHsKpwIq1yNWbj_lxLqna87ra1XJHISVSYzDNKhSsYsYb4rLHME8ojWOr2YC4crxEuI6GRaX1pYUKI5bLh6Knr5sKmIwW1kvScZISpzmqLc1EUaREv-6OVq9ff5bRhJEKnM4Qi-2WIBNuk1Q4IlyEGw5jxOj1iiVa3KqHUw8x2V0NyAwNEZec3NIfkETDoIDPbaN-DPhUG86&quot; frameborder=&quot;0&quot; scrolling=&quot;auto&quot; allowfullscreen=&quot;&quot; style=&quot;display: block;margin-left: auto;margin-right: auto;max-width: 100%;&quot;&gt;&lt;/iframe&gt;
</description>
        <pubDate>Wed, 27 May 2020 00:00:00 +0200</pubDate>
        <link>http://localhost:4000/development/Photoshop-native-applications-update.html</link>
        <guid isPermaLink="true">http://localhost:4000/development/Photoshop-native-applications-update.html</guid>
        
        <category>Native App</category>
        
        <category>JavaScript</category>
        
        <category>Machine Learning</category>
        
        
        <category>Development</category>
        
      </item>
    
      <item>
        <title>Photoshop JS Native Applications Course (work-in-progress)</title>
        <description>&lt;h2 id=&quot;tldr&quot;&gt;TL;DR&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;I am working on a new series of &lt;strong&gt;video-tutorials&lt;/strong&gt; on Photoshop Development.&lt;/li&gt;
  &lt;li&gt;The subject is going to be &lt;strong&gt;Native Applications&lt;/strong&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.app&lt;/code&gt; for Mac and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.exe&lt;/code&gt; for Windows, entirely written in Javascript) that connect to Photoshop.&lt;/li&gt;
  &lt;li&gt;Think CEP (aka HTML) Panels, but transplanted outside Photoshop.&lt;/li&gt;
  &lt;li&gt;The Demo App is 98% complete: for fun, it also implements a simple &lt;em&gt;Machine Learning&lt;/em&gt; pre-trained model for image classification.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Availability&lt;/strong&gt;: approx. Q3/2020, updates in the blog.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Pricing&lt;/strong&gt;: $149 for individuals, $249 for companies; early bird discounts available.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;long-time-no-see&quot;&gt;Long time no see&lt;/h2&gt;

&lt;p&gt;I‚Äôve slowed down a bit with blog-posting in the last year due to a mix of personal reasons (burnout recovery, house restoration, work, fighting with a neighbour-from-hell, this kind of stuff) plus a general lack of relevant things to say.&lt;/p&gt;

&lt;p&gt;In the meantime, since late Q2/2019 I‚Äôve been playing with the idea of building independent, native apps that can connect to Photoshop and act very much like CEP Panels would. As I‚Äôm slooooow and distracted, I‚Äôve got to the point of having a working Demo App in my hands around March 2020 ‚Äì not bad for a coding-sloth.&lt;/p&gt;

&lt;h2 id=&quot;why-native-apps&quot;&gt;Why Native Apps?&lt;/h2&gt;

&lt;p&gt;I got a bit tired of CEP: I wanted to allow myself the luxury of &lt;em&gt;some more control&lt;/em&gt; over the development environment; if you‚Äôre a CEP developer I think you can relate. As anybody who‚Äôs been around in this business long enough knows, we‚Äôve had the possibility to connect to PS &lt;em&gt;from the outside&lt;/em&gt; for like 10 years (now you can call me a true sloth); reliable Native apps with JavaScript are here, so it was a no-brainer for me to give it a try, finally.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pros&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;You‚Äôre &lt;em&gt;totally&lt;/em&gt; in charge over the technologies to use ‚Äì no more ‚ÄúThis has been fixed in PS 2029, but older PS versions are still out-of-luck‚Äù, or the cyclic ‚Äúyou‚Äôve been doing X for a jolly bunch of years, guess what from now on it‚Äôs done the Y way‚Äù kind of troubles.&lt;/li&gt;
  &lt;li&gt;Still JS/Node.js stuff, easy transition if you come from a CEP background.&lt;/li&gt;
  &lt;li&gt;You can update to Chromium/Node-latest whenever you want for whatever PS version you want.&lt;/li&gt;
  &lt;li&gt;Native means independent, separate, dock-bouncing apps, with access to OS-level stuff like tray icons, notifications, FileSystem, you name it; Mac and Windows alike.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Cons&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Not all projects are a good fit for an independent app: if you need a tighter, super-fast integration with PS, stick to CEP or whatever &lt;em&gt;default&lt;/em&gt; technology Adobe provides.&lt;/li&gt;
  &lt;li&gt;There‚Äôs a bit of a learning curve, but I‚Äôm here to ease the process.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;how-does-it-work-technically-speaking&quot;&gt;How does it work, technically speaking?&lt;/h2&gt;

&lt;p&gt;NW.js, Vue.js, Vuex, Socket.io, Adobe Generator Plugin, MobileNet, Node.js stuff, trial and error. For now you‚Äôll make do with that.&lt;/p&gt;

&lt;h2 id=&quot;what-will-the-video-course-cover&quot;&gt;What will the Video Course cover?&lt;/h2&gt;

&lt;p&gt;I‚Äôm going to build a demo app from scratch over the course of some hours of recording. Features are totally arbitrary, and it have been chosen to serve just one purpose: showing how things can be done in the context of a native app connecting to PS, i.e. solving specific problems that you‚Äôre likely to run into (e.g. passing data from/to PS, executing scripts, synchronous/asynchronous operations, storing permanent data between sessions, etc.)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/wp-content/uploads/2020/03/demo-app.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What does the demo app do?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;the user selects a bunch of files from the disk&lt;/li&gt;
  &lt;li&gt;the user also toggles few Image Classification tags&lt;/li&gt;
  &lt;li&gt;the app retrieves ActionSets/Actions loaded in Photoshop&lt;/li&gt;
  &lt;li&gt;if each file‚Äôs &lt;em&gt;subject&lt;/em&gt; matches the ones selected by the user (that one document actually &lt;em&gt;depicts&lt;/em&gt; a tiger), Photoshop will process it with the selected Action&lt;/li&gt;
  &lt;li&gt;when the batch ends, a System Notification pops up some info&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As simple as it looks, it‚Äôs enough to build a rather structured NW.js/Vue.js architecture that can serve as a blueprint for more complex projects of yours.&lt;/p&gt;

&lt;p&gt;Everything‚Äôs based on a solid build system, so 99% of the tasks are completely automated.&lt;/p&gt;

&lt;h2 id=&quot;courses-goals&quot;&gt;Course‚Äôs goals&lt;/h2&gt;

&lt;p&gt;Like &lt;a href=&quot;https://www.ps-scripting.com/bundles.html&quot;&gt;everything&lt;/a&gt; I‚Äôve ever published, the main goal is to give you a substantial head-start, and save you all the time I‚Äôve spent stuck trying to solve specific technical problems. As in life, there are many more ways to mess up than to get it right: this course will provide you with a selected range of working options to build commercial-grade applications.&lt;/p&gt;

&lt;h2 id=&quot;pricing-and-availability&quot;&gt;Pricing and Availability&lt;/h2&gt;

&lt;p&gt;I‚Äôm bugfixing the app, which functionally speaking is done. Knowing myself, it will take me some more months to record the actual content, so friendly advice: don‚Äôt hold your breath.&lt;/p&gt;

&lt;p&gt;It‚Äôll be priced according to previous courses of mine:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;$149&lt;/strong&gt; for individuals, with lifetime updates and HD videos for streaming&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;$249&lt;/strong&gt; for enterprise licenses up to 10 seats, with lifetime updates and HD videos for download&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Early bird discounts available. If you‚Äôre interested, please enter your email in the form below (no spam at all); you‚Äôll receive a notification with a discounted offer before the course goes public.&lt;/p&gt;

&lt;iframe width=&quot;540&quot; height=&quot;650&quot; src=&quot;https://3dc77a80.sibforms.com/serve/MUIEAHsKpwIq1yNWbj_lxLqna87ra1XJHISVSYzDNKhSsYsYb4rLHME8ojWOr2YC4crxEuI6GRaX1pYUKI5bLh6Knr5sKmIwW1kvScZISpzmqLc1EUaREv-6OVq9ff5bRhJEKnM4Qi-2WIBNuk1Q4IlyEGw5jxOj1iiVa3KqHUw8x2V0NyAwNEZec3NIfkETDoIDPbaN-DPhUG86&quot; frameborder=&quot;0&quot; scrolling=&quot;auto&quot; allowfullscreen=&quot;&quot; style=&quot;display: block;margin-left: auto;margin-right: auto;max-width: 100%;&quot;&gt;&lt;/iframe&gt;

&lt;h2 id=&quot;questions&quot;&gt;Questions?&lt;/h2&gt;

&lt;p&gt;Unless they‚Äôre along the lines of &lt;em&gt;‚ÄúSir, why X instead of Y?‚Äù&lt;/em&gt;, I encourage you to post in the comments below. Thanks for reading and have a good day!&lt;/p&gt;
</description>
        <pubDate>Sun, 01 Mar 2020 00:00:00 +0100</pubDate>
        <link>http://localhost:4000/development/Photoshop-native-applications-wip.html</link>
        <guid isPermaLink="true">http://localhost:4000/development/Photoshop-native-applications-wip.html</guid>
        
        <category>Native App</category>
        
        <category>JavaScript</category>
        
        <category>Machine Learning</category>
        
        
        <category>Development</category>
        
      </item>
    
      <item>
        <title>The state of Hasselblad Flextight scanners, FlexColor and the 3F format</title>
        <description>&lt;p&gt;In case you missed it, Flextight scanners have vanished from the Hasselblad website around May 2019 and macOS Catalina doesn‚Äôt run FlexColor anymore. No software updates are planned, plus I‚Äôve run into problems dealing with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fff&lt;/code&gt; files in Photoshop 2020. Heavens!&lt;/p&gt;

&lt;h2 id=&quot;flextight-scanners&quot;&gt;Flextight scanners&lt;/h2&gt;

&lt;p&gt;Flextight X1 and X5, the flagship (and only left) models in Hasselblad‚Äôs lineup have been discontinued: EOL, kaputt. No official announcement has been published, but a number of users around the world have had the news confirmed either from dealers or servicing shops.&lt;/p&gt;

&lt;p&gt;It‚Äôs pointless to ask the reason why, scanners have always been a low priority asset to Hasselblad. Flextight know-how and hardware were acquired in 2014 when the company merged with Imacon: reliable sources told me that the engineering team has always been quite small. My best bet is that the 2017 acquisition of Hasselblad by DJI, a Chinese drone-making company, gave scanners the &lt;em&gt;coup de grace&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;The good news is that servicing will be available for the foreseeable future, as customer service wrote me:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The Flextight scanners are full service supported in our factory service in Gothenburg, Sweden and a selected number of regional scanner partners are able to perform local service and preventive maintenance. We will continue to perform service for these scanners as long as we will have spare parts, therefore it is difficult to appreciate for how long.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In fact, this is what you can read when logging in the private area of the Hasselblad website.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/wp-content/uploads/2019/12/servicing.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;flexcolor-software&quot;&gt;FlexColor software&lt;/h2&gt;

&lt;p&gt;Unclear information has been given to users in the past, when many of us pinged Hasselblad about the pressing issue of macOS 10.15 Catalina blocking 32bit applications. Any hope to see a 64bit FlexColor rewrite has been definitely flushed away when customer support eventually started to reply that:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;[‚Ä¶] we currently have no plans to release an updated version of Flexcolor.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As expected, the software has been EOLed very much like the hardware. Not that it has ever received much care: the last available versions are 4.8.13 (2011, for Mac) and 4.8.9 (2012, for Windows).&lt;/p&gt;

&lt;figure&gt;
&lt;img src=&quot;/wp-content/uploads/2019/12/fc-error.jpg&quot; style=&quot;width: 357px; height: 180px&quot; /&gt;
&lt;/figure&gt;

&lt;p&gt;To the best of my knowledge, the Windows version still runs on whatever version is Windows at now, but with macOS you‚Äôre capped to 10.14 Mojave.&lt;/p&gt;

&lt;p&gt;Neither FlexColor nor the scanners do require a high-performance computer, they‚Äôre probably going to work fine with old dedicated hardware for years to come. I think it‚Äôs possible to run Catalina and virtualize (with Parallels or VMWare) Mojave so that you can still run 32bit apps. Let‚Äôs hope that by the time the whole process becomes impractical or the spare parts are out of stock, the film we want to scan has been eroded away by chemical remains and fungi ‚Äì checkmate, problem solved&lt;sup id=&quot;fnref:1980&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:1980&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;p&gt;Finally, due to legal reasons (very likely the use of some internal libraries that prevent it) FlexColor can‚Äôt be open-sourced. There are rumors about VueScan willing (or having been asked) to implement a module that would drive the Flextight hardware, but I couldn‚Äôt been able to find any official statement.&lt;/p&gt;

&lt;p&gt;So this is the state of affairs for the hardware, what about existing archives?&lt;/p&gt;

&lt;h2 id=&quot;3f-files&quot;&gt;3F files&lt;/h2&gt;

&lt;p&gt;Here things are getting slightly more complex, please bear with me.&lt;/p&gt;

&lt;p&gt;As we all know, FlexColor is used by archivists and photoshoppers alike to browse through, and extract &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.tif&lt;/code&gt; files from, huge collections of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.fff&lt;/code&gt; (aka 3F) files. You may or may not know that the 3F format is nothing but a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.tif&lt;/code&gt; file with some proprietary tags: to prove it, try renaming a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.fff&lt;/code&gt; to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.tif&lt;/code&gt; and open it in Photoshop. The extra stuff is:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;the compressed/low-res bitmap preview that FlexColor uses to &lt;em&gt;temporarily&lt;/em&gt; display the 3F while waiting to read the actual data from the file (only if the 3F isn‚Äôt too large, in which case you‚Äôre &lt;em&gt;always&lt;/em&gt; only shown the preview)&lt;/li&gt;
  &lt;li&gt;metadata related to the scan acquisition and FlexColor settings (e.g. curves, FlexTouch, saturation, snapshots, etc.)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I have grown accustomed to skip FlexColor altogether for anything but driving the scanner (acquiring the 3F), and browsing (i.e. visualizing the files). That is to say: I &lt;strong&gt;do not use FlexColor anymore for any 3F processing&lt;/strong&gt; nor &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.tif&lt;/code&gt; extraction. I‚Äôve never liked FlexColor rudimental, limited features ‚Äì they were sort-of OK in the mid-2000s, or for large files batches quick post-processing. My client‚Äôs work today is more focused on a smaller selection of scans, to be post-produced very accurately, so I only use Photoshop.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;To briefly sum up the way I use to work&lt;/strong&gt; (which I can expand in a separate blogpost ‚Äì leave a comment below in case it is of any interest):&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;I open the 3F in Photoshop (thanks to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Imacon3F.plugin&lt;/code&gt; or its &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.8bf&lt;/code&gt; Windows version), which in my case is going to appear as a color negative.&lt;/li&gt;
  &lt;li&gt;I apply an Invert adjustment layer and a couple of Curves adjustment layers to make it look more or less &lt;em&gt;correct&lt;/em&gt; to my eyes ‚Äì no need to be precise here.&lt;/li&gt;
  &lt;li&gt;I duplicate the background layer and perform all sorts of retouching voodoo (against dust, scratches, chemicals stains, fingerprints, semen, etc.), saving this intermediate layered file as a separate, temporary &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.psb&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;When I‚Äôm happy, I flatten all the bitmap layers and discard all the adjustment layers, so that I‚Äôm back with a one-layer, color negative file again.&lt;/li&gt;
  &lt;li&gt;I re-open the original &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.fff&lt;/code&gt; file, drag and drop the retouched layer from the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.psb&lt;/code&gt;, flatten, and save as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.CLEAN.fff&lt;/code&gt; ‚Äì this because one never knows what the future brings‚Ä¶ I then trash the intermediate &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.psb&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;I keep the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.CLEAN.fff&lt;/code&gt; open: assign the &lt;em&gt;FlexColor Input&lt;/em&gt; ICC, convert to Adobe RGB, Invert, and save my working file as a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.psb&lt;/code&gt;. This is my starting point, to which I apply the usual Curves, and whatever it takes to make the image work.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Enter another stray bullet in the Hasselblad game: Adobe. It turns out that &lt;strong&gt;Photoshop 2020 doesn‚Äôt want to open 3Fs anymore&lt;/strong&gt;, popping up this new errors:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/wp-content/uploads/2019/12/ps-error.jpg&quot; alt=&quot;image proportion has changed the imacon 3f plugin can't save the file&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In recent versions, you already had to set the Open dialog‚Äôs settings to &lt;em&gt;Enable: All Documents&lt;/em&gt; (and of course the &lt;em&gt;Format: Imacon 3f&lt;/em&gt;) otherwise Adobe Camera Raw kicked in trying to open the file, mistaking it as coming from a digital back.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/wp-content/uploads/2019/12/open.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The last working version (at least on a Mac) is Photoshop CC 2019 ‚Äì which is a &lt;strong&gt;big concern&lt;/strong&gt;. Why? You may or may not have heard that in the last months Adobe has aggressively restricted the licensed versions range for Photoshop ‚Äì e.g. you cannot, theoretically, install or run, say, Photoshop CC 2015 anymore. Without entering into yet another rabbit hole, it all boils down to royalties with third-parties, very likely Dolby&lt;sup id=&quot;fnref:dolby&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:dolby&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;p&gt;In the end, Adobe‚Äôs versions policy is (and it is fair to expect that it will be their default from now on) to license N-1 versions ‚Äì in other words: you‚Äôll be allowed to download and install the latest Photoshop, plus the version before it, period. At the time I‚Äôm writing this, it is PS 2020 + PS CC 2019. In one year, CC 2019 will be dropped, and it‚Äôll be PS 2021 + PS 2020.&lt;/p&gt;

&lt;p&gt;Which means: one year from now, the &lt;em&gt;officially available&lt;/em&gt; Photoshop versions won‚Äôt open 3F files anymore, and working versions‚Äô installers won‚Äôt be available for download either. LMAO.&lt;/p&gt;

&lt;p&gt;There is also the tangentially related problem of macOS notarization/digital signature, from macOS Catalina onwards: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.plugin&lt;/code&gt; files are requested to be at least&lt;sup id=&quot;fnref:sign&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:sign&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt; signed by the developer, otherwise macOS GateKeeper will prevent to run them. This is not too much of a big deal, I have an active Apple Developer membership and I can sign the file myself if needed.&lt;/p&gt;

&lt;h2 id=&quot;tldr&quot;&gt;TL;DR&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Hasselblad Flextight X1 and X5 scanners (previously known as Imacon) are discontinued. Scanner servicing will be provided as usual &lt;em&gt;as long as spare parts will be available&lt;/em&gt;.&lt;/li&gt;
  &lt;li&gt;FlexColor is abandonware: it doesn‚Äôt run on any macOS &amp;gt; 10.14.&lt;/li&gt;
  &lt;li&gt;3F files don‚Äôt open anymore in Photoshop 2020; very likely the CC 2019 installer is not going to be available one year from now, and even if you have one, it‚Äôs definitely possible that macOS Catalina will prevent &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Imacon3F.plugin&lt;/code&gt; from working because it‚Äôs not signed/notarized.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;workarounds-if-any&quot;&gt;Workarounds (if any)&lt;/h2&gt;

&lt;p&gt;The following is partly subjective.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Acquiring new scans&lt;/strong&gt;, for the time being, requires FlexColor; so either you keep dedicated hardware running macOS Mojave, or you switch to Windows.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Browsing 3F collections&lt;/strong&gt; is, and will keep being, a pain in the butt: FlexColor is the &lt;em&gt;lesser evil&lt;/em&gt;, Adobe Bridge seems unable to load just the low-res preview that is embedded in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.fff&lt;/code&gt; files and it takes forever to read the file content to create a thumbnail. The same holds true with Finder. I‚Äôm not aware of any other viable options for the Mac.&lt;/li&gt;
  &lt;li&gt;Extracting &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.tif&lt;/code&gt; files for &lt;strong&gt;3F post-processing&lt;/strong&gt; is not a problem, as long as the Photoshop plugin keeps working ü§ûüèª.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Feel free to comment below if you have updated news, workflow suggestions, or you just want to share your point of view as a Hasselblad user.
  Thanks!&lt;/p&gt;

&lt;hr /&gt;

&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1980&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;Please bear with me but I‚Äôm right in the middle of the postproduction of a batch of large format, color negative scans from the early 1980, and it‚Äôs a mess. Are you nostalgic of the old days of analogic photography? Bloody hell, no.¬†&lt;a href=&quot;#fnref:1980&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:dolby&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;Read &lt;a href=&quot;https://www.plagiarismtoday.com/2019/05/15/adobe-dolby-and-the-battle-over-your-software/&quot;&gt;here&lt;/a&gt; for more info about the Adobe-Dolby lawsuit.¬†&lt;a href=&quot;#fnref:dolby&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:sign&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;It is unclear to me, at the moment, whether a digital signature is enough or I would be required to notarize the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.plugin&lt;/code&gt; as well ‚Äì not a big deal either, but not running Catalina myself I cannot test it.¬†&lt;a href=&quot;#fnref:sign&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
        <pubDate>Sat, 07 Dec 2019 00:00:00 +0100</pubDate>
        <link>http://localhost:4000/2019/12/2019-12-07/2019-12-07-hasselblad-flextight-flexcolor-3f/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/12/2019-12-07/2019-12-07-hasselblad-flextight-flexcolor-3f/</guid>
        
        <category>Hasselblad</category>
        
        <category>Imacon</category>
        
        <category>Flextight</category>
        
        <category>FlexColor</category>
        
        <category>3F</category>
        
        
        <category>Photoshop</category>
        
      </item>
    
      <item>
        <title>Leanpub alternatives, IMHO</title>
        <description>&lt;p&gt;If you‚Äôre into technical writing, read along. I‚Äôve used Leanpub‚Äôs services for two books of mine out of three, and I am still 100% sure that I couldn‚Äôt make a better choice. But when you‚Äôre more experienced, there might be reasons to look for alternatives: I‚Äôll tell you mine, how I‚Äôve sorted my doubts out, and what I‚Äôve eventually chosen.&lt;/p&gt;

&lt;h2 id=&quot;tldr&quot;&gt;TL;DR&lt;/h2&gt;

&lt;p&gt;Notable options among others are &lt;a href=&quot;https://pandoc.org/&quot;&gt;Pandoc&lt;/a&gt;, &lt;a href=&quot;https://www.softcover.io/&quot;&gt;SoftCover&lt;/a&gt;, &lt;a href=&quot;https://www.latex-project.org/&quot;&gt;LaTeX&lt;/a&gt;, &lt;a href=&quot;https://affinity.serif.com/en-gb/publisher/&quot;&gt;Affinity Publisher&lt;/a&gt;. Read along to see the piece of technology that I‚Äôve embraced, and why.&lt;/p&gt;

&lt;h2 id=&quot;my-own-needs-which-may-differ-from-yours&quot;&gt;My own needs (which may differ from yours)&lt;/h2&gt;

&lt;p&gt;I am into technical publishing/programming books: I‚Äôve written three of them, that I refer to as &lt;em&gt;‚Äúthe two big ones‚Äù&lt;/em&gt; (more than 350 pages, &lt;a href=&quot;https://www.htmlpanelsbook.com/&quot;&gt;Adobe Photoshop HTML Panels Development&lt;/a&gt; and &lt;a href=&quot;https://www.ps-scripting.com&quot;&gt;Professional Photoshop Scripting&lt;/a&gt;), and &lt;em&gt;‚Äúthe short one‚Äù&lt;/em&gt; (less than 100 pages, &lt;a href=&quot;https://www.davidebarranca.com/2018/01/ultimate-guide-native-installers-automated-build-system/&quot;&gt;The Ultimate Guide to Native Installers and Automated Build Systems&lt;/a&gt;).&lt;/p&gt;

&lt;figure&gt;
&lt;a href=&quot;https://www.ps-scripting.com/bundles.html&quot;&gt;&lt;img src=&quot;/wp-content/uploads/2019/10/books.jpg&quot; srcset=&quot;/wp-content/uploads/2019/10/books.jpg 1x, /wp-content/uploads/2019/10/books@2x.jpg 2x&quot; alt=&quot;My Books&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;I do sell them on my own via &lt;a href=&quot;https://gumroad.com/&quot;&gt;Gumroad&lt;/a&gt;; I do the marketing/newsletter on my own; I find beta readers/tech editors on my own; I do design the book on my own. Basically, I‚Äôm ever such a grumpy, control-freak guy with some tech background who needs to produce the best looking &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.pdf&lt;/code&gt; that he can.&lt;/p&gt;

&lt;p&gt;Stuff &lt;strong&gt;I very much like&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Being able to customize the page design&lt;/li&gt;
  &lt;li&gt;Relying on a repeatable, robust process&lt;/li&gt;
  &lt;li&gt;Open source / offline tools&lt;/li&gt;
  &lt;li&gt;Automated typesetting&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Stuff &lt;strong&gt;I don‚Äôt particularly need/like&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Anything that goes beyond the PDF creation&lt;/li&gt;
  &lt;li&gt;Online tools&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To some extent, I can trade easiness for customizability because I do not write regularly: I embarque on big projects about once every couple of years, I am not willing to reinvent the wheel each time.&lt;/p&gt;

&lt;p&gt;What follows is my personal quest for viable Leanpub alternatives: it is 100% based on my needs, skillset and amount of time I can currently devote on this.&lt;/p&gt;

&lt;h2 id=&quot;why-am-i-looking-for-alternatives-in-the-first-place&quot;&gt;Why am I looking for alternatives in the first place?&lt;/h2&gt;

&lt;p&gt;In my opinion, &lt;strong&gt;Leanpub is by far the most usable, well crafted service on the market for ebook authors, and I couldn‚Äôt recommend them more&lt;/strong&gt;. My &lt;em&gt;two big books&lt;/em&gt; have been produced by Leanpub, and could I go back in time I‚Äôd choose them again.&lt;/p&gt;

&lt;figure&gt;
&lt;img src=&quot;/wp-content/uploads/2019/10/PSScripting.png&quot; srcset=&quot;/wp-content/uploads/2019/10/PSScripting.png 1x, /wp-content/uploads/2019/10/PSScripting@2x.png 2x&quot; alt=&quot;Professional Photoshop Scripting, a Leanpub book&quot; /&gt;
&lt;figcaption&gt;Professional Photoshop Scripting, a Leanpub book&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Not only they provide you with great tools for creating e-books, connecting authors with readers, managing sales, landing pages and the like, they are also heavily involved into advancing the industry with new standards such as &lt;a href=&quot;https://leanpub.com/markua/read&quot;&gt;Markua&lt;/a&gt; (a book-targeted, enhanced flavour of MarkDown). Lately, they have broaden their offer developing courses creation tools as well.&lt;/p&gt;

&lt;p&gt;If you‚Äôre tackling your first book, then Leanpub is a no brainer. Stop reading this and go creating a new Author account on their website.&lt;/p&gt;

&lt;p&gt;That said, the show stopper for me is that the PDF creation is a &lt;strong&gt;remote process&lt;/strong&gt; ‚Äì well managed, sync‚Äôd with Dropbox, hooked with GitHub/Bitbuckets, yet remote nonetheless.&lt;/p&gt;

&lt;figure&gt;
&lt;img src=&quot;/wp-content/uploads/2019/10/generation.jpg&quot; srcset=&quot;/wp-content/uploads/2019/10/generation.jpg 1x, /wp-content/uploads/2019/10/generation@2x.jpg 2x&quot; alt=&quot;Leanpub remote PDF generation&quot; /&gt;
&lt;figcaption&gt;Leanpub remote PDF generation&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;I don‚Äôt necessarily would like WYSIWYG, but synch‚Äôing, waiting some minutes for the generation, and downloading is adding a friction that over time I‚Äôve found unbearable. Especially when something doesn‚Äôt go the way you expect, i.e. if the layout requires many small tweaks, or worse the PDF generation crashes due to errors that aren‚Äôt easy to debug. When needed, Leanpub support never fails you; still, you need them to look at the log and find out what went wrong. Interrupting the creative flow is never a jolly business.&lt;/p&gt;

&lt;p&gt;Features wise, I have little to complain: some of the limitations I had when I wrote my &lt;em&gt;two big books&lt;/em&gt; with Leanpub may have been overcome with the introduction of Markua, which wasn‚Äôt ready back then. Extra customization is always welcome, but the built-in set is comprehensive enough.&lt;/p&gt;

&lt;h3 id=&quot;the-leanpub-pdf-generation&quot;&gt;The Leanpub PDF generation&lt;/h3&gt;

&lt;p&gt;Technically speaking, at least with the MarkDown-in, PDF-out process, Leanpub relies on an intermediate LaTeX step; so it actually is MD to LaTeX to PDF (I suppose it is the same with Markua, but I can‚Äôt be sure). If you‚Äôre not familiar with it, LaTeX is a &lt;em&gt;‚Äúdocument preparation system for high-quality typesetting‚Äù&lt;/em&gt; ‚Äì or in layman terms, an horribly complex markup language.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;MarkDown is a markup language too, but much simpler. It lets you write &lt;em&gt;plain text&lt;/em&gt; with a very light and minimal markup so that titles are made with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#&lt;/code&gt; symbols, the asterisks in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;**that**&lt;/code&gt; turn &lt;strong&gt;that&lt;/strong&gt; bold, etc.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure&gt;
&lt;img src=&quot;/wp-content/uploads/2019/10/markdown.png&quot; srcset=&quot;/wp-content/uploads/2019/10/markdown.png 1x, /wp-content/uploads/2019/10/markdown@2x.png 2x&quot; alt=&quot;MarkDown Example&quot; /&gt;
&lt;figcaption&gt;A MarkDown example (this blogpost)&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;In a way, you might simplify matters saying that, among the rest, Leanpub has put together a very well designed set of &lt;em&gt;LaTeX styles&lt;/em&gt; on top of a well-crafted MD conversion, so that the resulting PDF is remarkably good (setting aside &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.epub&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.mobi&lt;/code&gt; versions, that are not a strict requirement for me).&lt;/p&gt;

&lt;h3 id=&quot;leanpubs-pros-and-cons&quot;&gt;Leanpub‚Äôs Pros and Cons&lt;/h3&gt;

&lt;p&gt;IMHO, on the plus side: writing in MarkDown is almost frictionless, the MD to PDF workflow frees your mind and lets you concentrate on producing the actual content, Markua is a promising evolution, they offer a ton of marketing features.&lt;/p&gt;

&lt;p&gt;IMHO, the cons: there is a limited set of available customizations, it‚Äôs a paid service (as it should be!), above all the PDF generation doesn‚Äôt happen locally but on their servers ‚Äì which is the real obstacle for me.&lt;/p&gt;

&lt;h2 id=&quot;how-i-have-evaluated-alternatives&quot;&gt;How I have evaluated alternatives&lt;/h2&gt;

&lt;p&gt;I am not the kind of guy who would write a book using Libre Office, and exporting it to PDF right away. It may be super handy for articles, yet I don‚Äôt think it is up to the task for books. Or possibly it is, but either I am not familiar enough with it to deal with named cross-references, etc. or it is not a good fit for &lt;em&gt;programming&lt;/em&gt; books: e.g., my stuff involves a good deal of listings (programming code, mostly but not exclusively written in JavaScript) that require to be numbered and colored with proper syntax-highlighting, etc.&lt;/p&gt;

&lt;p&gt;A tradeoff that I can bear: giving up some of the easiness that comes with writing-in-MarkDown-and-forget-about-everything-else. I.e., I am ready to decouple the writing from the typesetting processes.&lt;/p&gt;

&lt;h2 id=&quot;pandoc&quot;&gt;Pandoc&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://pandoc.org/&quot;&gt;Pandoc&lt;/a&gt; is an open source set of tools that let you convert between formats - a lot of them, including MarkDown,  ePub, Microsoft Word, InDesign &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.idml&lt;/code&gt;, PDF (via LaTeX). If you need it, you can get get a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.mobi&lt;/code&gt; from an &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.epub&lt;/code&gt; with the help of &lt;a href=&quot;https://calibre-ebook.com/&quot;&gt;Calibre&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Pandoc is super-awesome, it is free, it runs as a command-line utility from the Terminal for Mac, Win and Linux, it provides the same sort of MD to LaTeX to PDF workflow that Leanpub sports. There‚Äôs an elephant in the room, though: you must rely on a set of custom &lt;em&gt;LaTeX styles&lt;/em&gt; to tweak the PDF appearance. In other words, the default conversion is elegant as almost any LaTeX document is by default, but rather dull: if you want to use some of the fancier stuff and you don‚Äôt know your LaTeX‚Ä¶ you‚Äôre &lt;em&gt;totally&lt;/em&gt; out of luck.&lt;/p&gt;

&lt;p&gt;Of course there is plenty of &lt;a href=&quot;https://github.com/jgm/pandoc/wiki/User-contributed-templates&quot;&gt;templates&lt;/a&gt;. I did play a little bit with one called &lt;a href=&quot;https://github.com/Wandmalfarbe/pandoc-latex-template&quot;&gt;Eisvogel&lt;/a&gt;, but I couldn‚Äôt really figure out how to bend it to my needs, nor I did know how to ‚Äúteach Pandoc‚Äù to interpret the MarkDown that I would like to be linked, say, to a custom LaTeX &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\newcommand&lt;/code&gt;.&lt;/p&gt;

&lt;figure&gt;
&lt;img src=&quot;/wp-content/uploads/2019/10/eisvogel.png&quot; srcset=&quot;/wp-content/uploads/2019/10/eisvogel.png 1x, /wp-content/uploads/2019/10/eisvogel@2x.png 2x&quot; alt=&quot;The Eisvogel LaTeX template for Pandoc&quot; /&gt;
&lt;figcaption&gt;The Eisvogel LaTeX template for Pandoc&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;In the end, I was facing two distinct and quite steep learning curves: getting the hang of LaTeX and Pandoc &lt;em&gt;at the same time&lt;/em&gt;, I got frightened and called quit.&lt;/p&gt;

&lt;h2 id=&quot;softcover&quot;&gt;Softcover&lt;/h2&gt;

&lt;p&gt;I did use &lt;a href=&quot;https://www.softcover.io/&quot;&gt;SoftCover&lt;/a&gt; for my &lt;em&gt;short book&lt;/em&gt; a while ago, and I was quite pleased. Keeping it to the book generation process alone (Softcover offer sales services too), it is based on an open-source Ruby command-line set of tools to process MarkDown in, and output PDF, plus &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.epub&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.mobi&lt;/code&gt;, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.html&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Softcover is more explicit in terms of intermediate steps, for it advocates the use of PolyTeX: &lt;em&gt;‚Äúa strict subset of the LaTeX typesetting language‚Äù&lt;/em&gt;. Quite interestingly, you‚Äôre allowed to mix-in some LaTeX in the MarkDown, that works in combination with the Softcover provided styles. The more LaTeX you know, the better you can customize them.&lt;/p&gt;

&lt;figure&gt;
&lt;img src=&quot;/wp-content/uploads/2019/10/softcover.jpg&quot; srcset=&quot;/wp-content/uploads/2019/10/softcover.jpg 1x, /wp-content/uploads/2019/10/softcover@2x.jpg 2x&quot; alt=&quot;The Softcover Manual&quot; /&gt;
&lt;figcaption&gt;The Softcover Manual&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;All in all, my experience with Softcover on the first book was OK. I had to tweak quite some things in the styles to my taste, and I‚Äôve copied and pasted from &lt;a href=&quot;https://tex.stackexchange.com&quot;&gt;TeX StackExchange&lt;/a&gt; more than a sensible developer would find appropriate ‚Äì without really knowing what I was doing. Still, I did like more the design that comes with Leanpub out-of-the-box; on the plus side, I enjoyed very much the local PDF generation and PolyTeX features such as named cross-references.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Since I‚Äôve mentioned them a couple of times already, a &lt;em&gt;named cross reference&lt;/em&gt; is a piece of text (could be a title, a listing, a table, etc.) to which you attach a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\label&lt;/code&gt;, and to which you can refer to with the same label. Magic happens because you automatically get both the correct numeration and name (here, ‚Äúfigure 1.2‚Äù).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure&gt;
&lt;img src=&quot;/wp-content/uploads/2019/10/cref.png&quot; srcset=&quot;/wp-content/uploads/2019/10/cref.png 1x, /wp-content/uploads/2019/10/cref@2x.png 2x&quot; alt=&quot;Named cross references&quot; /&gt;
&lt;figcaption&gt;Named cross references&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Unfortunately, when I got back to my one year old &lt;em&gt;short book&lt;/em&gt; markdown text to add some new content, the book generation failed. I couldn‚Äôt get to the root of the problem in a decent amount of time ‚Äì a Ruby version issue, some dependencies missing, who knows. That mishap did leave me with a vague ‚Äúlack of robustness‚Äù feeling: had I used Softcover more frequently, I would have been able to steer the wheel and correct any small issue that, inevitably, presented itself over time. But after such a long hiatus, I felt that using a tool on which I wasn‚Äôt in full control was too much of a gamble.&lt;/p&gt;

&lt;h2 id=&quot;affinity-publisher&quot;&gt;Affinity Publisher&lt;/h2&gt;

&lt;p&gt;I am a true believer on &lt;a href=&quot;https://affinity.serif.com&quot;&gt;Affinity&lt;/a&gt;‚Äôs products lineup, so I‚Äôve listed their Publisher instead of Adobe InDesign ‚Äì even if I‚Äôm more familiar with the latter than the former&lt;sup id=&quot;fnref:publisher&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:publisher&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;. That is to say that I have evaluated the possibility to build the book ‚Äúmanually‚Äù, with a page design application.&lt;/p&gt;

&lt;p&gt;I must confess that, even if I would have enjoyed the possibility to get a live, visual feedback and pixel precision positioning, I tend to keep InDesign and its breed at an arm distance whenever possible (which, thanks to my job, is not always): I‚Äôm afraid I just don‚Äôt like it. The idea to compose a short book, not to mention a long one, sounds dreadful to me.&lt;/p&gt;

&lt;figure&gt;
&lt;img src=&quot;/wp-content/uploads/2019/10/publisher.jpg&quot; srcset=&quot;/wp-content/uploads/2019/10/publisher.jpg 1x, /wp-content/uploads/2019/10/publisher@2x.jpg 2x&quot; alt=&quot;Affinity Publisher&quot; /&gt;
&lt;figcaption&gt;Affinity Publisher&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Besides, listings are not so easy to typeset on Publisher: you‚Äôd need to copy the code from, say, Visual Studio Code, paste it on Pages/Word, copy it again and eventually paste inside a Text Frame to retain the RTF information ‚Äì i.e. to keep the Syntax Highlighting. Which is a PITA for code maintenance and it doesn‚Äôt really scale up when the book grows. I‚Äôve logged a feature request for automated programming languages syntax highlighting on Affinity‚Äôs forums, and I‚Äôve moved on.&lt;/p&gt;

&lt;h2 id=&quot;latex&quot;&gt;LaTeX&lt;/h2&gt;

&lt;p&gt;Frankly, the idea of messing with master pages, character and paragraph styles, references, etc. on a page design application such as Affinity Publisher shedded a new, much brighter light on LaTeX. Which I started exploring. Given that I tend to fall in love with whatever piece of technology that you put in front of my nose, I tried to be unbiased.&lt;/p&gt;

&lt;p&gt;LaTeX is mostly used in academia, almost exclusively sciences and maths. It is known for providing an elegant typesetting out of the box, and equations so &lt;a href=&quot;https://www.nature.com/articles/d41586-019-01796-1&quot;&gt;beautifully drawn&lt;/a&gt; that mathematicians could stare at them for hours on end.&lt;/p&gt;

&lt;figure&gt;
&lt;img src=&quot;/wp-content/uploads/2019/10/math.png&quot; srcset=&quot;/wp-content/uploads/2019/10/math.png 1x, /wp-content/uploads/2019/10/math@2x.png 2x&quot; alt=&quot;LaTeX equations example&quot; /&gt;
&lt;figcaption&gt;LaTeX equations example&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Actually, it seems to have spread just because academic writers were such bad typesetters that they desperately needed some sort of tool that let them focus on the content only. That said, it strikes me that among the many hundreds of packages (i.e. add-on features) available for LaTeX, their documentation, that is obviously written in LaTeX, kind of stinks. Visually I mean, it‚Äôs ugly ‚Äì which is quite ironic I suppose.&lt;/p&gt;

&lt;p&gt;LaTeX is unfriendly to say the least: the learning curve is undoubtedly &lt;em&gt;steep&lt;/em&gt;. For some reason, it seems like documentation is chiefly reference-based, with rare occasional examples. You can easily find yourself browsing for 7 years old replies on TeX StackExchange thinking: ‚ÄúSweet, that is probably gonna work‚Äù (would it be a JavaScript library, a 7 months old reply has already a good chance to be outdated).&lt;/p&gt;

&lt;p&gt;I subscribe 100% to the author of &lt;a href=&quot;http://www.danielallington.net/2016/09/the-latex-fetish/&quot;&gt;The LaTeX Fetish (Or: Don‚Äôt write in LaTeX! It‚Äôs just for typesetting)&lt;/a&gt;, which has an interesting series of comments and replies. I could never write on LaTeX: it is too crowded, MarkDown is much less distracting to the eye. But I agree that LaTeX, a fossil from the past, still rocks as a typesetting tool.&lt;/p&gt;

&lt;p&gt;So, I thought: if Pandoc, Softcover, and Leanpub are all LaTeX based; if I seem unable to just hack my way through them; wouldn‚Äôt it be better if I started with the real thing from scratch? And so I did.&lt;/p&gt;

&lt;h2 id=&quot;my-latex-journey&quot;&gt;My LaTeX journey&lt;/h2&gt;

&lt;p&gt;First, I‚Äôve set a simple goal: re-typeset the &lt;em&gt;small book&lt;/em&gt;, that you may remember was built with Softcover so I had both the MarkDown and the PolyTeX code available.&lt;/p&gt;

&lt;p&gt;If you want to try LaTeX, head &lt;a href=&quot;https://www.latex-project.org/get/&quot;&gt;here&lt;/a&gt; and download the distribution for Mac, Win or Linux. Speaking of applications (IDEs), there are freewares such as &lt;a href=&quot;https://texstudio.org/&quot;&gt;TeXstudio&lt;/a&gt; or &lt;a href=&quot;https://pages.uoregon.edu/koch/texshop/&quot;&gt;TeXShop&lt;/a&gt;, but I‚Äôve found more user-friendly &lt;a href=&quot;https://www.texpad.com/&quot;&gt;Texpad&lt;/a&gt; (30$), or the free Visual Studio Code extension &lt;a href=&quot;https://github.com/James-Yu/LaTeX-Workshop&quot;&gt;LaTeX Workshop&lt;/a&gt;.&lt;/p&gt;

&lt;figure&gt;
&lt;img src=&quot;/wp-content/uploads/2019/10/texpad.png&quot; srcset=&quot;/wp-content/uploads/2019/10/texpad.png 1x, /wp-content/uploads/2019/10/texpad@2x.png 2x&quot; alt=&quot;The TexPad app, with almost-live preview&quot; /&gt;
&lt;figcaption&gt;The TexPad app, with almost-live preview&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;I‚Äôve started reading documentation and books: there are so many LaTeX Fetishists that manuals are abundant. In my experience, it is far better to start from a blank style (a file with a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.sty&lt;/code&gt; extension) and add pieces one by one, learning what they do as you insert them, instead of borrowing a complete style from somebody else and hack it to your taste.&lt;/p&gt;

&lt;p&gt;Line after line, I‚Äôve merged pieces from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Softcover.sty&lt;/code&gt;,  &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Eisvogel.sty&lt;/code&gt; and stuff I‚Äôve found online; apparently there is a package for everything, from footnotes to listings, quotes, colors, bookmarks, you name it&lt;sup id=&quot;fnref:packages&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:packages&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;. It would be impossible to list them all here ‚Äì the bottom-line is that creating a decent set of styles for a book that is at least up to Leanpub standards is in fact a doable task for anyone with some inclination to code tinkering. Dare I to say, I‚Äôve even got better listings üòâ&lt;/p&gt;

&lt;figure&gt;
&lt;img src=&quot;/wp-content/uploads/2019/10/listings.png&quot; srcset=&quot;/wp-content/uploads/2019/10/listings.png 1x, /wp-content/uploads/2019/10/listings@2x.png 2x&quot; alt=&quot;Custom styled listings&quot; /&gt;
&lt;figcaption&gt;Custom styled listings in LaTeX with the `listings` package&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;At this point I cannot call myself a LaTeX expert at all, but for sure a better hacker: at least I am able to understand what is in the realm of my possibilities and what‚Äôs better to keep away from. I‚Äôve succeeded in re-typesetting my &lt;em&gt;short book&lt;/em&gt; in two/three night-time weeks, for which I‚Äôm quite pleased.&lt;/p&gt;

&lt;h2 id=&quot;what-only-time-will-tell&quot;&gt;What only time will tell&lt;/h2&gt;

&lt;p&gt;It is to be seen whether I will perceive LaTeX as a robust solution, i.e. will the same source, untouched, compile flawlessly one year from now, on a different machine? I have the feeling that such is the case, unless my cat sits on the keyboard when I‚Äôm off the desk. LaTeX is just markup after all, and it is so modular that I doubt it will all crash.&lt;/p&gt;

&lt;p&gt;Now that I am slightly more acquainted with it, I may want to approach Pandoc again. No doubts that, as I‚Äôve mentioned before, LaTeX isn‚Äôt a tool for writing but typesetting: I still miss the MarkDown to PDF workflow. If I can manage to create a template for Pandoc that takes into account all my listings styles and the like, I‚Äôll be the happiest camper.&lt;/p&gt;

&lt;h2 id=&quot;conclusions&quot;&gt;Conclusions&lt;/h2&gt;

&lt;p&gt;As it has already happened countless times to me, learning is rarely a direct path from point A to point B. I still have to find my dream workflow, but I think the one I‚Äôve used ‚Äì unless proven otherwise ‚Äì is viable to say the least, and a good fit to the requirements I‚Äôve set.&lt;/p&gt;

&lt;p&gt;If you‚Äôre a technical writer feel free to comment below, I‚Äôm eager to listen to your experience. Thanks for reading!&lt;/p&gt;

&lt;hr /&gt;

&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:publisher&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;Let‚Äôs not forget that, to date, Affinity isn‚Äôt Subscription based; and it has never told its users they can get sued for using old versions, &lt;a href=&quot;https://www.vice.com/en_us/article/a3xk3p/adobe-tells-users-they-can-get-sued-for-using-old-versions-of-photoshop&quot;&gt;like Adobe&lt;/a&gt;‚Ä¶¬†&lt;a href=&quot;#fnref:publisher&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:packages&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;My understanding is that LaTeX is a macro-language on top of TeX, which is way too complex to be used right away. In addition to what comes built-in with LaTeX itself, you‚Äôre usually advised to load &lt;em&gt;packages&lt;/em&gt;: users contributed ‚Äúmacros‚Äù that make the process of implementing new features much easier.¬†&lt;a href=&quot;#fnref:packages&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
        <pubDate>Tue, 15 Oct 2019 00:00:00 +0200</pubDate>
        <link>http://localhost:4000/2019/10/2019-10-15-leanpub-alternatives-IMHO/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/10/2019-10-15-leanpub-alternatives-IMHO/</guid>
        
        <category>Leanpub</category>
        
        <category>Softcover</category>
        
        <category>Pandoc</category>
        
        <category>LaTeX</category>
        
        
        <category>Digital Publishing</category>
        
      </item>
    
  </channel>
</rss>
